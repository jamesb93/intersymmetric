{
  "desc": {
    "parameters": [
      {
        "type": "ParameterTypeNumber",
        "index": 0,
        "name": "numberobj_01_value",
        "paramId": "p_obj-3/p_obj-14/number_obj-19/value",
        "minimum": 1,
        "maximum": 16,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "numberobj_a1_s02"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 1,
        "name": "numberobj_02_value",
        "paramId": "p_obj-3/p_obj-14/number_obj-18/value",
        "minimum": 1,
        "maximum": 16,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "numberobj_a1_s01"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 2,
        "name": "numberobj_03_value",
        "paramId": "p_obj-3/p_obj-16/number_obj-19/value",
        "minimum": 1,
        "maximum": 16,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "numberobj_a1_s02"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 3,
        "name": "numberobj_04_value",
        "paramId": "p_obj-3/p_obj-16/number_obj-18/value",
        "minimum": 1,
        "maximum": 16,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "numberobj_a1_s01"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 4,
        "name": "numberobj_05_value",
        "paramId": "p_obj-3/p_obj-17/number_obj-19/value",
        "minimum": 1,
        "maximum": 16,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "numberobj_a1_s02"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 5,
        "name": "numberobj_06_value",
        "paramId": "p_obj-3/p_obj-17/number_obj-18/value",
        "minimum": 1,
        "maximum": 16,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "numberobj_a1_s01"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 6,
        "name": "numberobj_07_value",
        "paramId": "p_obj-3/p_obj-18/number_obj-19/value",
        "minimum": 1,
        "maximum": 16,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "numberobj_a1_s02"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 7,
        "name": "numberobj_08_value",
        "paramId": "p_obj-3/p_obj-18/number_obj-18/value",
        "minimum": 1,
        "maximum": 16,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "numberobj_a1_s01"
      },
      {
        "type": "ParameterTypeBang",
        "index": 8,
        "name": "message_01_bangval",
        "paramId": "p_obj-17/p_obj-29/message_obj-5/bangval",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": false,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "message_s07"
      },
      {
        "type": "ParameterTypeBang",
        "index": 9,
        "name": "message_02_bangval",
        "paramId": "p_obj-17/p_obj-29/message_obj-7/bangval",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": false,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "message_s06"
      },
      {
        "type": "ParameterTypeBang",
        "index": 10,
        "name": "message_03_bangval",
        "paramId": "p_obj-17/p_obj-29/message_obj-20/bangval",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": false,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "message_s05"
      },
      {
        "type": "ParameterTypeBang",
        "index": 11,
        "name": "message_04_bangval",
        "paramId": "p_obj-17/p_obj-29/message_obj-24/bangval",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": false,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "message_s04"
      },
      {
        "type": "ParameterTypeBang",
        "index": 12,
        "name": "message_05_bangval",
        "paramId": "p_obj-17/p_obj-29/message_obj-26/bangval",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": false,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "message_s03"
      },
      {
        "type": "ParameterTypeBang",
        "index": 13,
        "name": "message_06_bangval",
        "paramId": "p_obj-17/p_obj-29/message_obj-27/bangval",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": false,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "message_s02"
      },
      {
        "type": "ParameterTypeBang",
        "index": 14,
        "name": "message_07_bangval",
        "paramId": "p_obj-17/p_obj-29/message_obj-28/bangval",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": false,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "message_s01"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 15,
        "name": "toggle_01_value",
        "paramId": "p_obj-1/p_obj-2/toggle_obj-9/value",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "toggle_s01"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 16,
        "name": "toggle_02_value",
        "paramId": "p_obj-1/p_obj-12/toggle_obj-9/value",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "displayorder": "-",
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "toggle_s01"
      }
    ],
    "numParameters": 17,
    "numSignalInParameters": 0,
    "numSignalOutParameters": 0,
    "numInputChannels": 0,
    "numOutputChannels": 1,
    "numMidiInputPorts": 0,
    "numMidiOutputPorts": 0,
    "externalDataRefs": [
      {
        "id": "b.1",
        "type": "Float32Buffer"
      },
      {
        "id": "b.2",
        "type": "Float32Buffer"
      },
      {
        "id": "b.3",
        "type": "Float32Buffer"
      },
      {
        "id": "b.4",
        "type": "Float32Buffer"
      },
      {
        "id": "b.5",
        "type": "Float32Buffer"
      },
      {
        "id": "b.6",
        "type": "Float32Buffer"
      },
      {
        "id": "b.7",
        "type": "Float32Buffer"
      },
      {
        "id": "b.8",
        "type": "Float32Buffer"
      },
      {
        "id": "b.9",
        "type": "Float32Buffer"
      },
      {
        "id": "b.10",
        "type": "Float32Buffer"
      },
      {
        "id": "b.11",
        "type": "Float32Buffer"
      },
      {
        "id": "b.12",
        "type": "Float32Buffer"
      },
      {
        "id": "b.13",
        "type": "Float32Buffer"
      },
      {
        "id": "b.14",
        "type": "Float32Buffer"
      },
      {
        "id": "b.15",
        "type": "Float32Buffer"
      },
      {
        "id": "b.16",
        "type": "Float32Buffer"
      },
      {
        "id": "b.17",
        "type": "Float32Buffer"
      },
      {
        "id": "b.18",
        "type": "Float32Buffer"
      },
      {
        "id": "b.19",
        "type": "Float32Buffer"
      },
      {
        "id": "b.20",
        "type": "Float32Buffer"
      },
      {
        "id": "b.21",
        "type": "Float32Buffer"
      },
      {
        "id": "b.22",
        "type": "Float32Buffer"
      },
      {
        "id": "b.23",
        "type": "Float32Buffer"
      },
      {
        "id": "b.24",
        "type": "Float32Buffer"
      },
      {
        "id": "b.25",
        "type": "Float32Buffer"
      },
      {
        "id": "b.26",
        "type": "Float32Buffer"
      },
      {
        "id": "b.27",
        "type": "Float32Buffer"
      },
      {
        "id": "b.28",
        "type": "Float32Buffer"
      },
      {
        "id": "b.29",
        "type": "Float32Buffer"
      },
      {
        "id": "b.30",
        "type": "Float32Buffer"
      },
      {
        "id": "b.31",
        "type": "Float32Buffer"
      },
      {
        "id": "b.32",
        "type": "Float32Buffer"
      },
      {
        "id": "b.33",
        "type": "Float32Buffer"
      },
      {
        "id": "b.34",
        "type": "Float32Buffer"
      },
      {
        "id": "samples",
        "type": "Float32MultiBuffer"
      }
    ],
    "patcherSerial": 0,
    "inports": [
      {
        "tag": "state",
        "meta": ""
      },
      {
        "tag": "rate",
        "meta": ""
      },
      {
        "tag": "global_cycle",
        "meta": ""
      },
      {
        "tag": "sampler_params",
        "meta": ""
      },
      {
        "tag": "state",
        "meta": ""
      },
      {
        "tag": "polymetric_params",
        "meta": ""
      },
      {
        "tag": "chordfollow",
        "meta": ""
      },
      {
        "tag": "chordsampler",
        "meta": ""
      },
      {
        "tag": "chordscale",
        "meta": ""
      },
      {
        "tag": "retrigger_params",
        "meta": ""
      }
    ],
    "outports": [
      {
        "tag": "pips",
        "meta": ""
      },
      {
        "tag": "blip",
        "meta": ""
      }
    ],
    "inlets": [],
    "outlets": [
      {
        "type": "signal",
        "index": 1,
        "tag": "out1",
        "meta": ""
      }
    ],
    "paramConversion": {
      "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
      "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_22.getNumParameters())\n            return this.p_22.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_22.getNumParameters();\n\n        if (index < this.p_23.getNumParameters())\n            return this.p_23.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_23.getNumParameters();\n\n        if (index < this.p_24.getNumParameters())\n            return this.p_24.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_24.getNumParameters();\n\n        if (index < this.p_25.getNumParameters())\n            return this.p_25.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_25.getNumParameters();\n\n        if (index < this.p_26.getNumParameters())\n            return this.p_26.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_26.getNumParameters();\n\n        if (index < this.p_27.getNumParameters())\n            return this.p_27.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_27.getNumParameters();\n\n        if (index < this.p_28.getNumParameters())\n            return this.p_28.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
      "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_22.getNumParameters())\n            return this.p_22.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_22.getNumParameters();\n\n        if (index < this.p_23.getNumParameters())\n            return this.p_23.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_23.getNumParameters();\n\n        if (index < this.p_24.getNumParameters())\n            return this.p_24.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_24.getNumParameters();\n\n        if (index < this.p_25.getNumParameters())\n            return this.p_25.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_25.getNumParameters();\n\n        if (index < this.p_26.getNumParameters())\n            return this.p_26.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_26.getNumParameters();\n\n        if (index < this.p_27.getNumParameters())\n            return this.p_27.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_27.getNumParameters();\n\n        if (index < this.p_28.getNumParameters())\n            return this.p_28.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
      "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_22.getNumParameters() + this.p_23.getNumParameters() + this.p_24.getNumParameters() + this.p_25.getNumParameters() + this.p_26.getNumParameters() + this.p_27.getNumParameters() + this.p_28.getNumParameters();\n}",
      "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_22.getNumParameters())\n            return this.p_22.constrainParameterValue(index, value);\n\n        index -= this.p_22.getNumParameters();\n\n        if (index < this.p_23.getNumParameters())\n            return this.p_23.constrainParameterValue(index, value);\n\n        index -= this.p_23.getNumParameters();\n\n        if (index < this.p_24.getNumParameters())\n            return this.p_24.constrainParameterValue(index, value);\n\n        index -= this.p_24.getNumParameters();\n\n        if (index < this.p_25.getNumParameters())\n            return this.p_25.constrainParameterValue(index, value);\n\n        index -= this.p_25.getNumParameters();\n\n        if (index < this.p_26.getNumParameters())\n            return this.p_26.constrainParameterValue(index, value);\n\n        index -= this.p_26.getNumParameters();\n\n        if (index < this.p_27.getNumParameters())\n            return this.p_27.constrainParameterValue(index, value);\n\n        index -= this.p_27.getNumParameters();\n\n        if (index < this.p_28.getNumParameters())\n            return this.p_28.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
      "subpatches": {
        "p_22": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_01.getNumParameters();\n\n        if (index < this.p_02.getNumParameters())\n            return this.p_02.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_02.getNumParameters();\n\n        if (index < this.p_03.getNumParameters())\n            return this.p_03.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_03.getNumParameters();\n\n        if (index < this.p_04.getNumParameters())\n            return this.p_04.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_01.getNumParameters();\n\n        if (index < this.p_02.getNumParameters())\n            return this.p_02.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_02.getNumParameters();\n\n        if (index < this.p_03.getNumParameters())\n            return this.p_03.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_03.getNumParameters();\n\n        if (index < this.p_04.getNumParameters())\n            return this.p_04.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_01.getNumParameters() + this.p_02.getNumParameters() + this.p_03.getNumParameters() + this.p_04.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.constrainParameterValue(index, value);\n\n        index -= this.p_01.getNumParameters();\n\n        if (index < this.p_02.getNumParameters())\n            return this.p_02.constrainParameterValue(index, value);\n\n        index -= this.p_02.getNumParameters();\n\n        if (index < this.p_03.getNumParameters())\n            return this.p_03.constrainParameterValue(index, value);\n\n        index -= this.p_03.getNumParameters();\n\n        if (index < this.p_04.getNumParameters())\n            return this.p_04.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_01": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_02": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_03": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_04": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_23": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_24": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_09.getNumParameters())\n            return this.p_09.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_09.getNumParameters();\n\n        if (index < this.p_10.getNumParameters())\n            return this.p_10.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_10.getNumParameters();\n\n        if (index < this.p_11.getNumParameters())\n            return this.p_11.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_11.getNumParameters();\n\n        if (index < this.p_12.getNumParameters())\n            return this.p_12.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_09.getNumParameters())\n            return this.p_09.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_09.getNumParameters();\n\n        if (index < this.p_10.getNumParameters())\n            return this.p_10.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_10.getNumParameters();\n\n        if (index < this.p_11.getNumParameters())\n            return this.p_11.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_11.getNumParameters();\n\n        if (index < this.p_12.getNumParameters())\n            return this.p_12.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_09.getNumParameters() + this.p_10.getNumParameters() + this.p_11.getNumParameters() + this.p_12.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_09.getNumParameters())\n            return this.p_09.constrainParameterValue(index, value);\n\n        index -= this.p_09.getNumParameters();\n\n        if (index < this.p_10.getNumParameters())\n            return this.p_10.constrainParameterValue(index, value);\n\n        index -= this.p_10.getNumParameters();\n\n        if (index < this.p_11.getNumParameters())\n            return this.p_11.constrainParameterValue(index, value);\n\n        index -= this.p_11.getNumParameters();\n\n        if (index < this.p_12.getNumParameters())\n            return this.p_12.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_09": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n    case 1:\n        {\n            value = (value < 1 ? 1 : (value > 16 ? 16 : value));\n            let normalizedValue = (value - 1) / (16 - 1);\n            return normalizedValue;\n        }\n    default:\n        index -= 2;\n\n        if (index < this.p_05.getNumParameters())\n            return this.p_05.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n    case 1:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 1 + value * (16 - 1);\n            }\n        }\n    default:\n        index -= 2;\n\n        if (index < this.p_05.getNumParameters())\n            return this.p_05.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 2 + this.p_05.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 2;\n\n        if (index < this.p_05.getNumParameters())\n            return this.p_05.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_05": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_10": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n    case 1:\n        {\n            value = (value < 1 ? 1 : (value > 16 ? 16 : value));\n            let normalizedValue = (value - 1) / (16 - 1);\n            return normalizedValue;\n        }\n    default:\n        index -= 2;\n\n        if (index < this.p_06.getNumParameters())\n            return this.p_06.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n    case 1:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 1 + value * (16 - 1);\n            }\n        }\n    default:\n        index -= 2;\n\n        if (index < this.p_06.getNumParameters())\n            return this.p_06.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 2 + this.p_06.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 2;\n\n        if (index < this.p_06.getNumParameters())\n            return this.p_06.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_06": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_11": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n    case 1:\n        {\n            value = (value < 1 ? 1 : (value > 16 ? 16 : value));\n            let normalizedValue = (value - 1) / (16 - 1);\n            return normalizedValue;\n        }\n    default:\n        index -= 2;\n\n        if (index < this.p_07.getNumParameters())\n            return this.p_07.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n    case 1:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 1 + value * (16 - 1);\n            }\n        }\n    default:\n        index -= 2;\n\n        if (index < this.p_07.getNumParameters())\n            return this.p_07.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 2 + this.p_07.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 2;\n\n        if (index < this.p_07.getNumParameters())\n            return this.p_07.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_07": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_12": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n    case 1:\n        {\n            value = (value < 1 ? 1 : (value > 16 ? 16 : value));\n            let normalizedValue = (value - 1) / (16 - 1);\n            return normalizedValue;\n        }\n    default:\n        index -= 2;\n\n        if (index < this.p_08.getNumParameters())\n            return this.p_08.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n    case 1:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 1 + value * (16 - 1);\n            }\n        }\n    default:\n        index -= 2;\n\n        if (index < this.p_08.getNumParameters())\n            return this.p_08.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 2 + this.p_08.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 2;\n\n        if (index < this.p_08.getNumParameters())\n            return this.p_08.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_08": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_25": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_26": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_13.getNumParameters())\n            return this.p_13.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_13.getNumParameters();\n\n        if (index < this.p_14.getNumParameters())\n            return this.p_14.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_14.getNumParameters();\n\n        if (index < this.p_15.getNumParameters())\n            return this.p_15.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_13.getNumParameters())\n            return this.p_13.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_13.getNumParameters();\n\n        if (index < this.p_14.getNumParameters())\n            return this.p_14.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_14.getNumParameters();\n\n        if (index < this.p_15.getNumParameters())\n            return this.p_15.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_13.getNumParameters() + this.p_14.getNumParameters() + this.p_15.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_13.getNumParameters())\n            return this.p_13.constrainParameterValue(index, value);\n\n        index -= this.p_13.getNumParameters();\n\n        if (index < this.p_14.getNumParameters())\n            return this.p_14.constrainParameterValue(index, value);\n\n        index -= this.p_14.getNumParameters();\n\n        if (index < this.p_15.getNumParameters())\n            return this.p_15.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_13": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_14": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_15": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 7;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_27": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_18.getNumParameters())\n            return this.p_18.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_18.getNumParameters();\n\n        if (index < this.p_19.getNumParameters())\n            return this.p_19.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_18.getNumParameters())\n            return this.p_18.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_18.getNumParameters();\n\n        if (index < this.p_19.getNumParameters())\n            return this.p_19.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_18.getNumParameters() + this.p_19.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_18.getNumParameters())\n            return this.p_18.constrainParameterValue(index, value);\n\n        index -= this.p_18.getNumParameters();\n\n        if (index < this.p_19.getNumParameters())\n            return this.p_19.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_18": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    default:\n        index -= 1;\n\n        if (index < this.p_16.getNumParameters())\n            return this.p_16.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    default:\n        index -= 1;\n\n        if (index < this.p_16.getNumParameters())\n            return this.p_16.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 1 + this.p_16.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 1;\n\n        if (index < this.p_16.getNumParameters())\n            return this.p_16.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_16": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_19": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    default:\n        index -= 1;\n\n        if (index < this.p_17.getNumParameters())\n            return this.p_17.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    default:\n        index -= 1;\n\n        if (index < this.p_17.getNumParameters())\n            return this.p_17.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 1 + this.p_17.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 1;\n\n        if (index < this.p_17.getNumParameters())\n            return this.p_17.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_17": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_28": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_20.getNumParameters())\n            return this.p_20.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_20.getNumParameters();\n\n        if (index < this.p_21.getNumParameters())\n            return this.p_21.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_20.getNumParameters())\n            return this.p_20.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_20.getNumParameters();\n\n        if (index < this.p_21.getNumParameters())\n            return this.p_21.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_20.getNumParameters() + this.p_21.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_20.getNumParameters())\n            return this.p_20.constrainParameterValue(index, value);\n\n        index -= this.p_20.getNumParameters();\n\n        if (index < this.p_21.getNumParameters())\n            return this.p_21.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_20": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_21": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        }
      },
      "isPolyphonic": false
    },
    "presetid": "rnbo",
    "meta": {
      "architecture": "x64",
      "filename": "nyege.maxpat",
      "maxversion": "8.5.2",
      "rnboversion": "1.1.0-dev.25"
    }
  },
  "presets": [
    {
      "name": "main",
      "preset": {}
    }
  ],
  "src": [
    {
      "code": "",
      "compression": "zlib",
      "encoding": "base64",
      "type": "wasm"
    }
  ]
}