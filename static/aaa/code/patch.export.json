{
  "desc": {
    "parameters": [],
    "numParameters": 0,
    "numSignalInParameters": 0,
    "numSignalOutParameters": 0,
    "numInputChannels": 0,
    "numOutputChannels": 1,
    "numMidiInputPorts": 0,
    "numMidiOutputPorts": 0,
    "externalDataRefs": [
      {
        "id": "buf9"
      },
      {
        "id": "buf8"
      },
      {
        "id": "buf7"
      },
      {
        "id": "buf6"
      },
      {
        "id": "buf5"
      },
      {
        "id": "buf4"
      },
      {
        "id": "buf3"
      },
      {
        "id": "buf2"
      },
      {
        "id": "buf1"
      },
      {
        "id": "buf0"
      },
      {
        "id": "buf19"
      },
      {
        "id": "buf18"
      },
      {
        "id": "buf17"
      },
      {
        "id": "buf16"
      },
      {
        "id": "buf15"
      },
      {
        "id": "buf14"
      },
      {
        "id": "buf13"
      },
      {
        "id": "buf12"
      },
      {
        "id": "buf11"
      },
      {
        "id": "buf10"
      },
      {
        "id": "buf29"
      },
      {
        "id": "buf28"
      },
      {
        "id": "buf27"
      },
      {
        "id": "buf26"
      },
      {
        "id": "buf25"
      },
      {
        "id": "buf24"
      },
      {
        "id": "buf23"
      },
      {
        "id": "buf22"
      },
      {
        "id": "buf21"
      },
      {
        "id": "buf20"
      },
      {
        "id": "buf39"
      },
      {
        "id": "buf38"
      },
      {
        "id": "buf37"
      },
      {
        "id": "buf36"
      },
      {
        "id": "buf35"
      },
      {
        "id": "buf34"
      },
      {
        "id": "buf33"
      },
      {
        "id": "buf32"
      },
      {
        "id": "buf31"
      },
      {
        "id": "buf30"
      },
      {
        "id": "buf49"
      },
      {
        "id": "buf48"
      },
      {
        "id": "buf47"
      },
      {
        "id": "buf46"
      },
      {
        "id": "buf45"
      },
      {
        "id": "buf44"
      },
      {
        "id": "buf43"
      },
      {
        "id": "buf42"
      },
      {
        "id": "buf41"
      },
      {
        "id": "buf40"
      }
    ],
    "patcherSerial": 1,
    "inports": [
      "fm1_listener",
      "fm1_unision",
      "fm2_listener",
      "fm2_unision",
      "perc_listener",
      "speed",
      "b_mode",
      "state",
      "b_steps",
      "c_listener",
      "c_mode",
      "c_steps",
      "a_mode",
      "a_steps",
      "fm1_r_c3ratio",
      "fm1_3to1",
      null,
      "fm2_c3release",
      "fm2_r_c3release"
    ],
    "outports": [
      "pattern",
      "c_event",
      "b_event",
      "a_event",
      "b_index",
      "c_index",
      "filter"
    ],
    "inlets": [],
    "outlets": [
      {
        "type": "signal",
        "index": 1,
        "tag": "out1"
      }
    ],
    "paramConversion": {
      "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
      "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_83.getNumParameters())\n            return this.p_83.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_83.getNumParameters();\n\n        if (index < this.p_84.getNumParameters())\n            return this.p_84.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_84.getNumParameters();\n\n        if (index < this.p_85.getNumParameters())\n            return this.p_85.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_85.getNumParameters();\n\n        if (index < this.p_86.getNumParameters())\n            return this.p_86.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_86.getNumParameters();\n\n        if (index < this.p_87.getNumParameters())\n            return this.p_87.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_87.getNumParameters();\n\n        if (index < this.p_88.getNumParameters())\n            return this.p_88.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_88.getNumParameters();\n\n        if (index < this.p_89.getNumParameters())\n            return this.p_89.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_89.getNumParameters();\n\n        if (index < this.p_90.getNumParameters())\n            return this.p_90.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_90.getNumParameters();\n\n        if (index < this.p_91.getNumParameters())\n            return this.p_91.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_91.getNumParameters();\n\n        if (index < this.p_92.getNumParameters())\n            return this.p_92.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_92.getNumParameters();\n\n        if (index < this.p_93.getNumParameters())\n            return this.p_93.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_93.getNumParameters();\n\n        if (index < this.p_94.getNumParameters())\n            return this.p_94.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_94.getNumParameters();\n\n        if (index < this.p_95.getNumParameters())\n            return this.p_95.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_95.getNumParameters();\n\n        if (index < this.p_96.getNumParameters())\n            return this.p_96.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_96.getNumParameters();\n\n        if (index < this.p_97.getNumParameters())\n            return this.p_97.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_97.getNumParameters();\n\n        if (index < this.p_98.getNumParameters())\n            return this.p_98.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_98.getNumParameters();\n\n        if (index < this.p_99.getNumParameters())\n            return this.p_99.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_99.getNumParameters();\n\n        if (index < this.p_100.getNumParameters())\n            return this.p_100.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_100.getNumParameters();\n\n        if (index < this.p_101.getNumParameters())\n            return this.p_101.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
      "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_83.getNumParameters())\n            return this.p_83.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_83.getNumParameters();\n\n        if (index < this.p_84.getNumParameters())\n            return this.p_84.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_84.getNumParameters();\n\n        if (index < this.p_85.getNumParameters())\n            return this.p_85.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_85.getNumParameters();\n\n        if (index < this.p_86.getNumParameters())\n            return this.p_86.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_86.getNumParameters();\n\n        if (index < this.p_87.getNumParameters())\n            return this.p_87.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_87.getNumParameters();\n\n        if (index < this.p_88.getNumParameters())\n            return this.p_88.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_88.getNumParameters();\n\n        if (index < this.p_89.getNumParameters())\n            return this.p_89.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_89.getNumParameters();\n\n        if (index < this.p_90.getNumParameters())\n            return this.p_90.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_90.getNumParameters();\n\n        if (index < this.p_91.getNumParameters())\n            return this.p_91.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_91.getNumParameters();\n\n        if (index < this.p_92.getNumParameters())\n            return this.p_92.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_92.getNumParameters();\n\n        if (index < this.p_93.getNumParameters())\n            return this.p_93.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_93.getNumParameters();\n\n        if (index < this.p_94.getNumParameters())\n            return this.p_94.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_94.getNumParameters();\n\n        if (index < this.p_95.getNumParameters())\n            return this.p_95.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_95.getNumParameters();\n\n        if (index < this.p_96.getNumParameters())\n            return this.p_96.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_96.getNumParameters();\n\n        if (index < this.p_97.getNumParameters())\n            return this.p_97.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_97.getNumParameters();\n\n        if (index < this.p_98.getNumParameters())\n            return this.p_98.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_98.getNumParameters();\n\n        if (index < this.p_99.getNumParameters())\n            return this.p_99.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_99.getNumParameters();\n\n        if (index < this.p_100.getNumParameters())\n            return this.p_100.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_100.getNumParameters();\n\n        if (index < this.p_101.getNumParameters())\n            return this.p_101.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
      "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_83.getNumParameters() + this.p_84.getNumParameters() + this.p_85.getNumParameters() + this.p_86.getNumParameters() + this.p_87.getNumParameters() + this.p_88.getNumParameters() + this.p_89.getNumParameters() + this.p_90.getNumParameters() + this.p_91.getNumParameters() + this.p_92.getNumParameters() + this.p_93.getNumParameters() + this.p_94.getNumParameters() + this.p_95.getNumParameters() + this.p_96.getNumParameters() + this.p_97.getNumParameters() + this.p_98.getNumParameters() + this.p_99.getNumParameters() + this.p_100.getNumParameters() + this.p_101.getNumParameters();\n}",
      "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_83.getNumParameters())\n            return this.p_83.constrainParameterValue(index, value);\n\n        index -= this.p_83.getNumParameters();\n\n        if (index < this.p_84.getNumParameters())\n            return this.p_84.constrainParameterValue(index, value);\n\n        index -= this.p_84.getNumParameters();\n\n        if (index < this.p_85.getNumParameters())\n            return this.p_85.constrainParameterValue(index, value);\n\n        index -= this.p_85.getNumParameters();\n\n        if (index < this.p_86.getNumParameters())\n            return this.p_86.constrainParameterValue(index, value);\n\n        index -= this.p_86.getNumParameters();\n\n        if (index < this.p_87.getNumParameters())\n            return this.p_87.constrainParameterValue(index, value);\n\n        index -= this.p_87.getNumParameters();\n\n        if (index < this.p_88.getNumParameters())\n            return this.p_88.constrainParameterValue(index, value);\n\n        index -= this.p_88.getNumParameters();\n\n        if (index < this.p_89.getNumParameters())\n            return this.p_89.constrainParameterValue(index, value);\n\n        index -= this.p_89.getNumParameters();\n\n        if (index < this.p_90.getNumParameters())\n            return this.p_90.constrainParameterValue(index, value);\n\n        index -= this.p_90.getNumParameters();\n\n        if (index < this.p_91.getNumParameters())\n            return this.p_91.constrainParameterValue(index, value);\n\n        index -= this.p_91.getNumParameters();\n\n        if (index < this.p_92.getNumParameters())\n            return this.p_92.constrainParameterValue(index, value);\n\n        index -= this.p_92.getNumParameters();\n\n        if (index < this.p_93.getNumParameters())\n            return this.p_93.constrainParameterValue(index, value);\n\n        index -= this.p_93.getNumParameters();\n\n        if (index < this.p_94.getNumParameters())\n            return this.p_94.constrainParameterValue(index, value);\n\n        index -= this.p_94.getNumParameters();\n\n        if (index < this.p_95.getNumParameters())\n            return this.p_95.constrainParameterValue(index, value);\n\n        index -= this.p_95.getNumParameters();\n\n        if (index < this.p_96.getNumParameters())\n            return this.p_96.constrainParameterValue(index, value);\n\n        index -= this.p_96.getNumParameters();\n\n        if (index < this.p_97.getNumParameters())\n            return this.p_97.constrainParameterValue(index, value);\n\n        index -= this.p_97.getNumParameters();\n\n        if (index < this.p_98.getNumParameters())\n            return this.p_98.constrainParameterValue(index, value);\n\n        index -= this.p_98.getNumParameters();\n\n        if (index < this.p_99.getNumParameters())\n            return this.p_99.constrainParameterValue(index, value);\n\n        index -= this.p_99.getNumParameters();\n\n        if (index < this.p_100.getNumParameters())\n            return this.p_100.constrainParameterValue(index, value);\n\n        index -= this.p_100.getNumParameters();\n\n        if (index < this.p_101.getNumParameters())\n            return this.p_101.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
      "subpatches": {
        "p_83": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_84": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_85": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_05[0].getNumParameters()) {\n            for (var i = 0; i < 64; i++) {\n                return this.p_05[i].convertToNormalizedParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_05[0].getNumParameters()) {\n            for (var i = 0; i < 64; i++) {\n                return this.p_05[i].convertFromNormalizedParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_05[0].getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_05[0].getNumParameters()) {\n            for (var i = 0; i < 64; i++) {\n                return this.p_05[i].constrainParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_05": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_01.getNumParameters();\n\n        if (index < this.p_02.getNumParameters())\n            return this.p_02.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_02.getNumParameters();\n\n        if (index < this.p_03.getNumParameters())\n            return this.p_03.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_03.getNumParameters();\n\n        if (index < this.p_04.getNumParameters())\n            return this.p_04.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_01.getNumParameters();\n\n        if (index < this.p_02.getNumParameters())\n            return this.p_02.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_02.getNumParameters();\n\n        if (index < this.p_03.getNumParameters())\n            return this.p_03.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_03.getNumParameters();\n\n        if (index < this.p_04.getNumParameters())\n            return this.p_04.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_01.getNumParameters() + this.p_02.getNumParameters() + this.p_03.getNumParameters() + this.p_04.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.constrainParameterValue(index, value);\n\n        index -= this.p_01.getNumParameters();\n\n        if (index < this.p_02.getNumParameters())\n            return this.p_02.constrainParameterValue(index, value);\n\n        index -= this.p_02.getNumParameters();\n\n        if (index < this.p_03.getNumParameters())\n            return this.p_03.constrainParameterValue(index, value);\n\n        index -= this.p_03.getNumParameters();\n\n        if (index < this.p_04.getNumParameters())\n            return this.p_04.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_01": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_02": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_03": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_04": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": true
            }
          },
          "isPolyphonic": false
        },
        "p_86": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_09.getNumParameters())\n            return this.p_09.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_09.getNumParameters();\n\n        if (index < this.p_10.getNumParameters())\n            return this.p_10.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_10.getNumParameters();\n\n        if (index < this.p_11.getNumParameters())\n            return this.p_11.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_11.getNumParameters();\n\n        if (index < this.p_12.getNumParameters())\n            return this.p_12.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_12.getNumParameters();\n\n        if (index < this.p_13.getNumParameters())\n            return this.p_13.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_13.getNumParameters();\n\n        if (index < this.p_14.getNumParameters())\n            return this.p_14.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_14.getNumParameters();\n\n        if (index < this.p_15.getNumParameters())\n            return this.p_15.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_15.getNumParameters();\n\n        if (index < this.p_16.getNumParameters())\n            return this.p_16.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_16.getNumParameters();\n\n        if (index < this.p_17.getNumParameters())\n            return this.p_17.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_17.getNumParameters();\n\n        if (index < this.p_18.getNumParameters())\n            return this.p_18.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_18.getNumParameters();\n\n        if (index < this.p_19.getNumParameters())\n            return this.p_19.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_19.getNumParameters();\n\n        if (index < this.p_20.getNumParameters())\n            return this.p_20.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_20.getNumParameters();\n\n        if (index < this.p_21.getNumParameters())\n            return this.p_21.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_21.getNumParameters();\n\n        if (index < this.p_22.getNumParameters())\n            return this.p_22.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_22.getNumParameters();\n\n        if (index < this.p_23.getNumParameters())\n            return this.p_23.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_23.getNumParameters();\n\n        if (index < this.p_24.getNumParameters())\n            return this.p_24.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_24.getNumParameters();\n\n        if (index < this.p_25.getNumParameters())\n            return this.p_25.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_09.getNumParameters())\n            return this.p_09.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_09.getNumParameters();\n\n        if (index < this.p_10.getNumParameters())\n            return this.p_10.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_10.getNumParameters();\n\n        if (index < this.p_11.getNumParameters())\n            return this.p_11.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_11.getNumParameters();\n\n        if (index < this.p_12.getNumParameters())\n            return this.p_12.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_12.getNumParameters();\n\n        if (index < this.p_13.getNumParameters())\n            return this.p_13.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_13.getNumParameters();\n\n        if (index < this.p_14.getNumParameters())\n            return this.p_14.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_14.getNumParameters();\n\n        if (index < this.p_15.getNumParameters())\n            return this.p_15.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_15.getNumParameters();\n\n        if (index < this.p_16.getNumParameters())\n            return this.p_16.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_16.getNumParameters();\n\n        if (index < this.p_17.getNumParameters())\n            return this.p_17.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_17.getNumParameters();\n\n        if (index < this.p_18.getNumParameters())\n            return this.p_18.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_18.getNumParameters();\n\n        if (index < this.p_19.getNumParameters())\n            return this.p_19.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_19.getNumParameters();\n\n        if (index < this.p_20.getNumParameters())\n            return this.p_20.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_20.getNumParameters();\n\n        if (index < this.p_21.getNumParameters())\n            return this.p_21.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_21.getNumParameters();\n\n        if (index < this.p_22.getNumParameters())\n            return this.p_22.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_22.getNumParameters();\n\n        if (index < this.p_23.getNumParameters())\n            return this.p_23.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_23.getNumParameters();\n\n        if (index < this.p_24.getNumParameters())\n            return this.p_24.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_24.getNumParameters();\n\n        if (index < this.p_25.getNumParameters())\n            return this.p_25.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_09.getNumParameters() + this.p_10.getNumParameters() + this.p_11.getNumParameters() + this.p_12.getNumParameters() + this.p_13.getNumParameters() + this.p_14.getNumParameters() + this.p_15.getNumParameters() + this.p_16.getNumParameters() + this.p_17.getNumParameters() + this.p_18.getNumParameters() + this.p_19.getNumParameters() + this.p_20.getNumParameters() + this.p_21.getNumParameters() + this.p_22.getNumParameters() + this.p_23.getNumParameters() + this.p_24.getNumParameters() + this.p_25.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_09.getNumParameters())\n            return this.p_09.constrainParameterValue(index, value);\n\n        index -= this.p_09.getNumParameters();\n\n        if (index < this.p_10.getNumParameters())\n            return this.p_10.constrainParameterValue(index, value);\n\n        index -= this.p_10.getNumParameters();\n\n        if (index < this.p_11.getNumParameters())\n            return this.p_11.constrainParameterValue(index, value);\n\n        index -= this.p_11.getNumParameters();\n\n        if (index < this.p_12.getNumParameters())\n            return this.p_12.constrainParameterValue(index, value);\n\n        index -= this.p_12.getNumParameters();\n\n        if (index < this.p_13.getNumParameters())\n            return this.p_13.constrainParameterValue(index, value);\n\n        index -= this.p_13.getNumParameters();\n\n        if (index < this.p_14.getNumParameters())\n            return this.p_14.constrainParameterValue(index, value);\n\n        index -= this.p_14.getNumParameters();\n\n        if (index < this.p_15.getNumParameters())\n            return this.p_15.constrainParameterValue(index, value);\n\n        index -= this.p_15.getNumParameters();\n\n        if (index < this.p_16.getNumParameters())\n            return this.p_16.constrainParameterValue(index, value);\n\n        index -= this.p_16.getNumParameters();\n\n        if (index < this.p_17.getNumParameters())\n            return this.p_17.constrainParameterValue(index, value);\n\n        index -= this.p_17.getNumParameters();\n\n        if (index < this.p_18.getNumParameters())\n            return this.p_18.constrainParameterValue(index, value);\n\n        index -= this.p_18.getNumParameters();\n\n        if (index < this.p_19.getNumParameters())\n            return this.p_19.constrainParameterValue(index, value);\n\n        index -= this.p_19.getNumParameters();\n\n        if (index < this.p_20.getNumParameters())\n            return this.p_20.constrainParameterValue(index, value);\n\n        index -= this.p_20.getNumParameters();\n\n        if (index < this.p_21.getNumParameters())\n            return this.p_21.constrainParameterValue(index, value);\n\n        index -= this.p_21.getNumParameters();\n\n        if (index < this.p_22.getNumParameters())\n            return this.p_22.constrainParameterValue(index, value);\n\n        index -= this.p_22.getNumParameters();\n\n        if (index < this.p_23.getNumParameters())\n            return this.p_23.constrainParameterValue(index, value);\n\n        index -= this.p_23.getNumParameters();\n\n        if (index < this.p_24.getNumParameters())\n            return this.p_24.constrainParameterValue(index, value);\n\n        index -= this.p_24.getNumParameters();\n\n        if (index < this.p_25.getNumParameters())\n            return this.p_25.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_09": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_10": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_11": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_12": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_13": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_14": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_15": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_16": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_06.getNumParameters())\n            return this.p_06.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_06.getNumParameters())\n            return this.p_06.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_06.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_06.getNumParameters())\n            return this.p_06.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_06": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_17": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_18": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_07.getNumParameters())\n            return this.p_07.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_07.getNumParameters())\n            return this.p_07.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_07.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_07.getNumParameters())\n            return this.p_07.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_07": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_19": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_20": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_08.getNumParameters())\n            return this.p_08.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_08.getNumParameters())\n            return this.p_08.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_08.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_08.getNumParameters())\n            return this.p_08.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_08": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_21": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_22": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_23": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_24": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_25": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_87": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_26.getNumParameters())\n            return this.p_26.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_26.getNumParameters();\n\n        if (index < this.p_27.getNumParameters())\n            return this.p_27.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_27.getNumParameters();\n\n        if (index < this.p_28.getNumParameters())\n            return this.p_28.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_28.getNumParameters();\n\n        if (index < this.p_29.getNumParameters())\n            return this.p_29.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_29.getNumParameters();\n\n        if (index < this.p_30.getNumParameters())\n            return this.p_30.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_30.getNumParameters();\n\n        if (index < this.p_31.getNumParameters())\n            return this.p_31.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_31.getNumParameters();\n\n        if (index < this.p_32.getNumParameters())\n            return this.p_32.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_32.getNumParameters();\n\n        if (index < this.p_33.getNumParameters())\n            return this.p_33.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_33.getNumParameters();\n\n        if (index < this.p_34.getNumParameters())\n            return this.p_34.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_34.getNumParameters();\n\n        if (index < this.p_35.getNumParameters())\n            return this.p_35.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_35.getNumParameters();\n\n        if (index < this.p_36.getNumParameters())\n            return this.p_36.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_36.getNumParameters();\n\n        if (index < this.p_37.getNumParameters())\n            return this.p_37.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_37.getNumParameters();\n\n        if (index < this.p_38.getNumParameters())\n            return this.p_38.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_38.getNumParameters();\n\n        if (index < this.p_39.getNumParameters())\n            return this.p_39.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_26.getNumParameters())\n            return this.p_26.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_26.getNumParameters();\n\n        if (index < this.p_27.getNumParameters())\n            return this.p_27.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_27.getNumParameters();\n\n        if (index < this.p_28.getNumParameters())\n            return this.p_28.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_28.getNumParameters();\n\n        if (index < this.p_29.getNumParameters())\n            return this.p_29.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_29.getNumParameters();\n\n        if (index < this.p_30.getNumParameters())\n            return this.p_30.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_30.getNumParameters();\n\n        if (index < this.p_31.getNumParameters())\n            return this.p_31.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_31.getNumParameters();\n\n        if (index < this.p_32.getNumParameters())\n            return this.p_32.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_32.getNumParameters();\n\n        if (index < this.p_33.getNumParameters())\n            return this.p_33.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_33.getNumParameters();\n\n        if (index < this.p_34.getNumParameters())\n            return this.p_34.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_34.getNumParameters();\n\n        if (index < this.p_35.getNumParameters())\n            return this.p_35.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_35.getNumParameters();\n\n        if (index < this.p_36.getNumParameters())\n            return this.p_36.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_36.getNumParameters();\n\n        if (index < this.p_37.getNumParameters())\n            return this.p_37.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_37.getNumParameters();\n\n        if (index < this.p_38.getNumParameters())\n            return this.p_38.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_38.getNumParameters();\n\n        if (index < this.p_39.getNumParameters())\n            return this.p_39.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_26.getNumParameters() + this.p_27.getNumParameters() + this.p_28.getNumParameters() + this.p_29.getNumParameters() + this.p_30.getNumParameters() + this.p_31.getNumParameters() + this.p_32.getNumParameters() + this.p_33.getNumParameters() + this.p_34.getNumParameters() + this.p_35.getNumParameters() + this.p_36.getNumParameters() + this.p_37.getNumParameters() + this.p_38.getNumParameters() + this.p_39.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_26.getNumParameters())\n            return this.p_26.constrainParameterValue(index, value);\n\n        index -= this.p_26.getNumParameters();\n\n        if (index < this.p_27.getNumParameters())\n            return this.p_27.constrainParameterValue(index, value);\n\n        index -= this.p_27.getNumParameters();\n\n        if (index < this.p_28.getNumParameters())\n            return this.p_28.constrainParameterValue(index, value);\n\n        index -= this.p_28.getNumParameters();\n\n        if (index < this.p_29.getNumParameters())\n            return this.p_29.constrainParameterValue(index, value);\n\n        index -= this.p_29.getNumParameters();\n\n        if (index < this.p_30.getNumParameters())\n            return this.p_30.constrainParameterValue(index, value);\n\n        index -= this.p_30.getNumParameters();\n\n        if (index < this.p_31.getNumParameters())\n            return this.p_31.constrainParameterValue(index, value);\n\n        index -= this.p_31.getNumParameters();\n\n        if (index < this.p_32.getNumParameters())\n            return this.p_32.constrainParameterValue(index, value);\n\n        index -= this.p_32.getNumParameters();\n\n        if (index < this.p_33.getNumParameters())\n            return this.p_33.constrainParameterValue(index, value);\n\n        index -= this.p_33.getNumParameters();\n\n        if (index < this.p_34.getNumParameters())\n            return this.p_34.constrainParameterValue(index, value);\n\n        index -= this.p_34.getNumParameters();\n\n        if (index < this.p_35.getNumParameters())\n            return this.p_35.constrainParameterValue(index, value);\n\n        index -= this.p_35.getNumParameters();\n\n        if (index < this.p_36.getNumParameters())\n            return this.p_36.constrainParameterValue(index, value);\n\n        index -= this.p_36.getNumParameters();\n\n        if (index < this.p_37.getNumParameters())\n            return this.p_37.constrainParameterValue(index, value);\n\n        index -= this.p_37.getNumParameters();\n\n        if (index < this.p_38.getNumParameters())\n            return this.p_38.constrainParameterValue(index, value);\n\n        index -= this.p_38.getNumParameters();\n\n        if (index < this.p_39.getNumParameters())\n            return this.p_39.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_26": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_27": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_28": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_29": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_30": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_31": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_32": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_33": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_34": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_35": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_36": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_37": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_38": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_39": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_88": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_89": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_90": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_91": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_44[0].getNumParameters()) {\n            for (var i = 0; i < 64; i++) {\n                return this.p_44[i].convertToNormalizedParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_44[0].getNumParameters()) {\n            for (var i = 0; i < 64; i++) {\n                return this.p_44[i].convertFromNormalizedParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_44[0].getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_44[0].getNumParameters()) {\n            for (var i = 0; i < 64; i++) {\n                return this.p_44[i].constrainParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_44": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_40.getNumParameters())\n            return this.p_40.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_40.getNumParameters();\n\n        if (index < this.p_41.getNumParameters())\n            return this.p_41.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_41.getNumParameters();\n\n        if (index < this.p_42.getNumParameters())\n            return this.p_42.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_42.getNumParameters();\n\n        if (index < this.p_43.getNumParameters())\n            return this.p_43.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_40.getNumParameters())\n            return this.p_40.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_40.getNumParameters();\n\n        if (index < this.p_41.getNumParameters())\n            return this.p_41.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_41.getNumParameters();\n\n        if (index < this.p_42.getNumParameters())\n            return this.p_42.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_42.getNumParameters();\n\n        if (index < this.p_43.getNumParameters())\n            return this.p_43.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_40.getNumParameters() + this.p_41.getNumParameters() + this.p_42.getNumParameters() + this.p_43.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_40.getNumParameters())\n            return this.p_40.constrainParameterValue(index, value);\n\n        index -= this.p_40.getNumParameters();\n\n        if (index < this.p_41.getNumParameters())\n            return this.p_41.constrainParameterValue(index, value);\n\n        index -= this.p_41.getNumParameters();\n\n        if (index < this.p_42.getNumParameters())\n            return this.p_42.constrainParameterValue(index, value);\n\n        index -= this.p_42.getNumParameters();\n\n        if (index < this.p_43.getNumParameters())\n            return this.p_43.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_40": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_41": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_42": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                },
                "p_43": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": true
            }
          },
          "isPolyphonic": false
        },
        "p_92": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_45.getNumParameters())\n            return this.p_45.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_45.getNumParameters();\n\n        if (index < this.p_46.getNumParameters())\n            return this.p_46.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_46.getNumParameters();\n\n        if (index < this.p_47.getNumParameters())\n            return this.p_47.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_47.getNumParameters();\n\n        if (index < this.p_48.getNumParameters())\n            return this.p_48.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_48.getNumParameters();\n\n        if (index < this.p_49.getNumParameters())\n            return this.p_49.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_49.getNumParameters();\n\n        if (index < this.p_50.getNumParameters())\n            return this.p_50.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_50.getNumParameters();\n\n        if (index < this.p_51.getNumParameters())\n            return this.p_51.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_51.getNumParameters();\n\n        if (index < this.p_52.getNumParameters())\n            return this.p_52.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_52.getNumParameters();\n\n        if (index < this.p_53.getNumParameters())\n            return this.p_53.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_53.getNumParameters();\n\n        if (index < this.p_54.getNumParameters())\n            return this.p_54.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_54.getNumParameters();\n\n        if (index < this.p_55.getNumParameters())\n            return this.p_55.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_55.getNumParameters();\n\n        if (index < this.p_56.getNumParameters())\n            return this.p_56.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_56.getNumParameters();\n\n        if (index < this.p_57.getNumParameters())\n            return this.p_57.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_57.getNumParameters();\n\n        if (index < this.p_58.getNumParameters())\n            return this.p_58.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_45.getNumParameters())\n            return this.p_45.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_45.getNumParameters();\n\n        if (index < this.p_46.getNumParameters())\n            return this.p_46.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_46.getNumParameters();\n\n        if (index < this.p_47.getNumParameters())\n            return this.p_47.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_47.getNumParameters();\n\n        if (index < this.p_48.getNumParameters())\n            return this.p_48.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_48.getNumParameters();\n\n        if (index < this.p_49.getNumParameters())\n            return this.p_49.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_49.getNumParameters();\n\n        if (index < this.p_50.getNumParameters())\n            return this.p_50.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_50.getNumParameters();\n\n        if (index < this.p_51.getNumParameters())\n            return this.p_51.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_51.getNumParameters();\n\n        if (index < this.p_52.getNumParameters())\n            return this.p_52.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_52.getNumParameters();\n\n        if (index < this.p_53.getNumParameters())\n            return this.p_53.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_53.getNumParameters();\n\n        if (index < this.p_54.getNumParameters())\n            return this.p_54.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_54.getNumParameters();\n\n        if (index < this.p_55.getNumParameters())\n            return this.p_55.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_55.getNumParameters();\n\n        if (index < this.p_56.getNumParameters())\n            return this.p_56.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_56.getNumParameters();\n\n        if (index < this.p_57.getNumParameters())\n            return this.p_57.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_57.getNumParameters();\n\n        if (index < this.p_58.getNumParameters())\n            return this.p_58.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_45.getNumParameters() + this.p_46.getNumParameters() + this.p_47.getNumParameters() + this.p_48.getNumParameters() + this.p_49.getNumParameters() + this.p_50.getNumParameters() + this.p_51.getNumParameters() + this.p_52.getNumParameters() + this.p_53.getNumParameters() + this.p_54.getNumParameters() + this.p_55.getNumParameters() + this.p_56.getNumParameters() + this.p_57.getNumParameters() + this.p_58.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_45.getNumParameters())\n            return this.p_45.constrainParameterValue(index, value);\n\n        index -= this.p_45.getNumParameters();\n\n        if (index < this.p_46.getNumParameters())\n            return this.p_46.constrainParameterValue(index, value);\n\n        index -= this.p_46.getNumParameters();\n\n        if (index < this.p_47.getNumParameters())\n            return this.p_47.constrainParameterValue(index, value);\n\n        index -= this.p_47.getNumParameters();\n\n        if (index < this.p_48.getNumParameters())\n            return this.p_48.constrainParameterValue(index, value);\n\n        index -= this.p_48.getNumParameters();\n\n        if (index < this.p_49.getNumParameters())\n            return this.p_49.constrainParameterValue(index, value);\n\n        index -= this.p_49.getNumParameters();\n\n        if (index < this.p_50.getNumParameters())\n            return this.p_50.constrainParameterValue(index, value);\n\n        index -= this.p_50.getNumParameters();\n\n        if (index < this.p_51.getNumParameters())\n            return this.p_51.constrainParameterValue(index, value);\n\n        index -= this.p_51.getNumParameters();\n\n        if (index < this.p_52.getNumParameters())\n            return this.p_52.constrainParameterValue(index, value);\n\n        index -= this.p_52.getNumParameters();\n\n        if (index < this.p_53.getNumParameters())\n            return this.p_53.constrainParameterValue(index, value);\n\n        index -= this.p_53.getNumParameters();\n\n        if (index < this.p_54.getNumParameters())\n            return this.p_54.constrainParameterValue(index, value);\n\n        index -= this.p_54.getNumParameters();\n\n        if (index < this.p_55.getNumParameters())\n            return this.p_55.constrainParameterValue(index, value);\n\n        index -= this.p_55.getNumParameters();\n\n        if (index < this.p_56.getNumParameters())\n            return this.p_56.constrainParameterValue(index, value);\n\n        index -= this.p_56.getNumParameters();\n\n        if (index < this.p_57.getNumParameters())\n            return this.p_57.constrainParameterValue(index, value);\n\n        index -= this.p_57.getNumParameters();\n\n        if (index < this.p_58.getNumParameters())\n            return this.p_58.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_45": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_46": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_47": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_48": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_49": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_50": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_51": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_52": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_53": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_54": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_55": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_56": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_57": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_58": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_93": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_62.getNumParameters())\n            return this.p_62.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_62.getNumParameters();\n\n        if (index < this.p_63.getNumParameters())\n            return this.p_63.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_63.getNumParameters();\n\n        if (index < this.p_64.getNumParameters())\n            return this.p_64.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_64.getNumParameters();\n\n        if (index < this.p_65.getNumParameters())\n            return this.p_65.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_65.getNumParameters();\n\n        if (index < this.p_66.getNumParameters())\n            return this.p_66.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_66.getNumParameters();\n\n        if (index < this.p_67.getNumParameters())\n            return this.p_67.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_67.getNumParameters();\n\n        if (index < this.p_68.getNumParameters())\n            return this.p_68.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_68.getNumParameters();\n\n        if (index < this.p_69.getNumParameters())\n            return this.p_69.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_69.getNumParameters();\n\n        if (index < this.p_70.getNumParameters())\n            return this.p_70.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_70.getNumParameters();\n\n        if (index < this.p_71.getNumParameters())\n            return this.p_71.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_71.getNumParameters();\n\n        if (index < this.p_72.getNumParameters())\n            return this.p_72.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_72.getNumParameters();\n\n        if (index < this.p_73.getNumParameters())\n            return this.p_73.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_73.getNumParameters();\n\n        if (index < this.p_74.getNumParameters())\n            return this.p_74.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_74.getNumParameters();\n\n        if (index < this.p_75.getNumParameters())\n            return this.p_75.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_75.getNumParameters();\n\n        if (index < this.p_76.getNumParameters())\n            return this.p_76.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_76.getNumParameters();\n\n        if (index < this.p_77.getNumParameters())\n            return this.p_77.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_77.getNumParameters();\n\n        if (index < this.p_78.getNumParameters())\n            return this.p_78.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_62.getNumParameters())\n            return this.p_62.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_62.getNumParameters();\n\n        if (index < this.p_63.getNumParameters())\n            return this.p_63.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_63.getNumParameters();\n\n        if (index < this.p_64.getNumParameters())\n            return this.p_64.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_64.getNumParameters();\n\n        if (index < this.p_65.getNumParameters())\n            return this.p_65.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_65.getNumParameters();\n\n        if (index < this.p_66.getNumParameters())\n            return this.p_66.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_66.getNumParameters();\n\n        if (index < this.p_67.getNumParameters())\n            return this.p_67.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_67.getNumParameters();\n\n        if (index < this.p_68.getNumParameters())\n            return this.p_68.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_68.getNumParameters();\n\n        if (index < this.p_69.getNumParameters())\n            return this.p_69.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_69.getNumParameters();\n\n        if (index < this.p_70.getNumParameters())\n            return this.p_70.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_70.getNumParameters();\n\n        if (index < this.p_71.getNumParameters())\n            return this.p_71.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_71.getNumParameters();\n\n        if (index < this.p_72.getNumParameters())\n            return this.p_72.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_72.getNumParameters();\n\n        if (index < this.p_73.getNumParameters())\n            return this.p_73.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_73.getNumParameters();\n\n        if (index < this.p_74.getNumParameters())\n            return this.p_74.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_74.getNumParameters();\n\n        if (index < this.p_75.getNumParameters())\n            return this.p_75.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_75.getNumParameters();\n\n        if (index < this.p_76.getNumParameters())\n            return this.p_76.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_76.getNumParameters();\n\n        if (index < this.p_77.getNumParameters())\n            return this.p_77.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_77.getNumParameters();\n\n        if (index < this.p_78.getNumParameters())\n            return this.p_78.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_62.getNumParameters() + this.p_63.getNumParameters() + this.p_64.getNumParameters() + this.p_65.getNumParameters() + this.p_66.getNumParameters() + this.p_67.getNumParameters() + this.p_68.getNumParameters() + this.p_69.getNumParameters() + this.p_70.getNumParameters() + this.p_71.getNumParameters() + this.p_72.getNumParameters() + this.p_73.getNumParameters() + this.p_74.getNumParameters() + this.p_75.getNumParameters() + this.p_76.getNumParameters() + this.p_77.getNumParameters() + this.p_78.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_62.getNumParameters())\n            return this.p_62.constrainParameterValue(index, value);\n\n        index -= this.p_62.getNumParameters();\n\n        if (index < this.p_63.getNumParameters())\n            return this.p_63.constrainParameterValue(index, value);\n\n        index -= this.p_63.getNumParameters();\n\n        if (index < this.p_64.getNumParameters())\n            return this.p_64.constrainParameterValue(index, value);\n\n        index -= this.p_64.getNumParameters();\n\n        if (index < this.p_65.getNumParameters())\n            return this.p_65.constrainParameterValue(index, value);\n\n        index -= this.p_65.getNumParameters();\n\n        if (index < this.p_66.getNumParameters())\n            return this.p_66.constrainParameterValue(index, value);\n\n        index -= this.p_66.getNumParameters();\n\n        if (index < this.p_67.getNumParameters())\n            return this.p_67.constrainParameterValue(index, value);\n\n        index -= this.p_67.getNumParameters();\n\n        if (index < this.p_68.getNumParameters())\n            return this.p_68.constrainParameterValue(index, value);\n\n        index -= this.p_68.getNumParameters();\n\n        if (index < this.p_69.getNumParameters())\n            return this.p_69.constrainParameterValue(index, value);\n\n        index -= this.p_69.getNumParameters();\n\n        if (index < this.p_70.getNumParameters())\n            return this.p_70.constrainParameterValue(index, value);\n\n        index -= this.p_70.getNumParameters();\n\n        if (index < this.p_71.getNumParameters())\n            return this.p_71.constrainParameterValue(index, value);\n\n        index -= this.p_71.getNumParameters();\n\n        if (index < this.p_72.getNumParameters())\n            return this.p_72.constrainParameterValue(index, value);\n\n        index -= this.p_72.getNumParameters();\n\n        if (index < this.p_73.getNumParameters())\n            return this.p_73.constrainParameterValue(index, value);\n\n        index -= this.p_73.getNumParameters();\n\n        if (index < this.p_74.getNumParameters())\n            return this.p_74.constrainParameterValue(index, value);\n\n        index -= this.p_74.getNumParameters();\n\n        if (index < this.p_75.getNumParameters())\n            return this.p_75.constrainParameterValue(index, value);\n\n        index -= this.p_75.getNumParameters();\n\n        if (index < this.p_76.getNumParameters())\n            return this.p_76.constrainParameterValue(index, value);\n\n        index -= this.p_76.getNumParameters();\n\n        if (index < this.p_77.getNumParameters())\n            return this.p_77.constrainParameterValue(index, value);\n\n        index -= this.p_77.getNumParameters();\n\n        if (index < this.p_78.getNumParameters())\n            return this.p_78.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_62": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_63": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_64": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_65": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_66": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_67": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_68": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_69": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_59.getNumParameters())\n            return this.p_59.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_59.getNumParameters())\n            return this.p_59.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_59.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_59.getNumParameters())\n            return this.p_59.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_59": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_70": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_71": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_60.getNumParameters())\n            return this.p_60.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_60.getNumParameters())\n            return this.p_60.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_60.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_60.getNumParameters())\n            return this.p_60.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_60": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_72": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_73": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_74": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_61.getNumParameters())\n            return this.p_61.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_61.getNumParameters())\n            return this.p_61.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_61.getNumParameters();\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_61.getNumParameters())\n            return this.p_61.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
              "subpatches": {
                "p_61": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_75": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_76": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_77": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_78": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_94": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_95": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_96": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_79[0].getNumParameters()) {\n            for (var i = 0; i < 120; i++) {\n                return this.p_79[i].convertToNormalizedParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_79[0].getNumParameters()) {\n            for (var i = 0; i < 120; i++) {\n                return this.p_79[i].convertFromNormalizedParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_79[0].getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_79[0].getNumParameters()) {\n            for (var i = 0; i < 120; i++) {\n                return this.p_79[i].constrainParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_79": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": true
            }
          },
          "isPolyphonic": false
        },
        "p_97": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_80.getNumParameters())\n            return this.p_80.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_80.getNumParameters();\n\n        if (index < this.p_81.getNumParameters())\n            return this.p_81.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_81.getNumParameters();\n\n        if (index < this.p_82.getNumParameters())\n            return this.p_82.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_80.getNumParameters())\n            return this.p_80.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_80.getNumParameters();\n\n        if (index < this.p_81.getNumParameters())\n            return this.p_81.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_81.getNumParameters();\n\n        if (index < this.p_82.getNumParameters())\n            return this.p_82.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0 + this.p_80.getNumParameters() + this.p_81.getNumParameters() + this.p_82.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        index -= 0;\n\n        if (index < this.p_80.getNumParameters())\n            return this.p_80.constrainParameterValue(index, value);\n\n        index -= this.p_80.getNumParameters();\n\n        if (index < this.p_81.getNumParameters())\n            return this.p_81.constrainParameterValue(index, value);\n\n        index -= this.p_81.getNumParameters();\n\n        if (index < this.p_82.getNumParameters())\n            return this.p_82.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_80": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_81": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_82": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_98": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_99": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_100": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "p_101": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        }
      },
      "isPolyphonic": false
    },
    "rnboVersion": "0.16.0-dev.7",
    "meta": {
      "architecture": "x64",
      "maxversion": "8.3.0",
      "filename": "intersymmetric.maxpat"
    },
    "options": {
      "classname": "rnbomatic",
      "minifyOutput": true
    }
  },
  "src": "class RNBOSubpatcher_477{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.onebang_01_allow=0,this.counter_01_phase=!0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s01_in1)&&(this.expr_01_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_01_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_01_out1=e.expr_s01_out1),containsValue(e.gate_s01_onoff)&&(this.gate_01_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_01_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_01_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_01_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_01_out2_list=e.gate_s01_out2_list),containsValue(e.expr_s02_in1)&&(this.expr_02_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_02_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_02_out1=e.expr_s02_out1),containsValue(e.receive_a1_s01_output_number)&&(this.receive_01_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_01_output_list=e.receive_a1_s01_output_list),containsValue(e.onebang_s01_initial)&&(this.onebang_01_initial=e.onebang_s01_initial),containsValue(e.select_a1_s01_test1)&&(this.select_01_test1=e.select_a1_s01_test1),containsValue(e.counter_s01_carryflag)&&(this.counter_01_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_01_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_01_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_01_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_01_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_01_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_01_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_01_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_01_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_01_minimum=e.counter_s01_minimum),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.onebang_s01_allow)&&(this.onebang_01_allow=e.onebang_s01_allow),containsValue(e.counter_s01_count)&&(this.counter_01_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_01_phase=e.counter_s01_phase),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm1_listener\"):this.inport_01_value_number_set(a)}}processListMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm1_listener\"):this.inport_01_value_list_set(a)}}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"fm1_listener\"):this.inport_01_value_bang_bang()}}resolveTag(e){switch(e){case TAG(\"filter\"):return\"filter\";case TAG(\"\"):return\"\";case TAG(\"fm1_listener\"):return\"fm1_listener\"}return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_478{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.switchobj_a1_s01_onoff)&&(this.switchobj_01_onoff=e.switchobj_a1_s01_onoff),containsValue(e.receive_a1_s03_output_number)&&(this.receive_02_output_number=e.receive_a1_s03_output_number),containsValue(e.receive_a1_s03_output_list)&&(this.receive_02_output_list=e.receive_a1_s03_output_list),containsValue(e.receive_a1_s02_output_number)&&(this.receive_03_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_03_output_list=e.receive_a1_s02_output_list),containsValue(e.receive_a1_s01_output_number)&&(this.receive_04_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_04_output_list=e.receive_a1_s01_output_list),containsValue(e.p_s12_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s12_audioProcessSampleCount),containsValue(e.p_s12_zeroBuffer)&&(this.zeroBuffer=e.p_s12_zeroBuffer),containsValue(e.p_s12_dummyBuffer)&&(this.dummyBuffer=e.p_s12_dummyBuffer),containsValue(e.p_s12_vs)&&(this.vs=e.p_s12_vs),containsValue(e.p_s12_maxvs)&&(this.maxvs=e.p_s12_maxvs),containsValue(e.p_s12_sr)&&(this.sr=e.p_s12_sr),containsValue(e.p_s12_invsr)&&(this.invsr=e.p_s12_invsr),containsValue(e.p_s12_noteNumber)&&(this.noteNumber=e.p_s12_noteNumber),containsValue(e.p_s12_isMuted)&&(this.isMuted=e.p_s12_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_395{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(4),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.phasor_01_sigbuf=0,this.phasor_01_setupDone=!1,this.ip_01_sigbuf=0,this.ip_01_setupDone=!1,this.ip_02_sigbuf=0,this.ip_02_setupDone=!1,this.onepole_tilde_01_needsUpdate=!1,this.onepole_tilde_01_setupDone=!1,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 2}getNumOutputChannels(){return 2}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e}setNoteNumber(e){this.noteNumber=e}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.dspexpr_a1_s01_in1)&&(this.dspexpr_01_in1=e.dspexpr_a1_s01_in1),containsValue(e.phasor_a1_s01_freq)&&(this.phasor_01_freq=e.phasor_a1_s01_freq),containsValue(e.dspexpr_a1_s02_in1)&&(this.dspexpr_02_in1=e.dspexpr_a1_s02_in1),containsValue(e.dspexpr_a1_s02_in2)&&(this.dspexpr_02_in2=e.dspexpr_a1_s02_in2),containsValue(e.dspexpr_a1_s03_in1)&&(this.dspexpr_03_in1=e.dspexpr_a1_s03_in1),containsValue(e.dspexpr_a1_s03_in2)&&(this.dspexpr_03_in2=e.dspexpr_a1_s03_in2),containsValue(e.dspexpr_a1_s04_in1)&&(this.dspexpr_04_in1=e.dspexpr_a1_s04_in1),containsValue(e.dspexpr_a1_s04_in2)&&(this.dspexpr_04_in2=e.dspexpr_a1_s04_in2),containsValue(e.ip_a1_s01_value)&&(this.ip_01_value=e.ip_a1_s01_value),containsValue(e.ip_a1_s01_impulse)&&(this.ip_01_impulse=e.ip_a1_s01_impulse),containsValue(e.dspexpr_a1_s05_in1)&&(this.dspexpr_05_in1=e.dspexpr_a1_s05_in1),containsValue(e.dspexpr_a1_s05_in2)&&(this.dspexpr_05_in2=e.dspexpr_a1_s05_in2),containsValue(e.dspexpr_a1_s06_in1)&&(this.dspexpr_06_in1=e.dspexpr_a1_s06_in1),containsValue(e.dspexpr_a1_s06_in2)&&(this.dspexpr_06_in2=e.dspexpr_a1_s06_in2),containsValue(e.floatnum_a2_s03_input_number)&&(this.floatnum_01_input_number=e.floatnum_a2_s03_input_number),containsValue(e.floatnum_a2_s03_value)&&(this.floatnum_01_value=e.floatnum_a2_s03_value),containsValue(e.ip_a1_s02_value)&&(this.ip_02_value=e.ip_a1_s02_value),containsValue(e.ip_a1_s02_impulse)&&(this.ip_02_impulse=e.ip_a1_s02_impulse),containsValue(e.floatnum_a2_s01_input_number)&&(this.floatnum_02_input_number=e.floatnum_a2_s01_input_number),containsValue(e.floatnum_a2_s01_value)&&(this.floatnum_02_value=e.floatnum_a2_s01_value),containsValue(e.line_a1_s01_segments)&&(this.line_01_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_01_time=e.line_a1_s01_time),containsValue(e.onepole_s01_x)&&(this.onepole_tilde_01_x=e.onepole_s01_x),containsValue(e.onepole_s01_freqInHz)&&(this.onepole_tilde_01_freqInHz=e.onepole_s01_freqInHz),containsValue(e.pack_a1_s01_in1)&&(this.pack_01_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_01_in2=e.pack_a1_s01_in2),containsValue(e.pack_a1_s01_in3)&&(this.pack_01_in3=e.pack_a1_s01_in3),containsValue(e.pack_a1_s01_in4)&&(this.pack_01_in4=e.pack_a1_s01_in4),containsValue(e.pack_a1_s01_in5)&&(this.pack_01_in5=e.pack_a1_s01_in5),containsValue(e.pack_a1_s01_in6)&&(this.pack_01_in6=e.pack_a1_s01_in6),containsValue(e.curve_a1_s01_dest)&&(this.curve_01_dest=e.curve_a1_s01_dest),containsValue(e.curve_a1_s01_time)&&(this.curve_01_time=e.curve_a1_s01_time),containsValue(e.curve_a1_s01_curve)&&(this.curve_01_curve=e.curve_a1_s01_curve),containsValue(e.floatnum_a2_s02_input_number)&&(this.floatnum_03_input_number=e.floatnum_a2_s02_input_number),containsValue(e.floatnum_a2_s02_value)&&(this.floatnum_03_value=e.floatnum_a2_s02_value),containsValue(e.p_s02_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s02_audioProcessSampleCount),containsValue(e.p_s02_zeroBuffer)&&(this.zeroBuffer=e.p_s02_zeroBuffer),containsValue(e.p_s02_dummyBuffer)&&(this.dummyBuffer=e.p_s02_dummyBuffer),containsValue(e.p_s02_vs)&&(this.vs=e.p_s02_vs),containsValue(e.p_s02_maxvs)&&(this.maxvs=e.p_s02_maxvs),containsValue(e.p_s02_sr)&&(this.sr=e.p_s02_sr),containsValue(e.p_s02_invsr)&&(this.invsr=e.p_s02_invsr),containsValue(e.phasor_a1_s01_sigbuf)&&(this.phasor_01_sigbuf=e.phasor_a1_s01_sigbuf),containsValue(e.phasor_a1_s01_lastLockedPhase)&&(this.phasor_01_lastLockedPhase=e.phasor_a1_s01_lastLockedPhase),containsValue(e.phasor_a1_s01_conv)&&(this.phasor_01_conv=e.phasor_a1_s01_conv),containsValue(e.phasor_a1_s01_ph_currentPhase)&&(this.phasor_01_ph_currentPhase=e.phasor_a1_s01_ph_currentPhase),containsValue(e.phasor_a1_s01_ph_conv)&&(this.phasor_01_ph_conv=e.phasor_a1_s01_ph_conv),containsValue(e.phasor_a1_s01_setupDone)&&(this.phasor_01_setupDone=e.phasor_a1_s01_setupDone),containsValue(e.ip_a1_s01_lastValue)&&(this.ip_01_lastValue=e.ip_a1_s01_lastValue),containsValue(e.ip_a1_s01_lastIndex)&&(this.ip_01_lastIndex=e.ip_a1_s01_lastIndex),containsValue(e.ip_a1_s01_resetCount)&&(this.ip_01_resetCount=e.ip_a1_s01_resetCount),containsValue(e.ip_a1_s01_sigbuf)&&(this.ip_01_sigbuf=e.ip_a1_s01_sigbuf),containsValue(e.ip_a1_s01_setupDone)&&(this.ip_01_setupDone=e.ip_a1_s01_setupDone),containsValue(e.floatnum_a2_s03_stored)&&(this.floatnum_01_stored=e.floatnum_a2_s03_stored),containsValue(e.ip_a1_s02_lastValue)&&(this.ip_02_lastValue=e.ip_a1_s02_lastValue),containsValue(e.ip_a1_s02_lastIndex)&&(this.ip_02_lastIndex=e.ip_a1_s02_lastIndex),containsValue(e.ip_a1_s02_resetCount)&&(this.ip_02_resetCount=e.ip_a1_s02_resetCount),containsValue(e.ip_a1_s02_sigbuf)&&(this.ip_02_sigbuf=e.ip_a1_s02_sigbuf),containsValue(e.ip_a1_s02_setupDone)&&(this.ip_02_setupDone=e.ip_a1_s02_setupDone),containsValue(e.floatnum_a2_s01_stored)&&(this.floatnum_02_stored=e.floatnum_a2_s01_stored),containsValue(e.line_a1_s01_activeRamps)&&(this.line_01_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_01_currentValue=e.line_a1_s01_currentValue),containsValue(e.onepole_s01_freq)&&(this.onepole_tilde_01_freq=e.onepole_s01_freq),containsValue(e.onepole_s01_needsUpdate)&&(this.onepole_tilde_01_needsUpdate=e.onepole_s01_needsUpdate),containsValue(e.onepole_s01_lastY)&&(this.onepole_tilde_01_lastY=e.onepole_s01_lastY),containsValue(e.onepole_s01_a0)&&(this.onepole_tilde_01_a0=e.onepole_s01_a0),containsValue(e.onepole_s01_b1)&&(this.onepole_tilde_01_b1=e.onepole_s01_b1),containsValue(e.onepole_s01_setupDone)&&(this.onepole_tilde_01_setupDone=e.onepole_s01_setupDone),containsValue(e.curve_a1_s01_activeRamps)&&(this.curve_01_activeRamps=e.curve_a1_s01_activeRamps),containsValue(e.curve_a1_s01_currentValue)&&(this.curve_01_currentValue=e.curve_a1_s01_currentValue),containsValue(e.curve_a1_s01_samplecount)&&(this.curve_01_samplecount=e.curve_a1_s01_samplecount),containsValue(e.curve_a1_s01_startvalue)&&(this.curve_01_startvalue=e.curve_a1_s01_startvalue),containsValue(e.floatnum_a2_s02_stored)&&(this.floatnum_03_stored=e.floatnum_a2_s02_stored),containsValue(e.p_s02_noteNumber)&&(this.noteNumber=e.p_s02_noteNumber),containsValue(e.p_s02_isMuted)&&(this.isMuted=e.p_s02_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 760652352:this.line_01_target_bang();break;case 861222235:this.curve_01_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_396{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e}setNoteNumber(e){this.noteNumber=e}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.listslice_a1_s02_input)&&(this.listslice_01_input=e.listslice_a1_s02_input),containsValue(e.listslice_a1_s02_size)&&(this.listslice_01_size=e.listslice_a1_s02_size),containsValue(e.line_a1_s01_segments)&&(this.line_02_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_02_time=e.line_a1_s01_time),containsValue(e.maximum_a1_s01_input)&&(this.maximum_01_input=e.maximum_a1_s01_input),containsValue(e.maximum_a1_s01_right)&&(this.maximum_01_right=e.maximum_a1_s01_right),containsValue(e.maximum_a1_s01_out)&&(this.maximum_01_out=e.maximum_a1_s01_out),containsValue(e.maximum_a1_s01_index)&&(this.maximum_01_index=e.maximum_a1_s01_index),containsValue(e.listslice_a1_s01_input)&&(this.listslice_02_input=e.listslice_a1_s01_input),containsValue(e.listslice_a1_s01_size)&&(this.listslice_02_size=e.listslice_a1_s01_size),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.line_a1_s01_activeRamps)&&(this.line_02_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_02_currentValue=e.line_a1_s01_currentValue),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 760652352:this.line_02_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_397{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(4),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.phasor_02_sigbuf=0,this.phasor_02_setupDone=!1,this.ip_03_sigbuf=0,this.ip_03_setupDone=!1,this.ip_04_sigbuf=0,this.ip_04_setupDone=!1,this.onepole_tilde_02_needsUpdate=!1,this.onepole_tilde_02_setupDone=!1,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 2}getNumOutputChannels(){return 2}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e}setNoteNumber(e){this.noteNumber=e}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.dspexpr_a1_s01_in1)&&(this.dspexpr_07_in1=e.dspexpr_a1_s01_in1),containsValue(e.phasor_a1_s01_freq)&&(this.phasor_02_freq=e.phasor_a1_s01_freq),containsValue(e.dspexpr_a1_s02_in1)&&(this.dspexpr_08_in1=e.dspexpr_a1_s02_in1),containsValue(e.dspexpr_a1_s02_in2)&&(this.dspexpr_08_in2=e.dspexpr_a1_s02_in2),containsValue(e.dspexpr_a1_s03_in1)&&(this.dspexpr_09_in1=e.dspexpr_a1_s03_in1),containsValue(e.dspexpr_a1_s03_in2)&&(this.dspexpr_09_in2=e.dspexpr_a1_s03_in2),containsValue(e.dspexpr_a1_s04_in1)&&(this.dspexpr_10_in1=e.dspexpr_a1_s04_in1),containsValue(e.dspexpr_a1_s04_in2)&&(this.dspexpr_10_in2=e.dspexpr_a1_s04_in2),containsValue(e.ip_a1_s01_value)&&(this.ip_03_value=e.ip_a1_s01_value),containsValue(e.ip_a1_s01_impulse)&&(this.ip_03_impulse=e.ip_a1_s01_impulse),containsValue(e.dspexpr_a1_s05_in1)&&(this.dspexpr_11_in1=e.dspexpr_a1_s05_in1),containsValue(e.dspexpr_a1_s05_in2)&&(this.dspexpr_11_in2=e.dspexpr_a1_s05_in2),containsValue(e.dspexpr_a1_s06_in1)&&(this.dspexpr_12_in1=e.dspexpr_a1_s06_in1),containsValue(e.dspexpr_a1_s06_in2)&&(this.dspexpr_12_in2=e.dspexpr_a1_s06_in2),containsValue(e.floatnum_a2_s03_input_number)&&(this.floatnum_04_input_number=e.floatnum_a2_s03_input_number),containsValue(e.floatnum_a2_s03_value)&&(this.floatnum_04_value=e.floatnum_a2_s03_value),containsValue(e.ip_a1_s02_value)&&(this.ip_04_value=e.ip_a1_s02_value),containsValue(e.ip_a1_s02_impulse)&&(this.ip_04_impulse=e.ip_a1_s02_impulse),containsValue(e.floatnum_a2_s01_input_number)&&(this.floatnum_05_input_number=e.floatnum_a2_s01_input_number),containsValue(e.floatnum_a2_s01_value)&&(this.floatnum_05_value=e.floatnum_a2_s01_value),containsValue(e.line_a1_s01_segments)&&(this.line_03_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_03_time=e.line_a1_s01_time),containsValue(e.onepole_s01_x)&&(this.onepole_tilde_02_x=e.onepole_s01_x),containsValue(e.onepole_s01_freqInHz)&&(this.onepole_tilde_02_freqInHz=e.onepole_s01_freqInHz),containsValue(e.pack_a1_s01_in1)&&(this.pack_02_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_02_in2=e.pack_a1_s01_in2),containsValue(e.pack_a1_s01_in3)&&(this.pack_02_in3=e.pack_a1_s01_in3),containsValue(e.pack_a1_s01_in4)&&(this.pack_02_in4=e.pack_a1_s01_in4),containsValue(e.pack_a1_s01_in5)&&(this.pack_02_in5=e.pack_a1_s01_in5),containsValue(e.pack_a1_s01_in6)&&(this.pack_02_in6=e.pack_a1_s01_in6),containsValue(e.curve_a1_s01_dest)&&(this.curve_02_dest=e.curve_a1_s01_dest),containsValue(e.curve_a1_s01_time)&&(this.curve_02_time=e.curve_a1_s01_time),containsValue(e.curve_a1_s01_curve)&&(this.curve_02_curve=e.curve_a1_s01_curve),containsValue(e.floatnum_a2_s02_input_number)&&(this.floatnum_06_input_number=e.floatnum_a2_s02_input_number),containsValue(e.floatnum_a2_s02_value)&&(this.floatnum_06_value=e.floatnum_a2_s02_value),containsValue(e.p_s03_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s03_audioProcessSampleCount),containsValue(e.p_s03_zeroBuffer)&&(this.zeroBuffer=e.p_s03_zeroBuffer),containsValue(e.p_s03_dummyBuffer)&&(this.dummyBuffer=e.p_s03_dummyBuffer),containsValue(e.p_s03_vs)&&(this.vs=e.p_s03_vs),containsValue(e.p_s03_maxvs)&&(this.maxvs=e.p_s03_maxvs),containsValue(e.p_s03_sr)&&(this.sr=e.p_s03_sr),containsValue(e.p_s03_invsr)&&(this.invsr=e.p_s03_invsr),containsValue(e.phasor_a1_s01_sigbuf)&&(this.phasor_02_sigbuf=e.phasor_a1_s01_sigbuf),containsValue(e.phasor_a1_s01_lastLockedPhase)&&(this.phasor_02_lastLockedPhase=e.phasor_a1_s01_lastLockedPhase),containsValue(e.phasor_a1_s01_conv)&&(this.phasor_02_conv=e.phasor_a1_s01_conv),containsValue(e.phasor_a1_s01_ph_currentPhase)&&(this.phasor_02_ph_currentPhase=e.phasor_a1_s01_ph_currentPhase),containsValue(e.phasor_a1_s01_ph_conv)&&(this.phasor_02_ph_conv=e.phasor_a1_s01_ph_conv),containsValue(e.phasor_a1_s01_setupDone)&&(this.phasor_02_setupDone=e.phasor_a1_s01_setupDone),containsValue(e.ip_a1_s01_lastValue)&&(this.ip_03_lastValue=e.ip_a1_s01_lastValue),containsValue(e.ip_a1_s01_lastIndex)&&(this.ip_03_lastIndex=e.ip_a1_s01_lastIndex),containsValue(e.ip_a1_s01_resetCount)&&(this.ip_03_resetCount=e.ip_a1_s01_resetCount),containsValue(e.ip_a1_s01_sigbuf)&&(this.ip_03_sigbuf=e.ip_a1_s01_sigbuf),containsValue(e.ip_a1_s01_setupDone)&&(this.ip_03_setupDone=e.ip_a1_s01_setupDone),containsValue(e.floatnum_a2_s03_stored)&&(this.floatnum_04_stored=e.floatnum_a2_s03_stored),containsValue(e.ip_a1_s02_lastValue)&&(this.ip_04_lastValue=e.ip_a1_s02_lastValue),containsValue(e.ip_a1_s02_lastIndex)&&(this.ip_04_lastIndex=e.ip_a1_s02_lastIndex),containsValue(e.ip_a1_s02_resetCount)&&(this.ip_04_resetCount=e.ip_a1_s02_resetCount),containsValue(e.ip_a1_s02_sigbuf)&&(this.ip_04_sigbuf=e.ip_a1_s02_sigbuf),containsValue(e.ip_a1_s02_setupDone)&&(this.ip_04_setupDone=e.ip_a1_s02_setupDone),containsValue(e.floatnum_a2_s01_stored)&&(this.floatnum_05_stored=e.floatnum_a2_s01_stored),containsValue(e.line_a1_s01_activeRamps)&&(this.line_03_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_03_currentValue=e.line_a1_s01_currentValue),containsValue(e.onepole_s01_freq)&&(this.onepole_tilde_02_freq=e.onepole_s01_freq),containsValue(e.onepole_s01_needsUpdate)&&(this.onepole_tilde_02_needsUpdate=e.onepole_s01_needsUpdate),containsValue(e.onepole_s01_lastY)&&(this.onepole_tilde_02_lastY=e.onepole_s01_lastY),containsValue(e.onepole_s01_a0)&&(this.onepole_tilde_02_a0=e.onepole_s01_a0),containsValue(e.onepole_s01_b1)&&(this.onepole_tilde_02_b1=e.onepole_s01_b1),containsValue(e.onepole_s01_setupDone)&&(this.onepole_tilde_02_setupDone=e.onepole_s01_setupDone),containsValue(e.curve_a1_s01_activeRamps)&&(this.curve_02_activeRamps=e.curve_a1_s01_activeRamps),containsValue(e.curve_a1_s01_currentValue)&&(this.curve_02_currentValue=e.curve_a1_s01_currentValue),containsValue(e.curve_a1_s01_samplecount)&&(this.curve_02_samplecount=e.curve_a1_s01_samplecount),containsValue(e.curve_a1_s01_startvalue)&&(this.curve_02_startvalue=e.curve_a1_s01_startvalue),containsValue(e.floatnum_a2_s02_stored)&&(this.floatnum_06_stored=e.floatnum_a2_s02_stored),containsValue(e.p_s03_noteNumber)&&(this.noteNumber=e.p_s03_noteNumber),containsValue(e.p_s03_isMuted)&&(this.isMuted=e.p_s03_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 760652352:this.line_03_target_bang();break;case 861222235:this.curve_02_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_398{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(4),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.phasor_03_sigbuf=0,this.phasor_03_setupDone=!1,this.ip_05_sigbuf=0,this.ip_05_setupDone=!1,this.ip_06_sigbuf=0,this.ip_06_setupDone=!1,this.onepole_tilde_03_needsUpdate=!1,this.onepole_tilde_03_setupDone=!1,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 2}getNumOutputChannels(){return 2}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e}setNoteNumber(e){this.noteNumber=e}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.dspexpr_a1_s01_in1)&&(this.dspexpr_13_in1=e.dspexpr_a1_s01_in1),containsValue(e.phasor_a1_s01_freq)&&(this.phasor_03_freq=e.phasor_a1_s01_freq),containsValue(e.dspexpr_a1_s02_in1)&&(this.dspexpr_14_in1=e.dspexpr_a1_s02_in1),containsValue(e.dspexpr_a1_s02_in2)&&(this.dspexpr_14_in2=e.dspexpr_a1_s02_in2),containsValue(e.dspexpr_a1_s03_in1)&&(this.dspexpr_15_in1=e.dspexpr_a1_s03_in1),containsValue(e.dspexpr_a1_s03_in2)&&(this.dspexpr_15_in2=e.dspexpr_a1_s03_in2),containsValue(e.dspexpr_a1_s04_in1)&&(this.dspexpr_16_in1=e.dspexpr_a1_s04_in1),containsValue(e.dspexpr_a1_s04_in2)&&(this.dspexpr_16_in2=e.dspexpr_a1_s04_in2),containsValue(e.ip_a1_s01_value)&&(this.ip_05_value=e.ip_a1_s01_value),containsValue(e.ip_a1_s01_impulse)&&(this.ip_05_impulse=e.ip_a1_s01_impulse),containsValue(e.dspexpr_a1_s05_in1)&&(this.dspexpr_17_in1=e.dspexpr_a1_s05_in1),containsValue(e.dspexpr_a1_s05_in2)&&(this.dspexpr_17_in2=e.dspexpr_a1_s05_in2),containsValue(e.dspexpr_a1_s06_in1)&&(this.dspexpr_18_in1=e.dspexpr_a1_s06_in1),containsValue(e.dspexpr_a1_s06_in2)&&(this.dspexpr_18_in2=e.dspexpr_a1_s06_in2),containsValue(e.floatnum_a2_s03_input_number)&&(this.floatnum_07_input_number=e.floatnum_a2_s03_input_number),containsValue(e.floatnum_a2_s03_value)&&(this.floatnum_07_value=e.floatnum_a2_s03_value),containsValue(e.ip_a1_s02_value)&&(this.ip_06_value=e.ip_a1_s02_value),containsValue(e.ip_a1_s02_impulse)&&(this.ip_06_impulse=e.ip_a1_s02_impulse),containsValue(e.floatnum_a2_s01_input_number)&&(this.floatnum_08_input_number=e.floatnum_a2_s01_input_number),containsValue(e.floatnum_a2_s01_value)&&(this.floatnum_08_value=e.floatnum_a2_s01_value),containsValue(e.line_a1_s01_segments)&&(this.line_04_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_04_time=e.line_a1_s01_time),containsValue(e.onepole_s01_x)&&(this.onepole_tilde_03_x=e.onepole_s01_x),containsValue(e.onepole_s01_freqInHz)&&(this.onepole_tilde_03_freqInHz=e.onepole_s01_freqInHz),containsValue(e.pack_a1_s01_in1)&&(this.pack_03_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_03_in2=e.pack_a1_s01_in2),containsValue(e.pack_a1_s01_in3)&&(this.pack_03_in3=e.pack_a1_s01_in3),containsValue(e.pack_a1_s01_in4)&&(this.pack_03_in4=e.pack_a1_s01_in4),containsValue(e.pack_a1_s01_in5)&&(this.pack_03_in5=e.pack_a1_s01_in5),containsValue(e.pack_a1_s01_in6)&&(this.pack_03_in6=e.pack_a1_s01_in6),containsValue(e.curve_a1_s01_dest)&&(this.curve_03_dest=e.curve_a1_s01_dest),containsValue(e.curve_a1_s01_time)&&(this.curve_03_time=e.curve_a1_s01_time),containsValue(e.curve_a1_s01_curve)&&(this.curve_03_curve=e.curve_a1_s01_curve),containsValue(e.floatnum_a2_s02_input_number)&&(this.floatnum_09_input_number=e.floatnum_a2_s02_input_number),containsValue(e.floatnum_a2_s02_value)&&(this.floatnum_09_value=e.floatnum_a2_s02_value),containsValue(e.p_s04_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s04_audioProcessSampleCount),containsValue(e.p_s04_zeroBuffer)&&(this.zeroBuffer=e.p_s04_zeroBuffer),containsValue(e.p_s04_dummyBuffer)&&(this.dummyBuffer=e.p_s04_dummyBuffer),containsValue(e.p_s04_vs)&&(this.vs=e.p_s04_vs),containsValue(e.p_s04_maxvs)&&(this.maxvs=e.p_s04_maxvs),containsValue(e.p_s04_sr)&&(this.sr=e.p_s04_sr),containsValue(e.p_s04_invsr)&&(this.invsr=e.p_s04_invsr),containsValue(e.phasor_a1_s01_sigbuf)&&(this.phasor_03_sigbuf=e.phasor_a1_s01_sigbuf),containsValue(e.phasor_a1_s01_lastLockedPhase)&&(this.phasor_03_lastLockedPhase=e.phasor_a1_s01_lastLockedPhase),containsValue(e.phasor_a1_s01_conv)&&(this.phasor_03_conv=e.phasor_a1_s01_conv),containsValue(e.phasor_a1_s01_ph_currentPhase)&&(this.phasor_03_ph_currentPhase=e.phasor_a1_s01_ph_currentPhase),containsValue(e.phasor_a1_s01_ph_conv)&&(this.phasor_03_ph_conv=e.phasor_a1_s01_ph_conv),containsValue(e.phasor_a1_s01_setupDone)&&(this.phasor_03_setupDone=e.phasor_a1_s01_setupDone),containsValue(e.ip_a1_s01_lastValue)&&(this.ip_05_lastValue=e.ip_a1_s01_lastValue),containsValue(e.ip_a1_s01_lastIndex)&&(this.ip_05_lastIndex=e.ip_a1_s01_lastIndex),containsValue(e.ip_a1_s01_resetCount)&&(this.ip_05_resetCount=e.ip_a1_s01_resetCount),containsValue(e.ip_a1_s01_sigbuf)&&(this.ip_05_sigbuf=e.ip_a1_s01_sigbuf),containsValue(e.ip_a1_s01_setupDone)&&(this.ip_05_setupDone=e.ip_a1_s01_setupDone),containsValue(e.floatnum_a2_s03_stored)&&(this.floatnum_07_stored=e.floatnum_a2_s03_stored),containsValue(e.ip_a1_s02_lastValue)&&(this.ip_06_lastValue=e.ip_a1_s02_lastValue),containsValue(e.ip_a1_s02_lastIndex)&&(this.ip_06_lastIndex=e.ip_a1_s02_lastIndex),containsValue(e.ip_a1_s02_resetCount)&&(this.ip_06_resetCount=e.ip_a1_s02_resetCount),containsValue(e.ip_a1_s02_sigbuf)&&(this.ip_06_sigbuf=e.ip_a1_s02_sigbuf),containsValue(e.ip_a1_s02_setupDone)&&(this.ip_06_setupDone=e.ip_a1_s02_setupDone),containsValue(e.floatnum_a2_s01_stored)&&(this.floatnum_08_stored=e.floatnum_a2_s01_stored),containsValue(e.line_a1_s01_activeRamps)&&(this.line_04_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_04_currentValue=e.line_a1_s01_currentValue),containsValue(e.onepole_s01_freq)&&(this.onepole_tilde_03_freq=e.onepole_s01_freq),containsValue(e.onepole_s01_needsUpdate)&&(this.onepole_tilde_03_needsUpdate=e.onepole_s01_needsUpdate),containsValue(e.onepole_s01_lastY)&&(this.onepole_tilde_03_lastY=e.onepole_s01_lastY),containsValue(e.onepole_s01_a0)&&(this.onepole_tilde_03_a0=e.onepole_s01_a0),containsValue(e.onepole_s01_b1)&&(this.onepole_tilde_03_b1=e.onepole_s01_b1),containsValue(e.onepole_s01_setupDone)&&(this.onepole_tilde_03_setupDone=e.onepole_s01_setupDone),containsValue(e.curve_a1_s01_activeRamps)&&(this.curve_03_activeRamps=e.curve_a1_s01_activeRamps),containsValue(e.curve_a1_s01_currentValue)&&(this.curve_03_currentValue=e.curve_a1_s01_currentValue),containsValue(e.curve_a1_s01_samplecount)&&(this.curve_03_samplecount=e.curve_a1_s01_samplecount),containsValue(e.curve_a1_s01_startvalue)&&(this.curve_03_startvalue=e.curve_a1_s01_startvalue),containsValue(e.floatnum_a2_s02_stored)&&(this.floatnum_09_stored=e.floatnum_a2_s02_stored),containsValue(e.p_s04_noteNumber)&&(this.noteNumber=e.p_s04_noteNumber),containsValue(e.p_s04_isMuted)&&(this.isMuted=e.p_s04_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 760652352:this.line_04_target_bang();break;case 861222235:this.curve_03_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_399{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(7),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.ip_07_sigbuf=0,this.ip_07_setupDone=!1,this.ip_08_sigbuf=0,this.ip_08_setupDone=!1,this.ip_09_sigbuf=0,this.ip_09_setupDone=!1,this.voiceIndex=0,this.parameterOffset=0,this.p_01=new Array,this.p_02=new Array,this.p_03=new Array,this.p_04=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 1}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e,this.p_01.setVoiceIndex(e),this.p_02.setVoiceIndex(e),this.p_03.setVoiceIndex(e),this.p_04.setVoiceIndex(e)}setNoteNumber(e){this.noteNumber=e,this.p_01.setNoteNumber(e),this.p_02.setNoteNumber(e),this.p_03.setNoteNumber(e),this.p_04.setNoteNumber(e)}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.listindex_a1_s05_input)&&(this.listindex_01_input=e.listindex_a1_s05_input),containsValue(e.listindex_a1_s05_index)&&(this.listindex_01_index=e.listindex_a1_s05_index),containsValue(e.p_s02_target)&&(this.p_01_target=e.p_s02_target),containsValue(e.dspexpr_a1_s01_in1)&&(this.dspexpr_19_in1=e.dspexpr_a1_s01_in1),containsValue(e.dspexpr_a1_s01_in2)&&(this.dspexpr_19_in2=e.dspexpr_a1_s01_in2),containsValue(e.dspexpr_a1_s05_in1)&&(this.dspexpr_20_in1=e.dspexpr_a1_s05_in1),containsValue(e.dspexpr_a1_s05_in2)&&(this.dspexpr_20_in2=e.dspexpr_a1_s05_in2),containsValue(e.listindex_a1_s04_input)&&(this.listindex_02_input=e.listindex_a1_s04_input),containsValue(e.listindex_a1_s04_index)&&(this.listindex_02_index=e.listindex_a1_s04_index),containsValue(e.line_a1_s01_segments)&&(this.line_05_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_05_time=e.line_a1_s01_time),containsValue(e.voice_s01_mute_number)&&(this.voice_01_mute_number=e.voice_s01_mute_number),containsValue(e.listindex_a1_s06_input)&&(this.listindex_03_input=e.listindex_a1_s06_input),containsValue(e.listindex_a1_s06_index)&&(this.listindex_03_index=e.listindex_a1_s06_index),containsValue(e.p_s01_target)&&(this.p_02_target=e.p_s01_target),containsValue(e.loadmess_s01_message)&&(this.loadmess_01_message=e.loadmess_s01_message),containsValue(e.listindex_a1_s08_input)&&(this.listindex_04_input=e.listindex_a1_s08_input),containsValue(e.listindex_a1_s08_index)&&(this.listindex_04_index=e.listindex_a1_s08_index),containsValue(e.listindex_a1_s07_input)&&(this.listindex_05_input=e.listindex_a1_s07_input),containsValue(e.listindex_a1_s07_index)&&(this.listindex_05_index=e.listindex_a1_s07_index),containsValue(e.dspexpr_a1_s04_in1)&&(this.dspexpr_21_in1=e.dspexpr_a1_s04_in1),containsValue(e.dspexpr_a1_s04_in2)&&(this.dspexpr_21_in2=e.dspexpr_a1_s04_in2),containsValue(e.listindex_a1_s03_input)&&(this.listindex_06_input=e.listindex_a1_s03_input),containsValue(e.listindex_a1_s03_index)&&(this.listindex_06_index=e.listindex_a1_s03_index),containsValue(e.ip_a1_s01_value)&&(this.ip_07_value=e.ip_a1_s01_value),containsValue(e.ip_a1_s01_impulse)&&(this.ip_07_impulse=e.ip_a1_s01_impulse),containsValue(e.dspexpr_a1_s02_in1)&&(this.dspexpr_22_in1=e.dspexpr_a1_s02_in1),containsValue(e.dspexpr_a1_s02_in2)&&(this.dspexpr_22_in2=e.dspexpr_a1_s02_in2),containsValue(e.listindex_a1_s02_input)&&(this.listindex_07_input=e.listindex_a1_s02_input),containsValue(e.listindex_a1_s02_index)&&(this.listindex_07_index=e.listindex_a1_s02_index),containsValue(e.ip_a1_s02_value)&&(this.ip_08_value=e.ip_a1_s02_value),containsValue(e.ip_a1_s02_impulse)&&(this.ip_08_impulse=e.ip_a1_s02_impulse),containsValue(e.listindex_a1_s09_input)&&(this.listindex_08_input=e.listindex_a1_s09_input),containsValue(e.listindex_a1_s09_index)&&(this.listindex_08_index=e.listindex_a1_s09_index),containsValue(e.p_s03_target)&&(this.p_03_target=e.p_s03_target),containsValue(e.listindex_a1_s10_input)&&(this.listindex_09_input=e.listindex_a1_s10_input),containsValue(e.listindex_a1_s10_index)&&(this.listindex_09_index=e.listindex_a1_s10_index),containsValue(e.listindex_a1_s12_input)&&(this.listindex_10_input=e.listindex_a1_s12_input),containsValue(e.listindex_a1_s12_index)&&(this.listindex_10_index=e.listindex_a1_s12_index),containsValue(e.listindex_a1_s11_input)&&(this.listindex_11_input=e.listindex_a1_s11_input),containsValue(e.listindex_a1_s11_index)&&(this.listindex_11_index=e.listindex_a1_s11_index),containsValue(e.dspexpr_a1_s03_in1)&&(this.dspexpr_23_in1=e.dspexpr_a1_s03_in1),containsValue(e.dspexpr_a1_s03_in2)&&(this.dspexpr_23_in2=e.dspexpr_a1_s03_in2),containsValue(e.listindex_a1_s01_input)&&(this.listindex_12_input=e.listindex_a1_s01_input),containsValue(e.listindex_a1_s01_index)&&(this.listindex_12_index=e.listindex_a1_s01_index),containsValue(e.ip_a1_s03_value)&&(this.ip_09_value=e.ip_a1_s03_value),containsValue(e.ip_a1_s03_impulse)&&(this.ip_09_impulse=e.ip_a1_s03_impulse),containsValue(e.listindex_a1_s13_input)&&(this.listindex_13_input=e.listindex_a1_s13_input),containsValue(e.listindex_a1_s13_index)&&(this.listindex_13_index=e.listindex_a1_s13_index),containsValue(e.p_s04_target)&&(this.p_04_target=e.p_s04_target),containsValue(e.listindex_a1_s14_input)&&(this.listindex_14_input=e.listindex_a1_s14_input),containsValue(e.listindex_a1_s14_index)&&(this.listindex_14_index=e.listindex_a1_s14_index),containsValue(e.listindex_a1_s16_input)&&(this.listindex_15_input=e.listindex_a1_s16_input),containsValue(e.listindex_a1_s16_index)&&(this.listindex_15_index=e.listindex_a1_s16_index),containsValue(e.listindex_a1_s15_input)&&(this.listindex_16_input=e.listindex_a1_s15_input),containsValue(e.listindex_a1_s15_index)&&(this.listindex_16_index=e.listindex_a1_s15_index),containsValue(e.p_s01p_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01p_audioProcessSampleCount),containsValue(e.p_s01p_zeroBuffer)&&(this.zeroBuffer=e.p_s01p_zeroBuffer),containsValue(e.p_s01p_dummyBuffer)&&(this.dummyBuffer=e.p_s01p_dummyBuffer),containsValue(e.p_s01p_vs)&&(this.vs=e.p_s01p_vs),containsValue(e.p_s01p_maxvs)&&(this.maxvs=e.p_s01p_maxvs),containsValue(e.p_s01p_sr)&&(this.sr=e.p_s01p_sr),containsValue(e.p_s01p_invsr)&&(this.invsr=e.p_s01p_invsr),containsValue(e.line_a1_s01_activeRamps)&&(this.line_05_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_05_currentValue=e.line_a1_s01_currentValue),containsValue(e.ip_a1_s01_lastValue)&&(this.ip_07_lastValue=e.ip_a1_s01_lastValue),containsValue(e.ip_a1_s01_lastIndex)&&(this.ip_07_lastIndex=e.ip_a1_s01_lastIndex),containsValue(e.ip_a1_s01_resetCount)&&(this.ip_07_resetCount=e.ip_a1_s01_resetCount),containsValue(e.ip_a1_s01_sigbuf)&&(this.ip_07_sigbuf=e.ip_a1_s01_sigbuf),containsValue(e.ip_a1_s01_setupDone)&&(this.ip_07_setupDone=e.ip_a1_s01_setupDone),containsValue(e.ip_a1_s02_lastValue)&&(this.ip_08_lastValue=e.ip_a1_s02_lastValue),containsValue(e.ip_a1_s02_lastIndex)&&(this.ip_08_lastIndex=e.ip_a1_s02_lastIndex),containsValue(e.ip_a1_s02_resetCount)&&(this.ip_08_resetCount=e.ip_a1_s02_resetCount),containsValue(e.ip_a1_s02_sigbuf)&&(this.ip_08_sigbuf=e.ip_a1_s02_sigbuf),containsValue(e.ip_a1_s02_setupDone)&&(this.ip_08_setupDone=e.ip_a1_s02_setupDone),containsValue(e.ip_a1_s03_lastValue)&&(this.ip_09_lastValue=e.ip_a1_s03_lastValue),containsValue(e.ip_a1_s03_lastIndex)&&(this.ip_09_lastIndex=e.ip_a1_s03_lastIndex),containsValue(e.ip_a1_s03_resetCount)&&(this.ip_09_resetCount=e.ip_a1_s03_resetCount),containsValue(e.ip_a1_s03_sigbuf)&&(this.ip_09_sigbuf=e.ip_a1_s03_sigbuf),containsValue(e.ip_a1_s03_setupDone)&&(this.ip_09_setupDone=e.ip_a1_s03_setupDone),containsValue(e.p_s01p_noteNumber)&&(this.noteNumber=e.p_s01p_noteNumber),containsValue(e.p_s01p_isMuted)&&(this.isMuted=e.p_s01p_isMuted)),this.p_01=new RNBOSubpatcher_395,this.p_01.setEngineAndPatcher(this.getEngine(),this),this.p_01.initialize(getSubState(e,\"p_s02\")),this.p_01.setParameterOffset(this.getParameterOffset(this.p_01)),this.p_02=new RNBOSubpatcher_396,this.p_02.setEngineAndPatcher(this.getEngine(),this),this.p_02.initialize(getSubState(e,\"p_s01\")),this.p_02.setParameterOffset(this.getParameterOffset(this.p_02)),this.p_03=new RNBOSubpatcher_397,this.p_03.setEngineAndPatcher(this.getEngine(),this),this.p_03.initialize(getSubState(e,\"p_s03\")),this.p_03.setParameterOffset(this.getParameterOffset(this.p_03)),this.p_04=new RNBOSubpatcher_398,this.p_04.setEngineAndPatcher(this.getEngine(),this),this.p_04.initialize(getSubState(e,\"p_s04\")),this.p_04.setParameterOffset(this.getParameterOffset(this.p_04))}getPreset(e){this.p_01.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-79\")),this.p_02.getPreset(getSubState(getSubState(e,\"__sps\"),\"voice off\")),this.p_03.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-65\")),this.p_04.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-37\"))}processTempoEvent(e,t){this.updateTime(e),this.p_01.processTempoEvent(e,t),this.p_02.processTempoEvent(e,t),this.p_03.processTempoEvent(e,t),this.p_04.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_01.processTransportEvent(e,t),this.p_02.processTransportEvent(e,t),this.p_03.processTransportEvent(e,t),this.p_04.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_01.processBeatTimeEvent(e,t),this.p_02.processBeatTimeEvent(e,t),this.p_03.processBeatTimeEvent(e,t),this.p_04.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_01.processTimeSignatureEvent(e,t,s),this.p_02.processTimeSignatureEvent(e,t,s),this.p_03.processTimeSignatureEvent(e,t,s),this.p_04.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_01.getNumParameters()&&this.p_01.setParameterValue(e,t,s),(e-=this.p_01.getNumParameters())<this.p_02.getNumParameters()&&this.p_02.setParameterValue(e,t,s),(e-=this.p_02.getNumParameters())<this.p_03.getNumParameters()&&this.p_03.setParameterValue(e,t,s),(e-=this.p_03.getNumParameters())<this.p_04.getNumParameters()&&this.p_04.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_01.getNumParameters()?this.p_01.getParameterValue(e):(e-=this.p_01.getNumParameters())<this.p_02.getNumParameters()?this.p_02.getParameterValue(e):(e-=this.p_02.getNumParameters())<this.p_03.getNumParameters()?this.p_03.getParameterValue(e):(e-=this.p_03.getNumParameters())<this.p_04.getNumParameters()?this.p_04.getParameterValue(e):0}getPolyParameterValue(e,t){return e[0].getParameterValue(t)}setPolyParameterValue(e,t,s,a){for(var r=0;r<64;r++)e[r].setParameterValue(t,s,a)}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_01.getNumParameters()+this.p_02.getNumParameters()+this.p_03.getNumParameters()+this.p_04.getNumParameters()}getParameterName(e){return(e-=0)<this.p_01.getNumParameters()?this.p_01.getParameterName(e):(e-=this.p_01.getNumParameters())<this.p_02.getNumParameters()?this.p_02.getParameterName(e):(e-=this.p_02.getNumParameters())<this.p_03.getNumParameters()?this.p_03.getParameterName(e):(e-=this.p_03.getNumParameters())<this.p_04.getNumParameters()?this.p_04.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_01.getNumParameters()?this.p_01.getParameterId(e):(e-=this.p_01.getNumParameters())<this.p_02.getNumParameters()?this.p_02.getParameterId(e):(e-=this.p_02.getNumParameters())<this.p_03.getNumParameters()?this.p_03.getParameterId(e):(e-=this.p_03.getNumParameters())<this.p_04.getNumParameters()?this.p_04.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_01.getNumParameters()&&this.p_01.getParameterInfo(e,t),(e-=this.p_01.getNumParameters())<this.p_02.getNumParameters()&&this.p_02.getParameterInfo(e,t),(e-=this.p_02.getNumParameters())<this.p_03.getNumParameters()&&this.p_03.getParameterInfo(e,t),(e-=this.p_03.getNumParameters())<this.p_04.getNumParameters()&&this.p_04.getParameterInfo(e,t)}sendParameter(e){1==this.voiceIndex&&this.getPatcher().sendParameter(e+this.parameterOffset)}sendPolyParameter(e,t){this.getPatcher().sendParameter(e+this.parameterOffset+t-1)}getParameterOffset(e){return e==this.p_01?0:e==this.p_02?0+this.p_01.getNumParameters():e==this.p_03?0+this.p_01.getNumParameters()+this.p_02.getNumParameters():e==this.p_04?0+this.p_01.getNumParameters()+this.p_02.getNumParameters()+this.p_03.getNumParameters():0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_01.getNumParameters()?this.p_01.convertToNormalizedParameterValue(e,t):(e-=this.p_01.getNumParameters())<this.p_02.getNumParameters()?this.p_02.convertToNormalizedParameterValue(e,t):(e-=this.p_02.getNumParameters())<this.p_03.getNumParameters()?this.p_03.convertToNormalizedParameterValue(e,t):(e-=this.p_03.getNumParameters())<this.p_04.getNumParameters()?this.p_04.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_01.getNumParameters()?this.p_01.convertFromNormalizedParameterValue(e,t):(e-=this.p_01.getNumParameters())<this.p_02.getNumParameters()?this.p_02.convertFromNormalizedParameterValue(e,t):(e-=this.p_02.getNumParameters())<this.p_03.getNumParameters()?this.p_03.convertFromNormalizedParameterValue(e,t):(e-=this.p_03.getNumParameters())<this.p_04.getNumParameters()?this.p_04.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_01.getNumParameters()?this.p_01.constrainParameterValue(e,t):(e-=this.p_01.getNumParameters())<this.p_02.getNumParameters()?this.p_02.constrainParameterValue(e,t):(e-=this.p_02.getNumParameters())<this.p_03.getNumParameters()?this.p_03.constrainParameterValue(e,t):(e-=this.p_03.getNumParameters())<this.p_04.getNumParameters()?this.p_04.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 892732297:this.loadmess_01_startupbang_bang();break;case 760652352:this.line_05_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s),this.p_01.processNumMessage(e,t,s,a),this.p_02.processNumMessage(e,t,s,a),this.p_03.processNumMessage(e,t,s,a),this.p_04.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s),this.p_01.processListMessage(e,t,s,a),this.p_02.processListMessage(e,t,s,a),this.p_03.processListMessage(e,t,s,a),this.p_04.processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"startupbang\"):TAG(\"p_obj-148/p_obj-1/loadmess_obj-2\")==t&&this.loadmess_01_startupbang_bang()}this.p_01.processBangMessage(e,t,s),this.p_02.processBangMessage(e,t,s),this.p_03.processBangMessage(e,t,s),this.p_04.processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"p_obj-148/p_obj-1/loadmess_obj-2\"):return\"p_obj-148/p_obj-1/loadmess_obj-2\"}var t=this.p_01.resolveTag(e);if(t)return t;var s=this.p_02.resolveTag(e);if(s)return s;var a=this.p_03.resolveTag(e);if(a)return a;var r=this.p_04.resolveTag(e);return r||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_01.processDataViewUpdate(e,t),this.p_02.processDataViewUpdate(e,t),this.p_03.processDataViewUpdate(e,t),this.p_04.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_479{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_02_phase=!0,this.voiceIndex=0,this.parameterOffset=0,this.p_05=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 1}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.p_s01_target)&&(this.p_05_target=e.p_s01_target),containsValue(e.counter_s01_carryflag)&&(this.counter_02_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_02_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_02_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_02_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_02_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_02_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_02_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_02_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_02_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_02_minimum=e.counter_s01_minimum),containsValue(e.loadmess_s01_message)&&(this.loadmess_02_message=e.loadmess_s01_message),containsValue(e.p_s13_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s13_audioProcessSampleCount),containsValue(e.p_s13_zeroBuffer)&&(this.zeroBuffer=e.p_s13_zeroBuffer),containsValue(e.p_s13_dummyBuffer)&&(this.dummyBuffer=e.p_s13_dummyBuffer),containsValue(e.p_s13_vs)&&(this.vs=e.p_s13_vs),containsValue(e.p_s13_maxvs)&&(this.maxvs=e.p_s13_maxvs),containsValue(e.p_s13_sr)&&(this.sr=e.p_s13_sr),containsValue(e.p_s13_invsr)&&(this.invsr=e.p_s13_invsr),containsValue(e.counter_s01_count)&&(this.counter_02_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_02_phase=e.counter_s01_phase),containsValue(e.p_s13_noteNumber)&&(this.noteNumber=e.p_s13_noteNumber),containsValue(e.p_s13_isMuted)&&(this.isMuted=e.p_s13_isMuted));for(var t=0;t<64;t++)this.p_05[t]=new RNBOSubpatcher_399,this.p_05[t].setEngineAndPatcher(this.getEngine(),this),this.p_05[t].initialize(getSubStateAt(e,\"p_s01p\",t)),this.p_05[t].setParameterOffset(this.getParameterOffset(this.p_05[0])),this.p_05[t].setVoiceIndex(t+1)}getPreset(e){for(var t=0;t<64;t++)this.p_05[t].getPreset(getSubStateAt(getSubState(e,\"__sps\"),\"p_obj-1\",t))}processTempoEvent(e,t){this.updateTime(e);for(var s=0;s<64;s++)this.p_05[s].processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e);for(var s=0;s<64;s++)this.p_05[s].processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e);for(var s=0;s<64;s++)this.p_05[s].processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e);for(var a=0;a<64;a++)this.p_05[a].processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_05[0].getNumParameters()&&this.p_05[0].setPolyParameterValue(this.p_05,e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_05[0].getNumParameters()?this.p_05[0].getPolyParameterValue(this.p_05,e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_05[0].getNumParameters()}getParameterName(e){if((e-=0)<this.p_05[0].getNumParameters())for(var t=0;t<64;t++)return this.p_05[t].getParameterName(e);return\"bogus\"}getParameterId(e){if((e-=0)<this.p_05[0].getNumParameters())for(var t=0;t<64;t++)return this.p_05[t].getParameterId(e);return\"bogus\"}getParameterInfo(e,t){if((e-=0)<this.p_05[0].getNumParameters())for(var s=0;s<64;s++)this.p_05[s].getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return this.p_05[0],0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){if((e-=0)<this.p_05[0].getNumParameters())for(var s=0;s<64;s++)return this.p_05[s].convertToNormalizedParameterValue(e,t);return t}convertFromNormalizedParameterValue(e,t){if(t=t<0?0:t>1?1:t,(e-=0)<this.p_05[0].getNumParameters())for(var s=0;s<64;s++)return this.p_05[s].convertFromNormalizedParameterValue(e,t);return t}constrainParameterValue(e,t){if((e-=0)<this.p_05[0].getNumParameters())for(var s=0;s<64;s++)return this.p_05[s].constrainParameterValue(e,t);return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 892732297:this.loadmess_02_startupbang_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s);for(var r=0;r<64;r++)this.p_05[r].processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s);for(var r=0;r<64;r++)this.p_05[r].processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"startupbang\"):TAG(\"p_obj-148/loadmess_obj-6\")==t&&this.loadmess_02_startupbang_bang()}for(var a=0;a<64;a++)this.p_05[a].processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"p_obj-148/loadmess_obj-6\"):return\"p_obj-148/loadmess_obj-6\"}var t=this.p_05[0].resolveTag(e);return t||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t);for(var s=0;s<64;s++)this.p_05[s].processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_403{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_01_nz_last=0,this.random_02_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_03_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_03_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_03_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_04_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_04_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_04_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_01_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_01_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_05_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_05_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_05_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_02_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_02_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_01_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_01_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s17_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s17_audioProcessSampleCount),containsValue(e.p_s17_zeroBuffer)&&(this.zeroBuffer=e.p_s17_zeroBuffer),containsValue(e.p_s17_dummyBuffer)&&(this.dummyBuffer=e.p_s17_dummyBuffer),containsValue(e.p_s17_vs)&&(this.vs=e.p_s17_vs),containsValue(e.p_s17_maxvs)&&(this.maxvs=e.p_s17_maxvs),containsValue(e.p_s17_sr)&&(this.sr=e.p_s17_sr),containsValue(e.p_s17_invsr)&&(this.invsr=e.p_s17_invsr),containsValue(e.random_s02_nz_last)&&(this.random_01_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_01_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_02_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_02_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s17_noteNumber)&&(this.noteNumber=e.p_s17_noteNumber),containsValue(e.p_s17_isMuted)&&(this.isMuted=e.p_s17_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_404{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_03_nz_last=0,this.random_04_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_06_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_06_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_06_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_07_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_07_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_07_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_03_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_03_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_08_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_08_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_08_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_04_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_04_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_02_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_02_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s16_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s16_audioProcessSampleCount),containsValue(e.p_s16_zeroBuffer)&&(this.zeroBuffer=e.p_s16_zeroBuffer),containsValue(e.p_s16_dummyBuffer)&&(this.dummyBuffer=e.p_s16_dummyBuffer),containsValue(e.p_s16_vs)&&(this.vs=e.p_s16_vs),containsValue(e.p_s16_maxvs)&&(this.maxvs=e.p_s16_maxvs),containsValue(e.p_s16_sr)&&(this.sr=e.p_s16_sr),containsValue(e.p_s16_invsr)&&(this.invsr=e.p_s16_invsr),containsValue(e.random_s02_nz_last)&&(this.random_03_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_03_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_04_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_04_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s16_noteNumber)&&(this.noteNumber=e.p_s16_noteNumber),containsValue(e.p_s16_isMuted)&&(this.isMuted=e.p_s16_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_405{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_05_nz_last=0,this.random_06_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_09_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_09_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_09_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_10_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_10_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_10_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_05_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_05_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_11_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_11_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_11_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_06_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_06_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_03_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_03_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s15_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s15_audioProcessSampleCount),containsValue(e.p_s15_zeroBuffer)&&(this.zeroBuffer=e.p_s15_zeroBuffer),containsValue(e.p_s15_dummyBuffer)&&(this.dummyBuffer=e.p_s15_dummyBuffer),containsValue(e.p_s15_vs)&&(this.vs=e.p_s15_vs),containsValue(e.p_s15_maxvs)&&(this.maxvs=e.p_s15_maxvs),containsValue(e.p_s15_sr)&&(this.sr=e.p_s15_sr),containsValue(e.p_s15_invsr)&&(this.invsr=e.p_s15_invsr),containsValue(e.random_s02_nz_last)&&(this.random_05_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_05_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_06_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_06_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s15_noteNumber)&&(this.noteNumber=e.p_s15_noteNumber),containsValue(e.p_s15_isMuted)&&(this.isMuted=e.p_s15_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_406{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_07_nz_last=0,this.random_08_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_12_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_12_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_12_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_13_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_13_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_13_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_07_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_07_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_14_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_14_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_14_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_08_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_08_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_04_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_04_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s14_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s14_audioProcessSampleCount),containsValue(e.p_s14_zeroBuffer)&&(this.zeroBuffer=e.p_s14_zeroBuffer),containsValue(e.p_s14_dummyBuffer)&&(this.dummyBuffer=e.p_s14_dummyBuffer),containsValue(e.p_s14_vs)&&(this.vs=e.p_s14_vs),containsValue(e.p_s14_maxvs)&&(this.maxvs=e.p_s14_maxvs),containsValue(e.p_s14_sr)&&(this.sr=e.p_s14_sr),containsValue(e.p_s14_invsr)&&(this.invsr=e.p_s14_invsr),containsValue(e.random_s02_nz_last)&&(this.random_07_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_07_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_08_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_08_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s14_noteNumber)&&(this.noteNumber=e.p_s14_noteNumber),containsValue(e.p_s14_isMuted)&&(this.isMuted=e.p_s14_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_407{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_09_nz_last=0,this.random_10_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_15_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_15_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_15_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_16_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_16_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_16_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_09_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_09_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_17_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_17_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_17_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_10_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_10_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_05_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_05_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s13_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s13_audioProcessSampleCount),containsValue(e.p_s13_zeroBuffer)&&(this.zeroBuffer=e.p_s13_zeroBuffer),containsValue(e.p_s13_dummyBuffer)&&(this.dummyBuffer=e.p_s13_dummyBuffer),containsValue(e.p_s13_vs)&&(this.vs=e.p_s13_vs),containsValue(e.p_s13_maxvs)&&(this.maxvs=e.p_s13_maxvs),containsValue(e.p_s13_sr)&&(this.sr=e.p_s13_sr),containsValue(e.p_s13_invsr)&&(this.invsr=e.p_s13_invsr),containsValue(e.random_s02_nz_last)&&(this.random_09_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_09_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_10_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_10_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s13_noteNumber)&&(this.noteNumber=e.p_s13_noteNumber),containsValue(e.p_s13_isMuted)&&(this.isMuted=e.p_s13_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_408{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_11_nz_last=0,this.random_12_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_18_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_18_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_18_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_19_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_19_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_19_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_11_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_11_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_20_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_20_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_20_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_12_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_12_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_06_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_06_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s12_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s12_audioProcessSampleCount),containsValue(e.p_s12_zeroBuffer)&&(this.zeroBuffer=e.p_s12_zeroBuffer),containsValue(e.p_s12_dummyBuffer)&&(this.dummyBuffer=e.p_s12_dummyBuffer),containsValue(e.p_s12_vs)&&(this.vs=e.p_s12_vs),containsValue(e.p_s12_maxvs)&&(this.maxvs=e.p_s12_maxvs),containsValue(e.p_s12_sr)&&(this.sr=e.p_s12_sr),containsValue(e.p_s12_invsr)&&(this.invsr=e.p_s12_invsr),containsValue(e.random_s02_nz_last)&&(this.random_11_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_11_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_12_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_12_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s12_noteNumber)&&(this.noteNumber=e.p_s12_noteNumber),containsValue(e.p_s12_isMuted)&&(this.isMuted=e.p_s12_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_409{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_13_nz_last=0,this.random_14_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_21_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_21_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_21_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_22_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_22_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_22_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_13_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_13_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_23_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_23_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_23_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_14_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_14_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_07_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_07_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s11_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s11_audioProcessSampleCount),containsValue(e.p_s11_zeroBuffer)&&(this.zeroBuffer=e.p_s11_zeroBuffer),containsValue(e.p_s11_dummyBuffer)&&(this.dummyBuffer=e.p_s11_dummyBuffer),containsValue(e.p_s11_vs)&&(this.vs=e.p_s11_vs),containsValue(e.p_s11_maxvs)&&(this.maxvs=e.p_s11_maxvs),containsValue(e.p_s11_sr)&&(this.sr=e.p_s11_sr),containsValue(e.p_s11_invsr)&&(this.invsr=e.p_s11_invsr),containsValue(e.random_s02_nz_last)&&(this.random_13_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_13_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_14_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_14_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s11_noteNumber)&&(this.noteNumber=e.p_s11_noteNumber),containsValue(e.p_s11_isMuted)&&(this.isMuted=e.p_s11_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_400{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_24_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_24_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_24_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_25_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_25_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_25_out1=e.expr_s01_out1),containsValue(e.scale_s01_input)&&(this.scale_01_input=e.scale_s01_input),containsValue(e.scale_s01_inlow)&&(this.scale_01_inlow=e.scale_s01_inlow),containsValue(e.scale_s01_inhigh)&&(this.scale_01_inhigh=e.scale_s01_inhigh),containsValue(e.scale_s01_outlow)&&(this.scale_01_outlow=e.scale_s01_outlow),containsValue(e.scale_s01_outhigh)&&(this.scale_01_outhigh=e.scale_s01_outhigh),containsValue(e.scale_s01_power)&&(this.scale_01_power=e.scale_s01_power),containsValue(e.scale_s01_out)&&(this.scale_01_out=e.scale_s01_out),containsValue(e.expr_s03_in1)&&(this.expr_26_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_26_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_26_out1=e.expr_s03_out1),containsValue(e.scale_s02_input)&&(this.scale_02_input=e.scale_s02_input),containsValue(e.scale_s02_inlow)&&(this.scale_02_inlow=e.scale_s02_inlow),containsValue(e.scale_s02_inhigh)&&(this.scale_02_inhigh=e.scale_s02_inhigh),containsValue(e.scale_s02_outlow)&&(this.scale_02_outlow=e.scale_s02_outlow),containsValue(e.scale_s02_outhigh)&&(this.scale_02_outhigh=e.scale_s02_outhigh),containsValue(e.scale_s02_power)&&(this.scale_02_power=e.scale_s02_power),containsValue(e.scale_s02_out)&&(this.scale_02_out=e.scale_s02_out),containsValue(e.expr_s04_in1)&&(this.expr_27_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_27_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_27_out1=e.expr_s04_out1),containsValue(e.expr_s05_in1)&&(this.expr_28_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_28_in2=e.expr_s05_in2),containsValue(e.expr_s05_in3)&&(this.expr_28_in3=e.expr_s05_in3),containsValue(e.expr_s05_out1)&&(this.expr_28_out1=e.expr_s05_out1),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_410{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0,this.p_06=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.unpack_s03_out1)&&(this.unpack_01_out1=e.unpack_s03_out1),containsValue(e.unpack_s03_out2)&&(this.unpack_01_out2=e.unpack_s03_out2),containsValue(e.pack_s01_in1)&&(this.pack_04_in1=e.pack_s01_in1),containsValue(e.pack_s01_in2)&&(this.pack_04_in2=e.pack_s01_in2),containsValue(e.unpack_s04_out1)&&(this.unpack_02_out1=e.unpack_s04_out1),containsValue(e.unpack_s04_out2)&&(this.unpack_02_out2=e.unpack_s04_out2),containsValue(e.receive_a1_s02_output_number)&&(this.receive_05_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_05_output_list=e.receive_a1_s02_output_list),containsValue(e.expr_s07_in1)&&(this.expr_29_in1=e.expr_s07_in1),containsValue(e.expr_s07_in2)&&(this.expr_29_in2=e.expr_s07_in2),containsValue(e.expr_s07_out1)&&(this.expr_29_out1=e.expr_s07_out1),containsValue(e.pack_a1_s01_in1)&&(this.pack_05_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_05_in2=e.pack_a1_s01_in2),containsValue(e.maximum_a1_s01_input)&&(this.maximum_02_input=e.maximum_a1_s01_input),containsValue(e.maximum_a1_s01_right)&&(this.maximum_02_right=e.maximum_a1_s01_right),containsValue(e.maximum_a1_s01_out)&&(this.maximum_02_out=e.maximum_a1_s01_out),containsValue(e.maximum_a1_s01_index)&&(this.maximum_02_index=e.maximum_a1_s01_index),containsValue(e.unpack_s02_out1)&&(this.unpack_03_out1=e.unpack_s02_out1),containsValue(e.unpack_s02_out2)&&(this.unpack_03_out2=e.unpack_s02_out2),containsValue(e.expr_s06_in1)&&(this.expr_30_in1=e.expr_s06_in1),containsValue(e.expr_s06_in2)&&(this.expr_30_in2=e.expr_s06_in2),containsValue(e.expr_s06_out1)&&(this.expr_30_out1=e.expr_s06_out1),containsValue(e.switchobj_a1_s01_onoff)&&(this.switchobj_02_onoff=e.switchobj_a1_s01_onoff),containsValue(e.receive_a1_s01_output_number)&&(this.receive_06_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_06_output_list=e.receive_a1_s01_output_list),containsValue(e.p_s01_target)&&(this.p_06_target=e.p_s01_target),containsValue(e.expr_s04_in1)&&(this.expr_31_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_31_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_31_out1=e.expr_s04_out1),containsValue(e.unpack_s01_out1)&&(this.unpack_04_out1=e.unpack_s01_out1),containsValue(e.unpack_s01_out2)&&(this.unpack_04_out2=e.unpack_s01_out2),containsValue(e.expr_s05_in1)&&(this.expr_32_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_32_in2=e.expr_s05_in2),containsValue(e.expr_s05_out1)&&(this.expr_32_out1=e.expr_s05_out1),containsValue(e.expr_s02_in1)&&(this.expr_33_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_33_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_33_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_34_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_34_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_34_out1=e.expr_s03_out1),containsValue(e.expr_s01_in1)&&(this.expr_35_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_35_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_35_out1=e.expr_s01_out1),containsValue(e.p_s03_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s03_audioProcessSampleCount),containsValue(e.p_s03_zeroBuffer)&&(this.zeroBuffer=e.p_s03_zeroBuffer),containsValue(e.p_s03_dummyBuffer)&&(this.dummyBuffer=e.p_s03_dummyBuffer),containsValue(e.p_s03_vs)&&(this.vs=e.p_s03_vs),containsValue(e.p_s03_maxvs)&&(this.maxvs=e.p_s03_maxvs),containsValue(e.p_s03_sr)&&(this.sr=e.p_s03_sr),containsValue(e.p_s03_invsr)&&(this.invsr=e.p_s03_invsr),containsValue(e.p_s03_noteNumber)&&(this.noteNumber=e.p_s03_noteNumber),containsValue(e.p_s03_isMuted)&&(this.isMuted=e.p_s03_isMuted)),this.p_06=new RNBOSubpatcher_400,this.p_06.setEngineAndPatcher(this.getEngine(),this),this.p_06.initialize(getSubState(e,\"p_s01\")),this.p_06.setParameterOffset(this.getParameterOffset(this.p_06))}getPreset(e){this.p_06.getPreset(getSubState(getSubState(e,\"__sps\"),\"scaled_envelope\"))}processTempoEvent(e,t){this.updateTime(e),this.p_06.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_06.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_06.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_06.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_06.getNumParameters()&&this.p_06.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_06.getNumParameters()?this.p_06.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_06.getNumParameters()}getParameterName(e){return(e-=0)<this.p_06.getNumParameters()?this.p_06.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_06.getNumParameters()?this.p_06.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_06.getNumParameters()&&this.p_06.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return this.p_06,0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_06.getNumParameters()?this.p_06.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_06.getNumParameters()?this.p_06.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_06.getNumParameters()?this.p_06.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s),this.p_06.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s),this.p_06.processListMessage(e,t,s,a)}processBangMessage(e,t,s){this.updateTime(s),this.p_06.processBangMessage(e,t,s)}resolveTag(e){var t=this.p_06.resolveTag(e);return t||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_06.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_411{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_15_nz_last=0,this.random_16_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_36_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_36_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_36_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_37_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_37_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_37_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_15_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_15_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_38_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_38_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_38_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_16_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_16_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_08_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_08_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s10_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s10_audioProcessSampleCount),containsValue(e.p_s10_zeroBuffer)&&(this.zeroBuffer=e.p_s10_zeroBuffer),containsValue(e.p_s10_dummyBuffer)&&(this.dummyBuffer=e.p_s10_dummyBuffer),containsValue(e.p_s10_vs)&&(this.vs=e.p_s10_vs),containsValue(e.p_s10_maxvs)&&(this.maxvs=e.p_s10_maxvs),containsValue(e.p_s10_sr)&&(this.sr=e.p_s10_sr),containsValue(e.p_s10_invsr)&&(this.invsr=e.p_s10_invsr),containsValue(e.random_s02_nz_last)&&(this.random_15_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_15_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_16_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_16_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s10_noteNumber)&&(this.noteNumber=e.p_s10_noteNumber),containsValue(e.p_s10_isMuted)&&(this.isMuted=e.p_s10_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_401{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_39_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_39_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_39_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_40_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_40_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_40_out1=e.expr_s01_out1),containsValue(e.scale_s01_input)&&(this.scale_03_input=e.scale_s01_input),containsValue(e.scale_s01_inlow)&&(this.scale_03_inlow=e.scale_s01_inlow),containsValue(e.scale_s01_inhigh)&&(this.scale_03_inhigh=e.scale_s01_inhigh),containsValue(e.scale_s01_outlow)&&(this.scale_03_outlow=e.scale_s01_outlow),containsValue(e.scale_s01_outhigh)&&(this.scale_03_outhigh=e.scale_s01_outhigh),containsValue(e.scale_s01_power)&&(this.scale_03_power=e.scale_s01_power),containsValue(e.scale_s01_out)&&(this.scale_03_out=e.scale_s01_out),containsValue(e.expr_s03_in1)&&(this.expr_41_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_41_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_41_out1=e.expr_s03_out1),containsValue(e.scale_s02_input)&&(this.scale_04_input=e.scale_s02_input),containsValue(e.scale_s02_inlow)&&(this.scale_04_inlow=e.scale_s02_inlow),containsValue(e.scale_s02_inhigh)&&(this.scale_04_inhigh=e.scale_s02_inhigh),containsValue(e.scale_s02_outlow)&&(this.scale_04_outlow=e.scale_s02_outlow),containsValue(e.scale_s02_outhigh)&&(this.scale_04_outhigh=e.scale_s02_outhigh),containsValue(e.scale_s02_power)&&(this.scale_04_power=e.scale_s02_power),containsValue(e.scale_s02_out)&&(this.scale_04_out=e.scale_s02_out),containsValue(e.expr_s04_in1)&&(this.expr_42_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_42_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_42_out1=e.expr_s04_out1),containsValue(e.expr_s05_in1)&&(this.expr_43_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_43_in2=e.expr_s05_in2),containsValue(e.expr_s05_in3)&&(this.expr_43_in3=e.expr_s05_in3),containsValue(e.expr_s05_out1)&&(this.expr_43_out1=e.expr_s05_out1),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_412{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0,this.p_07=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.unpack_s03_out1)&&(this.unpack_05_out1=e.unpack_s03_out1),containsValue(e.unpack_s03_out2)&&(this.unpack_05_out2=e.unpack_s03_out2),containsValue(e.pack_s01_in1)&&(this.pack_06_in1=e.pack_s01_in1),containsValue(e.pack_s01_in2)&&(this.pack_06_in2=e.pack_s01_in2),containsValue(e.unpack_s04_out1)&&(this.unpack_06_out1=e.unpack_s04_out1),containsValue(e.unpack_s04_out2)&&(this.unpack_06_out2=e.unpack_s04_out2),containsValue(e.receive_a1_s02_output_number)&&(this.receive_07_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_07_output_list=e.receive_a1_s02_output_list),containsValue(e.expr_s07_in1)&&(this.expr_44_in1=e.expr_s07_in1),containsValue(e.expr_s07_in2)&&(this.expr_44_in2=e.expr_s07_in2),containsValue(e.expr_s07_out1)&&(this.expr_44_out1=e.expr_s07_out1),containsValue(e.pack_a1_s01_in1)&&(this.pack_07_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_07_in2=e.pack_a1_s01_in2),containsValue(e.maximum_a1_s01_input)&&(this.maximum_03_input=e.maximum_a1_s01_input),containsValue(e.maximum_a1_s01_right)&&(this.maximum_03_right=e.maximum_a1_s01_right),containsValue(e.maximum_a1_s01_out)&&(this.maximum_03_out=e.maximum_a1_s01_out),containsValue(e.maximum_a1_s01_index)&&(this.maximum_03_index=e.maximum_a1_s01_index),containsValue(e.unpack_s02_out1)&&(this.unpack_07_out1=e.unpack_s02_out1),containsValue(e.unpack_s02_out2)&&(this.unpack_07_out2=e.unpack_s02_out2),containsValue(e.expr_s06_in1)&&(this.expr_45_in1=e.expr_s06_in1),containsValue(e.expr_s06_in2)&&(this.expr_45_in2=e.expr_s06_in2),containsValue(e.expr_s06_out1)&&(this.expr_45_out1=e.expr_s06_out1),containsValue(e.switchobj_a1_s01_onoff)&&(this.switchobj_03_onoff=e.switchobj_a1_s01_onoff),containsValue(e.receive_a1_s01_output_number)&&(this.receive_08_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_08_output_list=e.receive_a1_s01_output_list),containsValue(e.p_s01_target)&&(this.p_07_target=e.p_s01_target),containsValue(e.expr_s04_in1)&&(this.expr_46_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_46_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_46_out1=e.expr_s04_out1),containsValue(e.unpack_s01_out1)&&(this.unpack_08_out1=e.unpack_s01_out1),containsValue(e.unpack_s01_out2)&&(this.unpack_08_out2=e.unpack_s01_out2),containsValue(e.expr_s05_in1)&&(this.expr_47_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_47_in2=e.expr_s05_in2),containsValue(e.expr_s05_out1)&&(this.expr_47_out1=e.expr_s05_out1),containsValue(e.expr_s02_in1)&&(this.expr_48_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_48_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_48_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_49_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_49_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_49_out1=e.expr_s03_out1),containsValue(e.expr_s01_in1)&&(this.expr_50_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_50_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_50_out1=e.expr_s01_out1),containsValue(e.p_s02_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s02_audioProcessSampleCount),containsValue(e.p_s02_zeroBuffer)&&(this.zeroBuffer=e.p_s02_zeroBuffer),containsValue(e.p_s02_dummyBuffer)&&(this.dummyBuffer=e.p_s02_dummyBuffer),containsValue(e.p_s02_vs)&&(this.vs=e.p_s02_vs),containsValue(e.p_s02_maxvs)&&(this.maxvs=e.p_s02_maxvs),containsValue(e.p_s02_sr)&&(this.sr=e.p_s02_sr),containsValue(e.p_s02_invsr)&&(this.invsr=e.p_s02_invsr),containsValue(e.p_s02_noteNumber)&&(this.noteNumber=e.p_s02_noteNumber),containsValue(e.p_s02_isMuted)&&(this.isMuted=e.p_s02_isMuted)),this.p_07=new RNBOSubpatcher_401,this.p_07.setEngineAndPatcher(this.getEngine(),this),this.p_07.initialize(getSubState(e,\"p_s01\")),this.p_07.setParameterOffset(this.getParameterOffset(this.p_07))}getPreset(e){this.p_07.getPreset(getSubState(getSubState(e,\"__sps\"),\"scaled_envelope\"))}processTempoEvent(e,t){this.updateTime(e),this.p_07.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_07.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_07.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_07.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_07.getNumParameters()&&this.p_07.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_07.getNumParameters()?this.p_07.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_07.getNumParameters()}getParameterName(e){return(e-=0)<this.p_07.getNumParameters()?this.p_07.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_07.getNumParameters()?this.p_07.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_07.getNumParameters()&&this.p_07.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return this.p_07,0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_07.getNumParameters()?this.p_07.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_07.getNumParameters()?this.p_07.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_07.getNumParameters()?this.p_07.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s),this.p_07.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s),this.p_07.processListMessage(e,t,s,a)}processBangMessage(e,t,s){this.updateTime(s),this.p_07.processBangMessage(e,t,s)}resolveTag(e){var t=this.p_07.resolveTag(e);return t||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_07.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_413{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_17_nz_last=0,this.random_18_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_51_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_51_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_51_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_52_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_52_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_52_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_17_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_17_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_53_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_53_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_53_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_18_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_18_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_09_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_09_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s09_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s09_audioProcessSampleCount),containsValue(e.p_s09_zeroBuffer)&&(this.zeroBuffer=e.p_s09_zeroBuffer),containsValue(e.p_s09_dummyBuffer)&&(this.dummyBuffer=e.p_s09_dummyBuffer),containsValue(e.p_s09_vs)&&(this.vs=e.p_s09_vs),containsValue(e.p_s09_maxvs)&&(this.maxvs=e.p_s09_maxvs),containsValue(e.p_s09_sr)&&(this.sr=e.p_s09_sr),containsValue(e.p_s09_invsr)&&(this.invsr=e.p_s09_invsr),containsValue(e.random_s02_nz_last)&&(this.random_17_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_17_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_18_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_18_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s09_noteNumber)&&(this.noteNumber=e.p_s09_noteNumber),containsValue(e.p_s09_isMuted)&&(this.isMuted=e.p_s09_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_402{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_54_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_54_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_54_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_55_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_55_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_55_out1=e.expr_s01_out1),containsValue(e.scale_s01_input)&&(this.scale_05_input=e.scale_s01_input),containsValue(e.scale_s01_inlow)&&(this.scale_05_inlow=e.scale_s01_inlow),containsValue(e.scale_s01_inhigh)&&(this.scale_05_inhigh=e.scale_s01_inhigh),containsValue(e.scale_s01_outlow)&&(this.scale_05_outlow=e.scale_s01_outlow),containsValue(e.scale_s01_outhigh)&&(this.scale_05_outhigh=e.scale_s01_outhigh),containsValue(e.scale_s01_power)&&(this.scale_05_power=e.scale_s01_power),containsValue(e.scale_s01_out)&&(this.scale_05_out=e.scale_s01_out),containsValue(e.expr_s03_in1)&&(this.expr_56_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_56_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_56_out1=e.expr_s03_out1),containsValue(e.scale_s02_input)&&(this.scale_06_input=e.scale_s02_input),containsValue(e.scale_s02_inlow)&&(this.scale_06_inlow=e.scale_s02_inlow),containsValue(e.scale_s02_inhigh)&&(this.scale_06_inhigh=e.scale_s02_inhigh),containsValue(e.scale_s02_outlow)&&(this.scale_06_outlow=e.scale_s02_outlow),containsValue(e.scale_s02_outhigh)&&(this.scale_06_outhigh=e.scale_s02_outhigh),containsValue(e.scale_s02_power)&&(this.scale_06_power=e.scale_s02_power),containsValue(e.scale_s02_out)&&(this.scale_06_out=e.scale_s02_out),containsValue(e.expr_s04_in1)&&(this.expr_57_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_57_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_57_out1=e.expr_s04_out1),containsValue(e.expr_s05_in1)&&(this.expr_58_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_58_in2=e.expr_s05_in2),containsValue(e.expr_s05_in3)&&(this.expr_58_in3=e.expr_s05_in3),containsValue(e.expr_s05_out1)&&(this.expr_58_out1=e.expr_s05_out1),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_414{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0,this.p_08=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.unpack_s03_out1)&&(this.unpack_09_out1=e.unpack_s03_out1),containsValue(e.unpack_s03_out2)&&(this.unpack_09_out2=e.unpack_s03_out2),containsValue(e.pack_s01_in1)&&(this.pack_08_in1=e.pack_s01_in1),containsValue(e.pack_s01_in2)&&(this.pack_08_in2=e.pack_s01_in2),containsValue(e.unpack_s04_out1)&&(this.unpack_10_out1=e.unpack_s04_out1),containsValue(e.unpack_s04_out2)&&(this.unpack_10_out2=e.unpack_s04_out2),containsValue(e.receive_a1_s02_output_number)&&(this.receive_09_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_09_output_list=e.receive_a1_s02_output_list),containsValue(e.expr_s07_in1)&&(this.expr_59_in1=e.expr_s07_in1),containsValue(e.expr_s07_in2)&&(this.expr_59_in2=e.expr_s07_in2),containsValue(e.expr_s07_out1)&&(this.expr_59_out1=e.expr_s07_out1),containsValue(e.pack_a1_s01_in1)&&(this.pack_09_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_09_in2=e.pack_a1_s01_in2),containsValue(e.maximum_a1_s01_input)&&(this.maximum_04_input=e.maximum_a1_s01_input),containsValue(e.maximum_a1_s01_right)&&(this.maximum_04_right=e.maximum_a1_s01_right),containsValue(e.maximum_a1_s01_out)&&(this.maximum_04_out=e.maximum_a1_s01_out),containsValue(e.maximum_a1_s01_index)&&(this.maximum_04_index=e.maximum_a1_s01_index),containsValue(e.unpack_s02_out1)&&(this.unpack_11_out1=e.unpack_s02_out1),containsValue(e.unpack_s02_out2)&&(this.unpack_11_out2=e.unpack_s02_out2),containsValue(e.expr_s06_in1)&&(this.expr_60_in1=e.expr_s06_in1),containsValue(e.expr_s06_in2)&&(this.expr_60_in2=e.expr_s06_in2),containsValue(e.expr_s06_out1)&&(this.expr_60_out1=e.expr_s06_out1),containsValue(e.switchobj_a1_s01_onoff)&&(this.switchobj_04_onoff=e.switchobj_a1_s01_onoff),containsValue(e.receive_a1_s01_output_number)&&(this.receive_10_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_10_output_list=e.receive_a1_s01_output_list),containsValue(e.p_s01_target)&&(this.p_08_target=e.p_s01_target),containsValue(e.expr_s04_in1)&&(this.expr_61_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_61_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_61_out1=e.expr_s04_out1),containsValue(e.unpack_s01_out1)&&(this.unpack_12_out1=e.unpack_s01_out1),containsValue(e.unpack_s01_out2)&&(this.unpack_12_out2=e.unpack_s01_out2),containsValue(e.expr_s05_in1)&&(this.expr_62_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_62_in2=e.expr_s05_in2),containsValue(e.expr_s05_out1)&&(this.expr_62_out1=e.expr_s05_out1),containsValue(e.expr_s02_in1)&&(this.expr_63_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_63_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_63_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_64_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_64_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_64_out1=e.expr_s03_out1),containsValue(e.expr_s01_in1)&&(this.expr_65_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_65_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_65_out1=e.expr_s01_out1),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted)),this.p_08=new RNBOSubpatcher_402,this.p_08.setEngineAndPatcher(this.getEngine(),this),this.p_08.initialize(getSubState(e,\"p_s01\")),this.p_08.setParameterOffset(this.getParameterOffset(this.p_08))}getPreset(e){this.p_08.getPreset(getSubState(getSubState(e,\"__sps\"),\"scaled_envelope\"))}processTempoEvent(e,t){this.updateTime(e),this.p_08.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_08.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_08.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_08.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_08.getNumParameters()&&this.p_08.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_08.getNumParameters()?this.p_08.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_08.getNumParameters()}getParameterName(e){return(e-=0)<this.p_08.getNumParameters()?this.p_08.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_08.getNumParameters()?this.p_08.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_08.getNumParameters()&&this.p_08.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return this.p_08,0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_08.getNumParameters()?this.p_08.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_08.getNumParameters()?this.p_08.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_08.getNumParameters()?this.p_08.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s),this.p_08.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s),this.p_08.processListMessage(e,t,s,a)}processBangMessage(e,t,s){this.updateTime(s),this.p_08.processBangMessage(e,t,s)}resolveTag(e){var t=this.p_08.resolveTag(e);return t||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_08.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_415{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_19_nz_last=0,this.random_20_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_66_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_66_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_66_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_67_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_67_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_67_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_19_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_19_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_68_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_68_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_68_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_20_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_20_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_10_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_10_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s08_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s08_audioProcessSampleCount),containsValue(e.p_s08_zeroBuffer)&&(this.zeroBuffer=e.p_s08_zeroBuffer),containsValue(e.p_s08_dummyBuffer)&&(this.dummyBuffer=e.p_s08_dummyBuffer),containsValue(e.p_s08_vs)&&(this.vs=e.p_s08_vs),containsValue(e.p_s08_maxvs)&&(this.maxvs=e.p_s08_maxvs),containsValue(e.p_s08_sr)&&(this.sr=e.p_s08_sr),containsValue(e.p_s08_invsr)&&(this.invsr=e.p_s08_invsr),containsValue(e.random_s02_nz_last)&&(this.random_19_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_19_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_20_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_20_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s08_noteNumber)&&(this.noteNumber=e.p_s08_noteNumber),containsValue(e.p_s08_isMuted)&&(this.isMuted=e.p_s08_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_416{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_21_nz_last=0,this.random_22_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_69_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_69_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_69_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_70_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_70_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_70_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_21_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_21_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_71_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_71_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_71_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_22_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_22_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_11_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_11_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s07_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s07_audioProcessSampleCount),containsValue(e.p_s07_zeroBuffer)&&(this.zeroBuffer=e.p_s07_zeroBuffer),containsValue(e.p_s07_dummyBuffer)&&(this.dummyBuffer=e.p_s07_dummyBuffer),containsValue(e.p_s07_vs)&&(this.vs=e.p_s07_vs),containsValue(e.p_s07_maxvs)&&(this.maxvs=e.p_s07_maxvs),containsValue(e.p_s07_sr)&&(this.sr=e.p_s07_sr),containsValue(e.p_s07_invsr)&&(this.invsr=e.p_s07_invsr),containsValue(e.random_s02_nz_last)&&(this.random_21_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_21_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_22_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_22_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s07_noteNumber)&&(this.noteNumber=e.p_s07_noteNumber),containsValue(e.p_s07_isMuted)&&(this.isMuted=e.p_s07_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_417{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_23_nz_last=0,this.random_24_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_72_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_72_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_72_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_73_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_73_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_73_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_23_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_23_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_74_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_74_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_74_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_24_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_24_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_12_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_12_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s06_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s06_audioProcessSampleCount),containsValue(e.p_s06_zeroBuffer)&&(this.zeroBuffer=e.p_s06_zeroBuffer),containsValue(e.p_s06_dummyBuffer)&&(this.dummyBuffer=e.p_s06_dummyBuffer),containsValue(e.p_s06_vs)&&(this.vs=e.p_s06_vs),containsValue(e.p_s06_maxvs)&&(this.maxvs=e.p_s06_maxvs),containsValue(e.p_s06_sr)&&(this.sr=e.p_s06_sr),containsValue(e.p_s06_invsr)&&(this.invsr=e.p_s06_invsr),containsValue(e.random_s02_nz_last)&&(this.random_23_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_23_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_24_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_24_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s06_noteNumber)&&(this.noteNumber=e.p_s06_noteNumber),containsValue(e.p_s06_isMuted)&&(this.isMuted=e.p_s06_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_418{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_25_nz_last=0,this.random_26_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_75_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_75_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_75_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_76_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_76_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_76_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_25_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_25_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_77_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_77_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_77_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_26_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_26_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_13_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_13_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s05_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s05_audioProcessSampleCount),containsValue(e.p_s05_zeroBuffer)&&(this.zeroBuffer=e.p_s05_zeroBuffer),containsValue(e.p_s05_dummyBuffer)&&(this.dummyBuffer=e.p_s05_dummyBuffer),containsValue(e.p_s05_vs)&&(this.vs=e.p_s05_vs),containsValue(e.p_s05_maxvs)&&(this.maxvs=e.p_s05_maxvs),containsValue(e.p_s05_sr)&&(this.sr=e.p_s05_sr),containsValue(e.p_s05_invsr)&&(this.invsr=e.p_s05_invsr),containsValue(e.random_s02_nz_last)&&(this.random_25_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_25_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_26_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_26_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s05_noteNumber)&&(this.noteNumber=e.p_s05_noteNumber),containsValue(e.p_s05_isMuted)&&(this.isMuted=e.p_s05_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_419{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_27_nz_last=0,this.random_28_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_78_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_78_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_78_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_79_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_79_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_79_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_27_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_27_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_80_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_80_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_80_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_28_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_28_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_14_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_14_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s04_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s04_audioProcessSampleCount),containsValue(e.p_s04_zeroBuffer)&&(this.zeroBuffer=e.p_s04_zeroBuffer),containsValue(e.p_s04_dummyBuffer)&&(this.dummyBuffer=e.p_s04_dummyBuffer),containsValue(e.p_s04_vs)&&(this.vs=e.p_s04_vs),containsValue(e.p_s04_maxvs)&&(this.maxvs=e.p_s04_maxvs),containsValue(e.p_s04_sr)&&(this.sr=e.p_s04_sr),containsValue(e.p_s04_invsr)&&(this.invsr=e.p_s04_invsr),containsValue(e.random_s02_nz_last)&&(this.random_27_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_27_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_28_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_28_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s04_noteNumber)&&(this.noteNumber=e.p_s04_noteNumber),containsValue(e.p_s04_isMuted)&&(this.isMuted=e.p_s04_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_480{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.mtof_01_innerMtoF_buffer=0,this.mtof_01_innerScala_internal=!0,this.mtof_01_innerScala_KBM_MAP_OFFSET=7,this.mtof_01_innerScala_lastValid=!1,this.mtof_02_innerMtoF_buffer=0,this.mtof_02_innerScala_internal=!0,this.mtof_02_innerScala_KBM_MAP_OFFSET=7,this.mtof_02_innerScala_lastValid=!1,this.mtof_03_innerMtoF_buffer=0,this.mtof_03_innerScala_internal=!0,this.mtof_03_innerScala_KBM_MAP_OFFSET=7,this.mtof_03_innerScala_lastValid=!1,this.mtof_04_innerMtoF_buffer=0,this.mtof_04_innerScala_internal=!0,this.mtof_04_innerScala_KBM_MAP_OFFSET=7,this.mtof_04_innerScala_lastValid=!1,this.voiceIndex=0,this.parameterOffset=0,this.p_09=new Array,this.p_10=new Array,this.p_11=new Array,this.p_12=new Array,this.p_13=new Array,this.p_14=new Array,this.p_15=new Array,this.p_16=new Array,this.p_17=new Array,this.p_18=new Array,this.p_19=new Array,this.p_20=new Array,this.p_21=new Array,this.p_22=new Array,this.p_23=new Array,this.p_24=new Array,this.p_25=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s04_in1)&&(this.expr_81_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_81_in2=e.expr_s04_in2),containsValue(e.expr_s04_in3)&&(this.expr_81_in3=e.expr_s04_in3),containsValue(e.expr_s04_out1)&&(this.expr_81_out1=e.expr_s04_out1),containsValue(e.p_s17_target)&&(this.p_09_target=e.p_s17_target),containsValue(e.mtof_s01_midivalue)&&(this.mtof_01_midivalue=e.mtof_s01_midivalue),containsValue(e.mtof_s01_scale)&&(this.mtof_01_scale=e.mtof_s01_scale),containsValue(e.mtof_s01_map)&&(this.mtof_01_map=e.mtof_s01_map),containsValue(e.mtof_s01_base)&&(this.mtof_01_base=e.mtof_s01_base),containsValue(e.join_s01_in0)&&(this.join_01_in0=e.join_s01_in0),containsValue(e.join_s01_in1)&&(this.join_01_in1=e.join_s01_in1),containsValue(e.join_s01_in2)&&(this.join_01_in2=e.join_s01_in2),containsValue(e.join_s01_in3)&&(this.join_01_in3=e.join_s01_in3),containsValue(e.join_s01_in4)&&(this.join_01_in4=e.join_s01_in4),containsValue(e.join_s01_in5)&&(this.join_01_in5=e.join_s01_in5),containsValue(e.join_s01_in6)&&(this.join_01_in6=e.join_s01_in6),containsValue(e.join_s01_in7)&&(this.join_01_in7=e.join_s01_in7),containsValue(e.join_s01_in8)&&(this.join_01_in8=e.join_s01_in8),containsValue(e.join_s01_in9)&&(this.join_01_in9=e.join_s01_in9),containsValue(e.join_s01_in10)&&(this.join_01_in10=e.join_s01_in10),containsValue(e.join_s01_in11)&&(this.join_01_in11=e.join_s01_in11),containsValue(e.join_s01_in12)&&(this.join_01_in12=e.join_s01_in12),containsValue(e.join_s01_in13)&&(this.join_01_in13=e.join_s01_in13),containsValue(e.p_s16_target)&&(this.p_10_target=e.p_s16_target),containsValue(e.p_s15_target)&&(this.p_11_target=e.p_s15_target),containsValue(e.p_s14_target)&&(this.p_12_target=e.p_s14_target),containsValue(e.p_s13_target)&&(this.p_13_target=e.p_s13_target),containsValue(e.expr_s03_in1)&&(this.expr_82_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_82_in2=e.expr_s03_in2),containsValue(e.expr_s03_in3)&&(this.expr_82_in3=e.expr_s03_in3),containsValue(e.expr_s03_out1)&&(this.expr_82_out1=e.expr_s03_out1),containsValue(e.mtof_s04_midivalue)&&(this.mtof_02_midivalue=e.mtof_s04_midivalue),containsValue(e.mtof_s04_scale)&&(this.mtof_02_scale=e.mtof_s04_scale),containsValue(e.mtof_s04_map)&&(this.mtof_02_map=e.mtof_s04_map),containsValue(e.mtof_s04_base)&&(this.mtof_02_base=e.mtof_s04_base),containsValue(e.expr_s02_in1)&&(this.expr_83_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_83_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_83_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_83_out1=e.expr_s02_out1),containsValue(e.mtof_s03_midivalue)&&(this.mtof_03_midivalue=e.mtof_s03_midivalue),containsValue(e.mtof_s03_scale)&&(this.mtof_03_scale=e.mtof_s03_scale),containsValue(e.mtof_s03_map)&&(this.mtof_03_map=e.mtof_s03_map),containsValue(e.mtof_s03_base)&&(this.mtof_03_base=e.mtof_s03_base),containsValue(e.p_s12_target)&&(this.p_14_target=e.p_s12_target),containsValue(e.expr_s01_in1)&&(this.expr_84_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_84_in2=e.expr_s01_in2),containsValue(e.expr_s01_in3)&&(this.expr_84_in3=e.expr_s01_in3),containsValue(e.expr_s01_out1)&&(this.expr_84_out1=e.expr_s01_out1),containsValue(e.mtof_s02_midivalue)&&(this.mtof_04_midivalue=e.mtof_s02_midivalue),containsValue(e.mtof_s02_scale)&&(this.mtof_04_scale=e.mtof_s02_scale),containsValue(e.mtof_s02_map)&&(this.mtof_04_map=e.mtof_s02_map),containsValue(e.mtof_s02_base)&&(this.mtof_04_base=e.mtof_s02_base),containsValue(e.p_s11_target)&&(this.p_15_target=e.p_s11_target),containsValue(e.p_s03_target)&&(this.p_16_target=e.p_s03_target),containsValue(e.p_s10_target)&&(this.p_17_target=e.p_s10_target),containsValue(e.p_s02_target)&&(this.p_18_target=e.p_s02_target),containsValue(e.p_s09_target)&&(this.p_19_target=e.p_s09_target),containsValue(e.p_s01_target)&&(this.p_20_target=e.p_s01_target),containsValue(e.p_s08_target)&&(this.p_21_target=e.p_s08_target),containsValue(e.p_s07_target)&&(this.p_22_target=e.p_s07_target),containsValue(e.p_s06_target)&&(this.p_23_target=e.p_s06_target),containsValue(e.p_s05_target)&&(this.p_24_target=e.p_s05_target),containsValue(e.p_s04_target)&&(this.p_25_target=e.p_s04_target),containsValue(e.p_s10_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s10_audioProcessSampleCount),containsValue(e.p_s10_zeroBuffer)&&(this.zeroBuffer=e.p_s10_zeroBuffer),containsValue(e.p_s10_dummyBuffer)&&(this.dummyBuffer=e.p_s10_dummyBuffer),containsValue(e.p_s10_vs)&&(this.vs=e.p_s10_vs),containsValue(e.p_s10_maxvs)&&(this.maxvs=e.p_s10_maxvs),containsValue(e.p_s10_sr)&&(this.sr=e.p_s10_sr),containsValue(e.p_s10_invsr)&&(this.invsr=e.p_s10_invsr),containsValue(e.mtof_s01_innerMtoF_lastInValue)&&(this.mtof_01_innerMtoF_lastInValue=e.mtof_s01_innerMtoF_lastInValue),containsValue(e.mtof_s01_innerMtoF_lastOutValue)&&(this.mtof_01_innerMtoF_lastOutValue=e.mtof_s01_innerMtoF_lastOutValue),containsValue(e.mtof_s01_innerMtoF_lastTuning)&&(this.mtof_01_innerMtoF_lastTuning=e.mtof_s01_innerMtoF_lastTuning),containsValue(e.mtof_s01_innerScala_internal)&&(this.mtof_01_innerScala_internal=e.mtof_s01_innerScala_internal),containsValue(e.mtof_s01_innerScala_lastValid)&&(this.mtof_01_innerScala_lastValid=e.mtof_s01_innerScala_lastValid),containsValue(e.mtof_s01_innerScala_lastNote)&&(this.mtof_01_innerScala_lastNote=e.mtof_s01_innerScala_lastNote),containsValue(e.mtof_s01_innerScala_lastFreq)&&(this.mtof_01_innerScala_lastFreq=e.mtof_s01_innerScala_lastFreq),containsValue(e.mtof_s01_innerScala_sclEntryCount)&&(this.mtof_01_innerScala_sclEntryCount=e.mtof_s01_innerScala_sclEntryCount),containsValue(e.mtof_s01_innerScala_sclOctaveMul)&&(this.mtof_01_innerScala_sclOctaveMul=e.mtof_s01_innerScala_sclOctaveMul),containsValue(e.mtof_s01_innerScala_sclExpMul)&&(this.mtof_01_innerScala_sclExpMul=e.mtof_s01_innerScala_sclExpMul),containsValue(e.mtof_s01_innerScala_kbmValid)&&(this.mtof_01_innerScala_kbmValid=e.mtof_s01_innerScala_kbmValid),containsValue(e.mtof_s01_innerScala_kbmMid)&&(this.mtof_01_innerScala_kbmMid=e.mtof_s01_innerScala_kbmMid),containsValue(e.mtof_s01_innerScala_kbmRefNum)&&(this.mtof_01_innerScala_kbmRefNum=e.mtof_s01_innerScala_kbmRefNum),containsValue(e.mtof_s01_innerScala_kbmRefFreq)&&(this.mtof_01_innerScala_kbmRefFreq=e.mtof_s01_innerScala_kbmRefFreq),containsValue(e.mtof_s01_innerScala_kbmSize)&&(this.mtof_01_innerScala_kbmSize=e.mtof_s01_innerScala_kbmSize),containsValue(e.mtof_s01_innerScala_kbmMin)&&(this.mtof_01_innerScala_kbmMin=e.mtof_s01_innerScala_kbmMin),containsValue(e.mtof_s01_innerScala_kbmMax)&&(this.mtof_01_innerScala_kbmMax=e.mtof_s01_innerScala_kbmMax),containsValue(e.mtof_s01_innerScala_kbmOctaveDegree)&&(this.mtof_01_innerScala_kbmOctaveDegree=e.mtof_s01_innerScala_kbmOctaveDegree),containsValue(e.mtof_s01_innerScala_kbmMapSize)&&(this.mtof_01_innerScala_kbmMapSize=e.mtof_s01_innerScala_kbmMapSize),containsValue(e.mtof_s01_innerScala_refFreq)&&(this.mtof_01_innerScala_refFreq=e.mtof_s01_innerScala_refFreq),containsValue(e.mtof_s04_innerMtoF_lastInValue)&&(this.mtof_02_innerMtoF_lastInValue=e.mtof_s04_innerMtoF_lastInValue),containsValue(e.mtof_s04_innerMtoF_lastOutValue)&&(this.mtof_02_innerMtoF_lastOutValue=e.mtof_s04_innerMtoF_lastOutValue),containsValue(e.mtof_s04_innerMtoF_lastTuning)&&(this.mtof_02_innerMtoF_lastTuning=e.mtof_s04_innerMtoF_lastTuning),containsValue(e.mtof_s04_innerScala_internal)&&(this.mtof_02_innerScala_internal=e.mtof_s04_innerScala_internal),containsValue(e.mtof_s04_innerScala_lastValid)&&(this.mtof_02_innerScala_lastValid=e.mtof_s04_innerScala_lastValid),containsValue(e.mtof_s04_innerScala_lastNote)&&(this.mtof_02_innerScala_lastNote=e.mtof_s04_innerScala_lastNote),containsValue(e.mtof_s04_innerScala_lastFreq)&&(this.mtof_02_innerScala_lastFreq=e.mtof_s04_innerScala_lastFreq),containsValue(e.mtof_s04_innerScala_sclEntryCount)&&(this.mtof_02_innerScala_sclEntryCount=e.mtof_s04_innerScala_sclEntryCount),containsValue(e.mtof_s04_innerScala_sclOctaveMul)&&(this.mtof_02_innerScala_sclOctaveMul=e.mtof_s04_innerScala_sclOctaveMul),containsValue(e.mtof_s04_innerScala_sclExpMul)&&(this.mtof_02_innerScala_sclExpMul=e.mtof_s04_innerScala_sclExpMul),containsValue(e.mtof_s04_innerScala_kbmValid)&&(this.mtof_02_innerScala_kbmValid=e.mtof_s04_innerScala_kbmValid),containsValue(e.mtof_s04_innerScala_kbmMid)&&(this.mtof_02_innerScala_kbmMid=e.mtof_s04_innerScala_kbmMid),containsValue(e.mtof_s04_innerScala_kbmRefNum)&&(this.mtof_02_innerScala_kbmRefNum=e.mtof_s04_innerScala_kbmRefNum),containsValue(e.mtof_s04_innerScala_kbmRefFreq)&&(this.mtof_02_innerScala_kbmRefFreq=e.mtof_s04_innerScala_kbmRefFreq),containsValue(e.mtof_s04_innerScala_kbmSize)&&(this.mtof_02_innerScala_kbmSize=e.mtof_s04_innerScala_kbmSize),containsValue(e.mtof_s04_innerScala_kbmMin)&&(this.mtof_02_innerScala_kbmMin=e.mtof_s04_innerScala_kbmMin),containsValue(e.mtof_s04_innerScala_kbmMax)&&(this.mtof_02_innerScala_kbmMax=e.mtof_s04_innerScala_kbmMax),containsValue(e.mtof_s04_innerScala_kbmOctaveDegree)&&(this.mtof_02_innerScala_kbmOctaveDegree=e.mtof_s04_innerScala_kbmOctaveDegree),containsValue(e.mtof_s04_innerScala_kbmMapSize)&&(this.mtof_02_innerScala_kbmMapSize=e.mtof_s04_innerScala_kbmMapSize),containsValue(e.mtof_s04_innerScala_refFreq)&&(this.mtof_02_innerScala_refFreq=e.mtof_s04_innerScala_refFreq),containsValue(e.mtof_s03_innerMtoF_lastInValue)&&(this.mtof_03_innerMtoF_lastInValue=e.mtof_s03_innerMtoF_lastInValue),containsValue(e.mtof_s03_innerMtoF_lastOutValue)&&(this.mtof_03_innerMtoF_lastOutValue=e.mtof_s03_innerMtoF_lastOutValue),containsValue(e.mtof_s03_innerMtoF_lastTuning)&&(this.mtof_03_innerMtoF_lastTuning=e.mtof_s03_innerMtoF_lastTuning),containsValue(e.mtof_s03_innerScala_internal)&&(this.mtof_03_innerScala_internal=e.mtof_s03_innerScala_internal),containsValue(e.mtof_s03_innerScala_lastValid)&&(this.mtof_03_innerScala_lastValid=e.mtof_s03_innerScala_lastValid),containsValue(e.mtof_s03_innerScala_lastNote)&&(this.mtof_03_innerScala_lastNote=e.mtof_s03_innerScala_lastNote),containsValue(e.mtof_s03_innerScala_lastFreq)&&(this.mtof_03_innerScala_lastFreq=e.mtof_s03_innerScala_lastFreq),containsValue(e.mtof_s03_innerScala_sclEntryCount)&&(this.mtof_03_innerScala_sclEntryCount=e.mtof_s03_innerScala_sclEntryCount),containsValue(e.mtof_s03_innerScala_sclOctaveMul)&&(this.mtof_03_innerScala_sclOctaveMul=e.mtof_s03_innerScala_sclOctaveMul),containsValue(e.mtof_s03_innerScala_sclExpMul)&&(this.mtof_03_innerScala_sclExpMul=e.mtof_s03_innerScala_sclExpMul),containsValue(e.mtof_s03_innerScala_kbmValid)&&(this.mtof_03_innerScala_kbmValid=e.mtof_s03_innerScala_kbmValid),containsValue(e.mtof_s03_innerScala_kbmMid)&&(this.mtof_03_innerScala_kbmMid=e.mtof_s03_innerScala_kbmMid),containsValue(e.mtof_s03_innerScala_kbmRefNum)&&(this.mtof_03_innerScala_kbmRefNum=e.mtof_s03_innerScala_kbmRefNum),containsValue(e.mtof_s03_innerScala_kbmRefFreq)&&(this.mtof_03_innerScala_kbmRefFreq=e.mtof_s03_innerScala_kbmRefFreq),containsValue(e.mtof_s03_innerScala_kbmSize)&&(this.mtof_03_innerScala_kbmSize=e.mtof_s03_innerScala_kbmSize),containsValue(e.mtof_s03_innerScala_kbmMin)&&(this.mtof_03_innerScala_kbmMin=e.mtof_s03_innerScala_kbmMin),containsValue(e.mtof_s03_innerScala_kbmMax)&&(this.mtof_03_innerScala_kbmMax=e.mtof_s03_innerScala_kbmMax),containsValue(e.mtof_s03_innerScala_kbmOctaveDegree)&&(this.mtof_03_innerScala_kbmOctaveDegree=e.mtof_s03_innerScala_kbmOctaveDegree),containsValue(e.mtof_s03_innerScala_kbmMapSize)&&(this.mtof_03_innerScala_kbmMapSize=e.mtof_s03_innerScala_kbmMapSize),containsValue(e.mtof_s03_innerScala_refFreq)&&(this.mtof_03_innerScala_refFreq=e.mtof_s03_innerScala_refFreq),containsValue(e.mtof_s02_innerMtoF_lastInValue)&&(this.mtof_04_innerMtoF_lastInValue=e.mtof_s02_innerMtoF_lastInValue),containsValue(e.mtof_s02_innerMtoF_lastOutValue)&&(this.mtof_04_innerMtoF_lastOutValue=e.mtof_s02_innerMtoF_lastOutValue),containsValue(e.mtof_s02_innerMtoF_lastTuning)&&(this.mtof_04_innerMtoF_lastTuning=e.mtof_s02_innerMtoF_lastTuning),containsValue(e.mtof_s02_innerScala_internal)&&(this.mtof_04_innerScala_internal=e.mtof_s02_innerScala_internal),containsValue(e.mtof_s02_innerScala_lastValid)&&(this.mtof_04_innerScala_lastValid=e.mtof_s02_innerScala_lastValid),containsValue(e.mtof_s02_innerScala_lastNote)&&(this.mtof_04_innerScala_lastNote=e.mtof_s02_innerScala_lastNote),containsValue(e.mtof_s02_innerScala_lastFreq)&&(this.mtof_04_innerScala_lastFreq=e.mtof_s02_innerScala_lastFreq),containsValue(e.mtof_s02_innerScala_sclEntryCount)&&(this.mtof_04_innerScala_sclEntryCount=e.mtof_s02_innerScala_sclEntryCount),containsValue(e.mtof_s02_innerScala_sclOctaveMul)&&(this.mtof_04_innerScala_sclOctaveMul=e.mtof_s02_innerScala_sclOctaveMul),containsValue(e.mtof_s02_innerScala_sclExpMul)&&(this.mtof_04_innerScala_sclExpMul=e.mtof_s02_innerScala_sclExpMul),containsValue(e.mtof_s02_innerScala_kbmValid)&&(this.mtof_04_innerScala_kbmValid=e.mtof_s02_innerScala_kbmValid),containsValue(e.mtof_s02_innerScala_kbmMid)&&(this.mtof_04_innerScala_kbmMid=e.mtof_s02_innerScala_kbmMid),containsValue(e.mtof_s02_innerScala_kbmRefNum)&&(this.mtof_04_innerScala_kbmRefNum=e.mtof_s02_innerScala_kbmRefNum),containsValue(e.mtof_s02_innerScala_kbmRefFreq)&&(this.mtof_04_innerScala_kbmRefFreq=e.mtof_s02_innerScala_kbmRefFreq),containsValue(e.mtof_s02_innerScala_kbmSize)&&(this.mtof_04_innerScala_kbmSize=e.mtof_s02_innerScala_kbmSize),containsValue(e.mtof_s02_innerScala_kbmMin)&&(this.mtof_04_innerScala_kbmMin=e.mtof_s02_innerScala_kbmMin),containsValue(e.mtof_s02_innerScala_kbmMax)&&(this.mtof_04_innerScala_kbmMax=e.mtof_s02_innerScala_kbmMax),containsValue(e.mtof_s02_innerScala_kbmOctaveDegree)&&(this.mtof_04_innerScala_kbmOctaveDegree=e.mtof_s02_innerScala_kbmOctaveDegree),containsValue(e.mtof_s02_innerScala_kbmMapSize)&&(this.mtof_04_innerScala_kbmMapSize=e.mtof_s02_innerScala_kbmMapSize),containsValue(e.mtof_s02_innerScala_refFreq)&&(this.mtof_04_innerScala_refFreq=e.mtof_s02_innerScala_refFreq),containsValue(e.p_s10_noteNumber)&&(this.noteNumber=e.p_s10_noteNumber),containsValue(e.p_s10_isMuted)&&(this.isMuted=e.p_s10_isMuted)),this.p_09=new RNBOSubpatcher_403,this.p_09.setEngineAndPatcher(this.getEngine(),this),this.p_09.initialize(getSubState(e,\"p_s17\")),this.p_09.setParameterOffset(this.getParameterOffset(this.p_09)),this.p_10=new RNBOSubpatcher_404,this.p_10.setEngineAndPatcher(this.getEngine(),this),this.p_10.initialize(getSubState(e,\"p_s16\")),this.p_10.setParameterOffset(this.getParameterOffset(this.p_10)),this.p_11=new RNBOSubpatcher_405,this.p_11.setEngineAndPatcher(this.getEngine(),this),this.p_11.initialize(getSubState(e,\"p_s15\")),this.p_11.setParameterOffset(this.getParameterOffset(this.p_11)),this.p_12=new RNBOSubpatcher_406,this.p_12.setEngineAndPatcher(this.getEngine(),this),this.p_12.initialize(getSubState(e,\"p_s14\")),this.p_12.setParameterOffset(this.getParameterOffset(this.p_12)),this.p_13=new RNBOSubpatcher_407,this.p_13.setEngineAndPatcher(this.getEngine(),this),this.p_13.initialize(getSubState(e,\"p_s13\")),this.p_13.setParameterOffset(this.getParameterOffset(this.p_13)),this.p_14=new RNBOSubpatcher_408,this.p_14.setEngineAndPatcher(this.getEngine(),this),this.p_14.initialize(getSubState(e,\"p_s12\")),this.p_14.setParameterOffset(this.getParameterOffset(this.p_14)),this.p_15=new RNBOSubpatcher_409,this.p_15.setEngineAndPatcher(this.getEngine(),this),this.p_15.initialize(getSubState(e,\"p_s11\")),this.p_15.setParameterOffset(this.getParameterOffset(this.p_15)),this.p_16=new RNBOSubpatcher_410,this.p_16.setEngineAndPatcher(this.getEngine(),this),this.p_16.initialize(getSubState(e,\"p_s03\")),this.p_16.setParameterOffset(this.getParameterOffset(this.p_16)),this.p_17=new RNBOSubpatcher_411,this.p_17.setEngineAndPatcher(this.getEngine(),this),this.p_17.initialize(getSubState(e,\"p_s10\")),this.p_17.setParameterOffset(this.getParameterOffset(this.p_17)),this.p_18=new RNBOSubpatcher_412,this.p_18.setEngineAndPatcher(this.getEngine(),this),this.p_18.initialize(getSubState(e,\"p_s02\")),this.p_18.setParameterOffset(this.getParameterOffset(this.p_18)),this.p_19=new RNBOSubpatcher_413,this.p_19.setEngineAndPatcher(this.getEngine(),this),this.p_19.initialize(getSubState(e,\"p_s09\")),this.p_19.setParameterOffset(this.getParameterOffset(this.p_19)),this.p_20=new RNBOSubpatcher_414,this.p_20.setEngineAndPatcher(this.getEngine(),this),this.p_20.initialize(getSubState(e,\"p_s01\")),this.p_20.setParameterOffset(this.getParameterOffset(this.p_20)),this.p_21=new RNBOSubpatcher_415,this.p_21.setEngineAndPatcher(this.getEngine(),this),this.p_21.initialize(getSubState(e,\"p_s08\")),this.p_21.setParameterOffset(this.getParameterOffset(this.p_21)),this.p_22=new RNBOSubpatcher_416,this.p_22.setEngineAndPatcher(this.getEngine(),this),this.p_22.initialize(getSubState(e,\"p_s07\")),this.p_22.setParameterOffset(this.getParameterOffset(this.p_22)),this.p_23=new RNBOSubpatcher_417,this.p_23.setEngineAndPatcher(this.getEngine(),this),this.p_23.initialize(getSubState(e,\"p_s06\")),this.p_23.setParameterOffset(this.getParameterOffset(this.p_23)),this.p_24=new RNBOSubpatcher_418,this.p_24.setEngineAndPatcher(this.getEngine(),this),this.p_24.initialize(getSubState(e,\"p_s05\")),this.p_24.setParameterOffset(this.getParameterOffset(this.p_24)),this.p_25=new RNBOSubpatcher_419,this.p_25.setEngineAndPatcher(this.getEngine(),this),this.p_25.initialize(getSubState(e,\"p_s04\")),this.p_25.setParameterOffset(this.getParameterOffset(this.p_25))}getPreset(e){this.p_09.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-5\")),this.p_10.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-9\")),this.p_11.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-11\")),this.p_12.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-15\")),this.p_13.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-21\")),this.p_14.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-19\")),this.p_15.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-17\")),this.p_16.getPreset(getSubState(getSubState(e,\"__sps\"),\"cap speed[2]\")),this.p_17.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-27\")),this.p_18.getPreset(getSubState(getSubState(e,\"__sps\"),\"cap speed[1]\")),this.p_19.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-25\")),this.p_20.getPreset(getSubState(getSubState(e,\"__sps\"),\"cap speed\")),this.p_21.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-23\")),this.p_22.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-34\")),this.p_23.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-32\")),this.p_24.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-29\")),this.p_25.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-36\"))}processTempoEvent(e,t){this.updateTime(e),this.p_09.processTempoEvent(e,t),this.p_10.processTempoEvent(e,t),this.p_11.processTempoEvent(e,t),this.p_12.processTempoEvent(e,t),this.p_13.processTempoEvent(e,t),this.p_14.processTempoEvent(e,t),this.p_15.processTempoEvent(e,t),this.p_16.processTempoEvent(e,t),this.p_17.processTempoEvent(e,t),this.p_18.processTempoEvent(e,t),this.p_19.processTempoEvent(e,t),this.p_20.processTempoEvent(e,t),this.p_21.processTempoEvent(e,t),this.p_22.processTempoEvent(e,t),this.p_23.processTempoEvent(e,t),this.p_24.processTempoEvent(e,t),this.p_25.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_09.processTransportEvent(e,t),this.p_10.processTransportEvent(e,t),this.p_11.processTransportEvent(e,t),this.p_12.processTransportEvent(e,t),this.p_13.processTransportEvent(e,t),this.p_14.processTransportEvent(e,t),this.p_15.processTransportEvent(e,t),this.p_16.processTransportEvent(e,t),this.p_17.processTransportEvent(e,t),this.p_18.processTransportEvent(e,t),this.p_19.processTransportEvent(e,t),this.p_20.processTransportEvent(e,t),this.p_21.processTransportEvent(e,t),this.p_22.processTransportEvent(e,t),this.p_23.processTransportEvent(e,t),this.p_24.processTransportEvent(e,t),this.p_25.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_09.processBeatTimeEvent(e,t),this.p_10.processBeatTimeEvent(e,t),this.p_11.processBeatTimeEvent(e,t),this.p_12.processBeatTimeEvent(e,t),this.p_13.processBeatTimeEvent(e,t),this.p_14.processBeatTimeEvent(e,t),this.p_15.processBeatTimeEvent(e,t),this.p_16.processBeatTimeEvent(e,t),this.p_17.processBeatTimeEvent(e,t),this.p_18.processBeatTimeEvent(e,t),this.p_19.processBeatTimeEvent(e,t),this.p_20.processBeatTimeEvent(e,t),this.p_21.processBeatTimeEvent(e,t),this.p_22.processBeatTimeEvent(e,t),this.p_23.processBeatTimeEvent(e,t),this.p_24.processBeatTimeEvent(e,t),this.p_25.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_09.processTimeSignatureEvent(e,t,s),this.p_10.processTimeSignatureEvent(e,t,s),this.p_11.processTimeSignatureEvent(e,t,s),this.p_12.processTimeSignatureEvent(e,t,s),this.p_13.processTimeSignatureEvent(e,t,s),this.p_14.processTimeSignatureEvent(e,t,s),this.p_15.processTimeSignatureEvent(e,t,s),this.p_16.processTimeSignatureEvent(e,t,s),this.p_17.processTimeSignatureEvent(e,t,s),this.p_18.processTimeSignatureEvent(e,t,s),this.p_19.processTimeSignatureEvent(e,t,s),this.p_20.processTimeSignatureEvent(e,t,s),this.p_21.processTimeSignatureEvent(e,t,s),this.p_22.processTimeSignatureEvent(e,t,s),this.p_23.processTimeSignatureEvent(e,t,s),this.p_24.processTimeSignatureEvent(e,t,s),this.p_25.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_09.getNumParameters()&&this.p_09.setParameterValue(e,t,s),(e-=this.p_09.getNumParameters())<this.p_10.getNumParameters()&&this.p_10.setParameterValue(e,t,s),(e-=this.p_10.getNumParameters())<this.p_11.getNumParameters()&&this.p_11.setParameterValue(e,t,s),(e-=this.p_11.getNumParameters())<this.p_12.getNumParameters()&&this.p_12.setParameterValue(e,t,s),(e-=this.p_12.getNumParameters())<this.p_13.getNumParameters()&&this.p_13.setParameterValue(e,t,s),(e-=this.p_13.getNumParameters())<this.p_14.getNumParameters()&&this.p_14.setParameterValue(e,t,s),(e-=this.p_14.getNumParameters())<this.p_15.getNumParameters()&&this.p_15.setParameterValue(e,t,s),(e-=this.p_15.getNumParameters())<this.p_16.getNumParameters()&&this.p_16.setParameterValue(e,t,s),(e-=this.p_16.getNumParameters())<this.p_17.getNumParameters()&&this.p_17.setParameterValue(e,t,s),(e-=this.p_17.getNumParameters())<this.p_18.getNumParameters()&&this.p_18.setParameterValue(e,t,s),(e-=this.p_18.getNumParameters())<this.p_19.getNumParameters()&&this.p_19.setParameterValue(e,t,s),(e-=this.p_19.getNumParameters())<this.p_20.getNumParameters()&&this.p_20.setParameterValue(e,t,s),(e-=this.p_20.getNumParameters())<this.p_21.getNumParameters()&&this.p_21.setParameterValue(e,t,s),(e-=this.p_21.getNumParameters())<this.p_22.getNumParameters()&&this.p_22.setParameterValue(e,t,s),(e-=this.p_22.getNumParameters())<this.p_23.getNumParameters()&&this.p_23.setParameterValue(e,t,s),(e-=this.p_23.getNumParameters())<this.p_24.getNumParameters()&&this.p_24.setParameterValue(e,t,s),(e-=this.p_24.getNumParameters())<this.p_25.getNumParameters()&&this.p_25.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_09.getNumParameters()?this.p_09.getParameterValue(e):(e-=this.p_09.getNumParameters())<this.p_10.getNumParameters()?this.p_10.getParameterValue(e):(e-=this.p_10.getNumParameters())<this.p_11.getNumParameters()?this.p_11.getParameterValue(e):(e-=this.p_11.getNumParameters())<this.p_12.getNumParameters()?this.p_12.getParameterValue(e):(e-=this.p_12.getNumParameters())<this.p_13.getNumParameters()?this.p_13.getParameterValue(e):(e-=this.p_13.getNumParameters())<this.p_14.getNumParameters()?this.p_14.getParameterValue(e):(e-=this.p_14.getNumParameters())<this.p_15.getNumParameters()?this.p_15.getParameterValue(e):(e-=this.p_15.getNumParameters())<this.p_16.getNumParameters()?this.p_16.getParameterValue(e):(e-=this.p_16.getNumParameters())<this.p_17.getNumParameters()?this.p_17.getParameterValue(e):(e-=this.p_17.getNumParameters())<this.p_18.getNumParameters()?this.p_18.getParameterValue(e):(e-=this.p_18.getNumParameters())<this.p_19.getNumParameters()?this.p_19.getParameterValue(e):(e-=this.p_19.getNumParameters())<this.p_20.getNumParameters()?this.p_20.getParameterValue(e):(e-=this.p_20.getNumParameters())<this.p_21.getNumParameters()?this.p_21.getParameterValue(e):(e-=this.p_21.getNumParameters())<this.p_22.getNumParameters()?this.p_22.getParameterValue(e):(e-=this.p_22.getNumParameters())<this.p_23.getNumParameters()?this.p_23.getParameterValue(e):(e-=this.p_23.getNumParameters())<this.p_24.getNumParameters()?this.p_24.getParameterValue(e):(e-=this.p_24.getNumParameters())<this.p_25.getNumParameters()?this.p_25.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters()+this.p_16.getNumParameters()+this.p_17.getNumParameters()+this.p_18.getNumParameters()+this.p_19.getNumParameters()+this.p_20.getNumParameters()+this.p_21.getNumParameters()+this.p_22.getNumParameters()+this.p_23.getNumParameters()+this.p_24.getNumParameters()+this.p_25.getNumParameters()}getParameterName(e){return(e-=0)<this.p_09.getNumParameters()?this.p_09.getParameterName(e):(e-=this.p_09.getNumParameters())<this.p_10.getNumParameters()?this.p_10.getParameterName(e):(e-=this.p_10.getNumParameters())<this.p_11.getNumParameters()?this.p_11.getParameterName(e):(e-=this.p_11.getNumParameters())<this.p_12.getNumParameters()?this.p_12.getParameterName(e):(e-=this.p_12.getNumParameters())<this.p_13.getNumParameters()?this.p_13.getParameterName(e):(e-=this.p_13.getNumParameters())<this.p_14.getNumParameters()?this.p_14.getParameterName(e):(e-=this.p_14.getNumParameters())<this.p_15.getNumParameters()?this.p_15.getParameterName(e):(e-=this.p_15.getNumParameters())<this.p_16.getNumParameters()?this.p_16.getParameterName(e):(e-=this.p_16.getNumParameters())<this.p_17.getNumParameters()?this.p_17.getParameterName(e):(e-=this.p_17.getNumParameters())<this.p_18.getNumParameters()?this.p_18.getParameterName(e):(e-=this.p_18.getNumParameters())<this.p_19.getNumParameters()?this.p_19.getParameterName(e):(e-=this.p_19.getNumParameters())<this.p_20.getNumParameters()?this.p_20.getParameterName(e):(e-=this.p_20.getNumParameters())<this.p_21.getNumParameters()?this.p_21.getParameterName(e):(e-=this.p_21.getNumParameters())<this.p_22.getNumParameters()?this.p_22.getParameterName(e):(e-=this.p_22.getNumParameters())<this.p_23.getNumParameters()?this.p_23.getParameterName(e):(e-=this.p_23.getNumParameters())<this.p_24.getNumParameters()?this.p_24.getParameterName(e):(e-=this.p_24.getNumParameters())<this.p_25.getNumParameters()?this.p_25.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_09.getNumParameters()?this.p_09.getParameterId(e):(e-=this.p_09.getNumParameters())<this.p_10.getNumParameters()?this.p_10.getParameterId(e):(e-=this.p_10.getNumParameters())<this.p_11.getNumParameters()?this.p_11.getParameterId(e):(e-=this.p_11.getNumParameters())<this.p_12.getNumParameters()?this.p_12.getParameterId(e):(e-=this.p_12.getNumParameters())<this.p_13.getNumParameters()?this.p_13.getParameterId(e):(e-=this.p_13.getNumParameters())<this.p_14.getNumParameters()?this.p_14.getParameterId(e):(e-=this.p_14.getNumParameters())<this.p_15.getNumParameters()?this.p_15.getParameterId(e):(e-=this.p_15.getNumParameters())<this.p_16.getNumParameters()?this.p_16.getParameterId(e):(e-=this.p_16.getNumParameters())<this.p_17.getNumParameters()?this.p_17.getParameterId(e):(e-=this.p_17.getNumParameters())<this.p_18.getNumParameters()?this.p_18.getParameterId(e):(e-=this.p_18.getNumParameters())<this.p_19.getNumParameters()?this.p_19.getParameterId(e):(e-=this.p_19.getNumParameters())<this.p_20.getNumParameters()?this.p_20.getParameterId(e):(e-=this.p_20.getNumParameters())<this.p_21.getNumParameters()?this.p_21.getParameterId(e):(e-=this.p_21.getNumParameters())<this.p_22.getNumParameters()?this.p_22.getParameterId(e):(e-=this.p_22.getNumParameters())<this.p_23.getNumParameters()?this.p_23.getParameterId(e):(e-=this.p_23.getNumParameters())<this.p_24.getNumParameters()?this.p_24.getParameterId(e):(e-=this.p_24.getNumParameters())<this.p_25.getNumParameters()?this.p_25.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_09.getNumParameters()&&this.p_09.getParameterInfo(e,t),(e-=this.p_09.getNumParameters())<this.p_10.getNumParameters()&&this.p_10.getParameterInfo(e,t),(e-=this.p_10.getNumParameters())<this.p_11.getNumParameters()&&this.p_11.getParameterInfo(e,t),(e-=this.p_11.getNumParameters())<this.p_12.getNumParameters()&&this.p_12.getParameterInfo(e,t),(e-=this.p_12.getNumParameters())<this.p_13.getNumParameters()&&this.p_13.getParameterInfo(e,t),(e-=this.p_13.getNumParameters())<this.p_14.getNumParameters()&&this.p_14.getParameterInfo(e,t),(e-=this.p_14.getNumParameters())<this.p_15.getNumParameters()&&this.p_15.getParameterInfo(e,t),(e-=this.p_15.getNumParameters())<this.p_16.getNumParameters()&&this.p_16.getParameterInfo(e,t),(e-=this.p_16.getNumParameters())<this.p_17.getNumParameters()&&this.p_17.getParameterInfo(e,t),(e-=this.p_17.getNumParameters())<this.p_18.getNumParameters()&&this.p_18.getParameterInfo(e,t),(e-=this.p_18.getNumParameters())<this.p_19.getNumParameters()&&this.p_19.getParameterInfo(e,t),(e-=this.p_19.getNumParameters())<this.p_20.getNumParameters()&&this.p_20.getParameterInfo(e,t),(e-=this.p_20.getNumParameters())<this.p_21.getNumParameters()&&this.p_21.getParameterInfo(e,t),(e-=this.p_21.getNumParameters())<this.p_22.getNumParameters()&&this.p_22.getParameterInfo(e,t),(e-=this.p_22.getNumParameters())<this.p_23.getNumParameters()&&this.p_23.getParameterInfo(e,t),(e-=this.p_23.getNumParameters())<this.p_24.getNumParameters()&&this.p_24.getParameterInfo(e,t),(e-=this.p_24.getNumParameters())<this.p_25.getNumParameters()&&this.p_25.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return e==this.p_09?0:e==this.p_10?0+this.p_09.getNumParameters():e==this.p_11?0+this.p_09.getNumParameters()+this.p_10.getNumParameters():e==this.p_12?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters():e==this.p_13?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters():e==this.p_14?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters():e==this.p_15?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters():e==this.p_16?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters():e==this.p_17?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters()+this.p_16.getNumParameters():e==this.p_18?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters()+this.p_16.getNumParameters()+this.p_17.getNumParameters():e==this.p_19?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters()+this.p_16.getNumParameters()+this.p_17.getNumParameters()+this.p_18.getNumParameters():e==this.p_20?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters()+this.p_16.getNumParameters()+this.p_17.getNumParameters()+this.p_18.getNumParameters()+this.p_19.getNumParameters():e==this.p_21?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters()+this.p_16.getNumParameters()+this.p_17.getNumParameters()+this.p_18.getNumParameters()+this.p_19.getNumParameters()+this.p_20.getNumParameters():e==this.p_22?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters()+this.p_16.getNumParameters()+this.p_17.getNumParameters()+this.p_18.getNumParameters()+this.p_19.getNumParameters()+this.p_20.getNumParameters()+this.p_21.getNumParameters():e==this.p_23?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters()+this.p_16.getNumParameters()+this.p_17.getNumParameters()+this.p_18.getNumParameters()+this.p_19.getNumParameters()+this.p_20.getNumParameters()+this.p_21.getNumParameters()+this.p_22.getNumParameters():e==this.p_24?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters()+this.p_16.getNumParameters()+this.p_17.getNumParameters()+this.p_18.getNumParameters()+this.p_19.getNumParameters()+this.p_20.getNumParameters()+this.p_21.getNumParameters()+this.p_22.getNumParameters()+this.p_23.getNumParameters():e==this.p_25?0+this.p_09.getNumParameters()+this.p_10.getNumParameters()+this.p_11.getNumParameters()+this.p_12.getNumParameters()+this.p_13.getNumParameters()+this.p_14.getNumParameters()+this.p_15.getNumParameters()+this.p_16.getNumParameters()+this.p_17.getNumParameters()+this.p_18.getNumParameters()+this.p_19.getNumParameters()+this.p_20.getNumParameters()+this.p_21.getNumParameters()+this.p_22.getNumParameters()+this.p_23.getNumParameters()+this.p_24.getNumParameters():0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_09.getNumParameters()?this.p_09.convertToNormalizedParameterValue(e,t):(e-=this.p_09.getNumParameters())<this.p_10.getNumParameters()?this.p_10.convertToNormalizedParameterValue(e,t):(e-=this.p_10.getNumParameters())<this.p_11.getNumParameters()?this.p_11.convertToNormalizedParameterValue(e,t):(e-=this.p_11.getNumParameters())<this.p_12.getNumParameters()?this.p_12.convertToNormalizedParameterValue(e,t):(e-=this.p_12.getNumParameters())<this.p_13.getNumParameters()?this.p_13.convertToNormalizedParameterValue(e,t):(e-=this.p_13.getNumParameters())<this.p_14.getNumParameters()?this.p_14.convertToNormalizedParameterValue(e,t):(e-=this.p_14.getNumParameters())<this.p_15.getNumParameters()?this.p_15.convertToNormalizedParameterValue(e,t):(e-=this.p_15.getNumParameters())<this.p_16.getNumParameters()?this.p_16.convertToNormalizedParameterValue(e,t):(e-=this.p_16.getNumParameters())<this.p_17.getNumParameters()?this.p_17.convertToNormalizedParameterValue(e,t):(e-=this.p_17.getNumParameters())<this.p_18.getNumParameters()?this.p_18.convertToNormalizedParameterValue(e,t):(e-=this.p_18.getNumParameters())<this.p_19.getNumParameters()?this.p_19.convertToNormalizedParameterValue(e,t):(e-=this.p_19.getNumParameters())<this.p_20.getNumParameters()?this.p_20.convertToNormalizedParameterValue(e,t):(e-=this.p_20.getNumParameters())<this.p_21.getNumParameters()?this.p_21.convertToNormalizedParameterValue(e,t):(e-=this.p_21.getNumParameters())<this.p_22.getNumParameters()?this.p_22.convertToNormalizedParameterValue(e,t):(e-=this.p_22.getNumParameters())<this.p_23.getNumParameters()?this.p_23.convertToNormalizedParameterValue(e,t):(e-=this.p_23.getNumParameters())<this.p_24.getNumParameters()?this.p_24.convertToNormalizedParameterValue(e,t):(e-=this.p_24.getNumParameters())<this.p_25.getNumParameters()?this.p_25.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_09.getNumParameters()?this.p_09.convertFromNormalizedParameterValue(e,t):(e-=this.p_09.getNumParameters())<this.p_10.getNumParameters()?this.p_10.convertFromNormalizedParameterValue(e,t):(e-=this.p_10.getNumParameters())<this.p_11.getNumParameters()?this.p_11.convertFromNormalizedParameterValue(e,t):(e-=this.p_11.getNumParameters())<this.p_12.getNumParameters()?this.p_12.convertFromNormalizedParameterValue(e,t):(e-=this.p_12.getNumParameters())<this.p_13.getNumParameters()?this.p_13.convertFromNormalizedParameterValue(e,t):(e-=this.p_13.getNumParameters())<this.p_14.getNumParameters()?this.p_14.convertFromNormalizedParameterValue(e,t):(e-=this.p_14.getNumParameters())<this.p_15.getNumParameters()?this.p_15.convertFromNormalizedParameterValue(e,t):(e-=this.p_15.getNumParameters())<this.p_16.getNumParameters()?this.p_16.convertFromNormalizedParameterValue(e,t):(e-=this.p_16.getNumParameters())<this.p_17.getNumParameters()?this.p_17.convertFromNormalizedParameterValue(e,t):(e-=this.p_17.getNumParameters())<this.p_18.getNumParameters()?this.p_18.convertFromNormalizedParameterValue(e,t):(e-=this.p_18.getNumParameters())<this.p_19.getNumParameters()?this.p_19.convertFromNormalizedParameterValue(e,t):(e-=this.p_19.getNumParameters())<this.p_20.getNumParameters()?this.p_20.convertFromNormalizedParameterValue(e,t):(e-=this.p_20.getNumParameters())<this.p_21.getNumParameters()?this.p_21.convertFromNormalizedParameterValue(e,t):(e-=this.p_21.getNumParameters())<this.p_22.getNumParameters()?this.p_22.convertFromNormalizedParameterValue(e,t):(e-=this.p_22.getNumParameters())<this.p_23.getNumParameters()?this.p_23.convertFromNormalizedParameterValue(e,t):(e-=this.p_23.getNumParameters())<this.p_24.getNumParameters()?this.p_24.convertFromNormalizedParameterValue(e,t):(e-=this.p_24.getNumParameters())<this.p_25.getNumParameters()?this.p_25.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_09.getNumParameters()?this.p_09.constrainParameterValue(e,t):(e-=this.p_09.getNumParameters())<this.p_10.getNumParameters()?this.p_10.constrainParameterValue(e,t):(e-=this.p_10.getNumParameters())<this.p_11.getNumParameters()?this.p_11.constrainParameterValue(e,t):(e-=this.p_11.getNumParameters())<this.p_12.getNumParameters()?this.p_12.constrainParameterValue(e,t):(e-=this.p_12.getNumParameters())<this.p_13.getNumParameters()?this.p_13.constrainParameterValue(e,t):(e-=this.p_13.getNumParameters())<this.p_14.getNumParameters()?this.p_14.constrainParameterValue(e,t):(e-=this.p_14.getNumParameters())<this.p_15.getNumParameters()?this.p_15.constrainParameterValue(e,t):(e-=this.p_15.getNumParameters())<this.p_16.getNumParameters()?this.p_16.constrainParameterValue(e,t):(e-=this.p_16.getNumParameters())<this.p_17.getNumParameters()?this.p_17.constrainParameterValue(e,t):(e-=this.p_17.getNumParameters())<this.p_18.getNumParameters()?this.p_18.constrainParameterValue(e,t):(e-=this.p_18.getNumParameters())<this.p_19.getNumParameters()?this.p_19.constrainParameterValue(e,t):(e-=this.p_19.getNumParameters())<this.p_20.getNumParameters()?this.p_20.constrainParameterValue(e,t):(e-=this.p_20.getNumParameters())<this.p_21.getNumParameters()?this.p_21.constrainParameterValue(e,t):(e-=this.p_21.getNumParameters())<this.p_22.getNumParameters()?this.p_22.constrainParameterValue(e,t):(e-=this.p_22.getNumParameters())<this.p_23.getNumParameters()?this.p_23.constrainParameterValue(e,t):(e-=this.p_23.getNumParameters())<this.p_24.getNumParameters()?this.p_24.constrainParameterValue(e,t):(e-=this.p_24.getNumParameters())<this.p_25.getNumParameters()?this.p_25.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm1_r_freq\"):this.inport_02_value_number_set(a);break;case TAG(\"fm1_r_c1ratio\"):this.inport_03_value_number_set(a);break;case TAG(\"fm1_r_c2ratio\"):this.inport_04_value_number_set(a);break;case TAG(\"fm1_r_c3ratio\"):this.inport_05_value_number_set(a);break;case TAG(\"fm1_r_3to1\"):this.inport_06_value_number_set(a);break;case TAG(\"fm1_r_2to1\"):this.inport_07_value_number_set(a);break;case TAG(\"fm1_r_3to2\"):this.inport_08_value_number_set(a);break;case TAG(\"fm1_listener\"):this.inport_09_value_number_set(a);break;case TAG(\"fm1_r_c1release\"):this.inport_10_value_number_set(a);break;case TAG(\"fm1_r_c2release\"):this.inport_11_value_number_set(a);break;case TAG(\"fm1_r_c3release\"):this.inport_12_value_number_set(a);break;case TAG(\"fm1_r_op1gain\"):this.inport_13_value_number_set(a);break;case TAG(\"fm1_r_op2gain\"):this.inport_14_value_number_set(a);break;case TAG(\"fm1_r_op3gain\"):this.inport_15_value_number_set(a);break;case TAG(\"fm1_r_gain\"):this.inport_16_value_number_set(a)}this.p_09.processNumMessage(e,t,s,a),this.p_10.processNumMessage(e,t,s,a),this.p_11.processNumMessage(e,t,s,a),this.p_12.processNumMessage(e,t,s,a),this.p_13.processNumMessage(e,t,s,a),this.p_14.processNumMessage(e,t,s,a),this.p_15.processNumMessage(e,t,s,a),this.p_16.processNumMessage(e,t,s,a),this.p_17.processNumMessage(e,t,s,a),this.p_18.processNumMessage(e,t,s,a),this.p_19.processNumMessage(e,t,s,a),this.p_20.processNumMessage(e,t,s,a),this.p_21.processNumMessage(e,t,s,a),this.p_22.processNumMessage(e,t,s,a),this.p_23.processNumMessage(e,t,s,a),this.p_24.processNumMessage(e,t,s,a),this.p_25.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm1_r_freq\"):this.inport_02_value_list_set(a);break;case TAG(\"fm1_r_c1ratio\"):this.inport_03_value_list_set(a);break;case TAG(\"fm1_r_c2ratio\"):this.inport_04_value_list_set(a);break;case TAG(\"fm1_r_c3ratio\"):this.inport_05_value_list_set(a);break;case TAG(\"fm1_r_3to1\"):this.inport_06_value_list_set(a);break;case TAG(\"fm1_r_2to1\"):this.inport_07_value_list_set(a);break;case TAG(\"fm1_r_3to2\"):this.inport_08_value_list_set(a);break;case TAG(\"fm1_listener\"):this.inport_09_value_list_set(a);break;case TAG(\"fm1_r_c1release\"):this.inport_10_value_list_set(a);break;case TAG(\"fm1_r_c2release\"):this.inport_11_value_list_set(a);break;case TAG(\"fm1_r_c3release\"):this.inport_12_value_list_set(a);break;case TAG(\"fm1_r_op1gain\"):this.inport_13_value_list_set(a);break;case TAG(\"fm1_r_op2gain\"):this.inport_14_value_list_set(a);break;case TAG(\"fm1_r_op3gain\"):this.inport_15_value_list_set(a);break;case TAG(\"fm1_r_gain\"):this.inport_16_value_list_set(a)}this.p_09.processListMessage(e,t,s,a),this.p_10.processListMessage(e,t,s,a),this.p_11.processListMessage(e,t,s,a),this.p_12.processListMessage(e,t,s,a),this.p_13.processListMessage(e,t,s,a),this.p_14.processListMessage(e,t,s,a),this.p_15.processListMessage(e,t,s,a),this.p_16.processListMessage(e,t,s,a),this.p_17.processListMessage(e,t,s,a),this.p_18.processListMessage(e,t,s,a),this.p_19.processListMessage(e,t,s,a),this.p_20.processListMessage(e,t,s,a),this.p_21.processListMessage(e,t,s,a),this.p_22.processListMessage(e,t,s,a),this.p_23.processListMessage(e,t,s,a),this.p_24.processListMessage(e,t,s,a),this.p_25.processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"fm1_r_freq\"):this.inport_02_value_bang_bang();break;case TAG(\"fm1_r_c1ratio\"):this.inport_03_value_bang_bang();break;case TAG(\"fm1_r_c2ratio\"):this.inport_04_value_bang_bang();break;case TAG(\"fm1_r_c3ratio\"):this.inport_05_value_bang_bang();break;case TAG(\"fm1_r_3to1\"):this.inport_06_value_bang_bang();break;case TAG(\"fm1_r_2to1\"):this.inport_07_value_bang_bang();break;case TAG(\"fm1_r_3to2\"):this.inport_08_value_bang_bang();break;case TAG(\"fm1_listener\"):this.inport_09_value_bang_bang();break;case TAG(\"fm1_r_c1release\"):this.inport_10_value_bang_bang();break;case TAG(\"fm1_r_c2release\"):this.inport_11_value_bang_bang();break;case TAG(\"fm1_r_c3release\"):this.inport_12_value_bang_bang();break;case TAG(\"fm1_r_op1gain\"):this.inport_13_value_bang_bang();break;case TAG(\"fm1_r_op2gain\"):this.inport_14_value_bang_bang();break;case TAG(\"fm1_r_op3gain\"):this.inport_15_value_bang_bang();break;case TAG(\"fm1_r_gain\"):this.inport_16_value_bang_bang()}this.p_09.processBangMessage(e,t,s),this.p_10.processBangMessage(e,t,s),this.p_11.processBangMessage(e,t,s),this.p_12.processBangMessage(e,t,s),this.p_13.processBangMessage(e,t,s),this.p_14.processBangMessage(e,t,s),this.p_15.processBangMessage(e,t,s),this.p_16.processBangMessage(e,t,s),this.p_17.processBangMessage(e,t,s),this.p_18.processBangMessage(e,t,s),this.p_19.processBangMessage(e,t,s),this.p_20.processBangMessage(e,t,s),this.p_21.processBangMessage(e,t,s),this.p_22.processBangMessage(e,t,s),this.p_23.processBangMessage(e,t,s),this.p_24.processBangMessage(e,t,s),this.p_25.processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"fm1_r_freq\"):return\"fm1_r_freq\";case TAG(\"\"):return\"\";case TAG(\"fm1_r_c1ratio\"):return\"fm1_r_c1ratio\";case TAG(\"fm1_r_c2ratio\"):return\"fm1_r_c2ratio\";case TAG(\"fm1_r_c3ratio\"):return\"fm1_r_c3ratio\";case TAG(\"fm1_r_3to1\"):return\"fm1_r_3to1\";case TAG(\"fm1_r_2to1\"):return\"fm1_r_2to1\";case TAG(\"fm1_r_3to2\"):return\"fm1_r_3to2\";case TAG(\"fm1_listener\"):return\"fm1_listener\";case TAG(\"fm1_r_c1release\"):return\"fm1_r_c1release\";case TAG(\"fm1_r_c2release\"):return\"fm1_r_c2release\";case TAG(\"fm1_r_c3release\"):return\"fm1_r_c3release\";case TAG(\"fm1_r_op1gain\"):return\"fm1_r_op1gain\";case TAG(\"fm1_r_op2gain\"):return\"fm1_r_op2gain\";case TAG(\"fm1_r_op3gain\"):return\"fm1_r_op3gain\";case TAG(\"fm1_r_gain\"):return\"fm1_r_gain\"}var t=this.p_09.resolveTag(e);if(t)return t;var s=this.p_10.resolveTag(e);if(s)return s;var a=this.p_11.resolveTag(e);if(a)return a;var r=this.p_12.resolveTag(e);if(r)return r;var _=this.p_13.resolveTag(e);if(_)return _;var i=this.p_14.resolveTag(e);if(i)return i;var n=this.p_15.resolveTag(e);if(n)return n;var u=this.p_16.resolveTag(e);if(u)return u;var o=this.p_17.resolveTag(e);if(o)return o;var p=this.p_18.resolveTag(e);if(p)return p;var m=this.p_19.resolveTag(e);if(m)return m;var h=this.p_20.resolveTag(e);if(h)return h;var l=this.p_21.resolveTag(e);if(l)return l;var c=this.p_22.resolveTag(e);if(c)return c;var g=this.p_23.resolveTag(e);if(g)return g;var d=this.p_24.resolveTag(e);if(d)return d;var f=this.p_25.resolveTag(e);return f||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),0==e&&(this.mtof_01_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_02_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_03_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_04_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256)),this.p_09.processDataViewUpdate(e,t),this.p_10.processDataViewUpdate(e,t),this.p_11.processDataViewUpdate(e,t),this.p_12.processDataViewUpdate(e,t),this.p_13.processDataViewUpdate(e,t),this.p_14.processDataViewUpdate(e,t),this.p_15.processDataViewUpdate(e,t),this.p_16.processDataViewUpdate(e,t),this.p_17.processDataViewUpdate(e,t),this.p_18.processDataViewUpdate(e,t),this.p_19.processDataViewUpdate(e,t),this.p_20.processDataViewUpdate(e,t),this.p_21.processDataViewUpdate(e,t),this.p_22.processDataViewUpdate(e,t),this.p_23.processDataViewUpdate(e,t),this.p_24.processDataViewUpdate(e,t),this.p_25.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e),this.mtof_01_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_02_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_03_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_04_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_420{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_03_phase=!0,this.random_29_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_85_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_85_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_85_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_85_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_86_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_86_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_86_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_02_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_02_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_02_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_02_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_02_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_02_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_02_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_02_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_02_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_03_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_03_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_03_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_03_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_03_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_03_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_03_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_03_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_03_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_03_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_15_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_15_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_87_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_87_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_29_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_29_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_88_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_88_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_88_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_01_input=e.listlen_a1_s01_input),containsValue(e.p_s14_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s14_audioProcessSampleCount),containsValue(e.p_s14_zeroBuffer)&&(this.zeroBuffer=e.p_s14_zeroBuffer),containsValue(e.p_s14_dummyBuffer)&&(this.dummyBuffer=e.p_s14_dummyBuffer),containsValue(e.p_s14_vs)&&(this.vs=e.p_s14_vs),containsValue(e.p_s14_maxvs)&&(this.maxvs=e.p_s14_maxvs),containsValue(e.p_s14_sr)&&(this.sr=e.p_s14_sr),containsValue(e.p_s14_invsr)&&(this.invsr=e.p_s14_invsr),containsValue(e.counter_s01_count)&&(this.counter_03_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_03_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_29_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_29_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s14_noteNumber)&&(this.noteNumber=e.p_s14_noteNumber),containsValue(e.p_s14_isMuted)&&(this.isMuted=e.p_s14_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_421{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_04_phase=!0,this.random_30_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_89_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_89_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_89_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_89_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_90_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_90_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_90_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_03_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_03_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_03_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_03_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_03_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_03_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_03_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_03_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_03_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_04_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_04_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_04_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_04_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_04_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_04_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_04_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_04_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_04_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_04_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_16_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_16_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_91_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_91_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_30_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_30_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_92_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_92_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_92_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_02_input=e.listlen_a1_s01_input),containsValue(e.p_s13_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s13_audioProcessSampleCount),containsValue(e.p_s13_zeroBuffer)&&(this.zeroBuffer=e.p_s13_zeroBuffer),containsValue(e.p_s13_dummyBuffer)&&(this.dummyBuffer=e.p_s13_dummyBuffer),containsValue(e.p_s13_vs)&&(this.vs=e.p_s13_vs),containsValue(e.p_s13_maxvs)&&(this.maxvs=e.p_s13_maxvs),containsValue(e.p_s13_sr)&&(this.sr=e.p_s13_sr),containsValue(e.p_s13_invsr)&&(this.invsr=e.p_s13_invsr),containsValue(e.counter_s01_count)&&(this.counter_04_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_04_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_30_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_30_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s13_noteNumber)&&(this.noteNumber=e.p_s13_noteNumber),containsValue(e.p_s13_isMuted)&&(this.isMuted=e.p_s13_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_422{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_05_phase=!0,this.random_31_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_93_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_93_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_93_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_93_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_94_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_94_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_94_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_04_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_04_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_04_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_04_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_04_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_04_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_04_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_04_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_04_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_05_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_05_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_05_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_05_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_05_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_05_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_05_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_05_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_05_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_05_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_17_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_17_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_95_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_95_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_31_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_31_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_96_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_96_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_96_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_03_input=e.listlen_a1_s01_input),containsValue(e.p_s12_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s12_audioProcessSampleCount),containsValue(e.p_s12_zeroBuffer)&&(this.zeroBuffer=e.p_s12_zeroBuffer),containsValue(e.p_s12_dummyBuffer)&&(this.dummyBuffer=e.p_s12_dummyBuffer),containsValue(e.p_s12_vs)&&(this.vs=e.p_s12_vs),containsValue(e.p_s12_maxvs)&&(this.maxvs=e.p_s12_maxvs),containsValue(e.p_s12_sr)&&(this.sr=e.p_s12_sr),containsValue(e.p_s12_invsr)&&(this.invsr=e.p_s12_invsr),containsValue(e.counter_s01_count)&&(this.counter_05_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_05_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_31_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_31_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s12_noteNumber)&&(this.noteNumber=e.p_s12_noteNumber),containsValue(e.p_s12_isMuted)&&(this.isMuted=e.p_s12_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_423{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_06_phase=!0,this.random_32_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_97_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_97_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_97_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_97_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_98_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_98_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_98_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_05_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_05_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_05_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_05_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_05_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_05_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_05_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_05_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_05_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_06_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_06_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_06_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_06_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_06_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_06_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_06_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_06_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_06_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_06_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_18_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_18_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_99_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_99_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_32_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_32_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_100_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_100_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_100_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_04_input=e.listlen_a1_s01_input),containsValue(e.p_s11_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s11_audioProcessSampleCount),containsValue(e.p_s11_zeroBuffer)&&(this.zeroBuffer=e.p_s11_zeroBuffer),containsValue(e.p_s11_dummyBuffer)&&(this.dummyBuffer=e.p_s11_dummyBuffer),containsValue(e.p_s11_vs)&&(this.vs=e.p_s11_vs),containsValue(e.p_s11_maxvs)&&(this.maxvs=e.p_s11_maxvs),containsValue(e.p_s11_sr)&&(this.sr=e.p_s11_sr),containsValue(e.p_s11_invsr)&&(this.invsr=e.p_s11_invsr),containsValue(e.counter_s01_count)&&(this.counter_06_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_06_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_32_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_32_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s11_noteNumber)&&(this.noteNumber=e.p_s11_noteNumber),containsValue(e.p_s11_isMuted)&&(this.isMuted=e.p_s11_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_424{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_07_phase=!0,this.random_33_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_101_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_101_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_101_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_101_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_102_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_102_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_102_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_06_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_06_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_06_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_06_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_06_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_06_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_06_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_06_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_06_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_07_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_07_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_07_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_07_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_07_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_07_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_07_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_07_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_07_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_07_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_19_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_19_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_103_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_103_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_33_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_33_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_104_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_104_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_104_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_05_input=e.listlen_a1_s01_input),containsValue(e.p_s10_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s10_audioProcessSampleCount),containsValue(e.p_s10_zeroBuffer)&&(this.zeroBuffer=e.p_s10_zeroBuffer),containsValue(e.p_s10_dummyBuffer)&&(this.dummyBuffer=e.p_s10_dummyBuffer),containsValue(e.p_s10_vs)&&(this.vs=e.p_s10_vs),containsValue(e.p_s10_maxvs)&&(this.maxvs=e.p_s10_maxvs),containsValue(e.p_s10_sr)&&(this.sr=e.p_s10_sr),containsValue(e.p_s10_invsr)&&(this.invsr=e.p_s10_invsr),containsValue(e.counter_s01_count)&&(this.counter_07_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_07_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_33_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_33_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s10_noteNumber)&&(this.noteNumber=e.p_s10_noteNumber),containsValue(e.p_s10_isMuted)&&(this.isMuted=e.p_s10_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_425{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_08_phase=!0,this.random_34_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_105_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_105_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_105_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_105_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_106_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_106_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_106_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_07_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_07_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_07_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_07_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_07_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_07_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_07_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_07_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_07_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_08_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_08_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_08_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_08_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_08_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_08_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_08_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_08_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_08_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_08_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_20_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_20_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_107_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_107_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_34_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_34_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_108_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_108_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_108_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_06_input=e.listlen_a1_s01_input),containsValue(e.p_s09_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s09_audioProcessSampleCount),containsValue(e.p_s09_zeroBuffer)&&(this.zeroBuffer=e.p_s09_zeroBuffer),containsValue(e.p_s09_dummyBuffer)&&(this.dummyBuffer=e.p_s09_dummyBuffer),containsValue(e.p_s09_vs)&&(this.vs=e.p_s09_vs),containsValue(e.p_s09_maxvs)&&(this.maxvs=e.p_s09_maxvs),containsValue(e.p_s09_sr)&&(this.sr=e.p_s09_sr),containsValue(e.p_s09_invsr)&&(this.invsr=e.p_s09_invsr),containsValue(e.counter_s01_count)&&(this.counter_08_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_08_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_34_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_34_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s09_noteNumber)&&(this.noteNumber=e.p_s09_noteNumber),containsValue(e.p_s09_isMuted)&&(this.isMuted=e.p_s09_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_426{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_09_phase=!0,this.random_35_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_109_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_109_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_109_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_109_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_110_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_110_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_110_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_08_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_08_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_08_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_08_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_08_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_08_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_08_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_08_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_08_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_09_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_09_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_09_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_09_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_09_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_09_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_09_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_09_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_09_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_09_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_21_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_21_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_111_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_111_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_35_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_35_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_112_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_112_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_112_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_07_input=e.listlen_a1_s01_input),containsValue(e.p_s08_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s08_audioProcessSampleCount),containsValue(e.p_s08_zeroBuffer)&&(this.zeroBuffer=e.p_s08_zeroBuffer),containsValue(e.p_s08_dummyBuffer)&&(this.dummyBuffer=e.p_s08_dummyBuffer),containsValue(e.p_s08_vs)&&(this.vs=e.p_s08_vs),containsValue(e.p_s08_maxvs)&&(this.maxvs=e.p_s08_maxvs),containsValue(e.p_s08_sr)&&(this.sr=e.p_s08_sr),containsValue(e.p_s08_invsr)&&(this.invsr=e.p_s08_invsr),containsValue(e.counter_s01_count)&&(this.counter_09_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_09_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_35_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_35_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s08_noteNumber)&&(this.noteNumber=e.p_s08_noteNumber),containsValue(e.p_s08_isMuted)&&(this.isMuted=e.p_s08_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_427{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_10_phase=!0,this.random_36_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_113_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_113_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_113_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_113_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_114_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_114_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_114_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_09_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_09_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_09_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_09_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_09_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_09_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_09_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_09_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_09_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_10_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_10_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_10_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_10_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_10_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_10_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_10_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_10_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_10_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_10_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_22_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_22_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_115_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_115_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_36_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_36_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_116_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_116_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_116_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_08_input=e.listlen_a1_s01_input),containsValue(e.p_s07_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s07_audioProcessSampleCount),containsValue(e.p_s07_zeroBuffer)&&(this.zeroBuffer=e.p_s07_zeroBuffer),containsValue(e.p_s07_dummyBuffer)&&(this.dummyBuffer=e.p_s07_dummyBuffer),containsValue(e.p_s07_vs)&&(this.vs=e.p_s07_vs),containsValue(e.p_s07_maxvs)&&(this.maxvs=e.p_s07_maxvs),containsValue(e.p_s07_sr)&&(this.sr=e.p_s07_sr),containsValue(e.p_s07_invsr)&&(this.invsr=e.p_s07_invsr),containsValue(e.counter_s01_count)&&(this.counter_10_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_10_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_36_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_36_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s07_noteNumber)&&(this.noteNumber=e.p_s07_noteNumber),containsValue(e.p_s07_isMuted)&&(this.isMuted=e.p_s07_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_428{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_11_phase=!0,this.random_37_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_117_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_117_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_117_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_117_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_118_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_118_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_118_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_10_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_10_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_10_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_10_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_10_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_10_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_10_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_10_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_10_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_11_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_11_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_11_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_11_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_11_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_11_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_11_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_11_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_11_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_11_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_23_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_23_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_119_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_119_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_37_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_37_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_120_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_120_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_120_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_09_input=e.listlen_a1_s01_input),containsValue(e.p_s06_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s06_audioProcessSampleCount),containsValue(e.p_s06_zeroBuffer)&&(this.zeroBuffer=e.p_s06_zeroBuffer),containsValue(e.p_s06_dummyBuffer)&&(this.dummyBuffer=e.p_s06_dummyBuffer),containsValue(e.p_s06_vs)&&(this.vs=e.p_s06_vs),containsValue(e.p_s06_maxvs)&&(this.maxvs=e.p_s06_maxvs),containsValue(e.p_s06_sr)&&(this.sr=e.p_s06_sr),containsValue(e.p_s06_invsr)&&(this.invsr=e.p_s06_invsr),containsValue(e.counter_s01_count)&&(this.counter_11_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_11_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_37_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_37_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s06_noteNumber)&&(this.noteNumber=e.p_s06_noteNumber),containsValue(e.p_s06_isMuted)&&(this.isMuted=e.p_s06_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_429{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_12_phase=!0,this.random_38_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_121_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_121_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_121_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_121_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_122_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_122_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_122_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_11_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_11_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_11_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_11_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_11_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_11_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_11_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_11_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_11_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_12_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_12_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_12_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_12_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_12_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_12_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_12_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_12_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_12_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_12_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_24_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_24_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_123_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_123_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_38_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_38_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_124_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_124_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_124_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_10_input=e.listlen_a1_s01_input),containsValue(e.p_s05_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s05_audioProcessSampleCount),containsValue(e.p_s05_zeroBuffer)&&(this.zeroBuffer=e.p_s05_zeroBuffer),containsValue(e.p_s05_dummyBuffer)&&(this.dummyBuffer=e.p_s05_dummyBuffer),containsValue(e.p_s05_vs)&&(this.vs=e.p_s05_vs),containsValue(e.p_s05_maxvs)&&(this.maxvs=e.p_s05_maxvs),containsValue(e.p_s05_sr)&&(this.sr=e.p_s05_sr),containsValue(e.p_s05_invsr)&&(this.invsr=e.p_s05_invsr),containsValue(e.counter_s01_count)&&(this.counter_12_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_12_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_38_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_38_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s05_noteNumber)&&(this.noteNumber=e.p_s05_noteNumber),containsValue(e.p_s05_isMuted)&&(this.isMuted=e.p_s05_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_430{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_13_phase=!0,this.random_39_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_125_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_125_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_125_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_125_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_126_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_126_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_126_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_12_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_12_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_12_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_12_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_12_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_12_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_12_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_12_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_12_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_13_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_13_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_13_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_13_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_13_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_13_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_13_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_13_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_13_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_13_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_25_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_25_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_127_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_127_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_39_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_39_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_128_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_128_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_128_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_11_input=e.listlen_a1_s01_input),containsValue(e.p_s04_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s04_audioProcessSampleCount),containsValue(e.p_s04_zeroBuffer)&&(this.zeroBuffer=e.p_s04_zeroBuffer),containsValue(e.p_s04_dummyBuffer)&&(this.dummyBuffer=e.p_s04_dummyBuffer),containsValue(e.p_s04_vs)&&(this.vs=e.p_s04_vs),containsValue(e.p_s04_maxvs)&&(this.maxvs=e.p_s04_maxvs),containsValue(e.p_s04_sr)&&(this.sr=e.p_s04_sr),containsValue(e.p_s04_invsr)&&(this.invsr=e.p_s04_invsr),containsValue(e.counter_s01_count)&&(this.counter_13_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_13_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_39_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_39_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s04_noteNumber)&&(this.noteNumber=e.p_s04_noteNumber),containsValue(e.p_s04_isMuted)&&(this.isMuted=e.p_s04_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_431{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_14_phase=!0,this.random_40_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_129_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_129_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_129_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_129_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_130_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_130_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_130_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_13_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_13_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_13_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_13_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_13_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_13_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_13_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_13_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_13_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_14_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_14_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_14_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_14_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_14_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_14_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_14_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_14_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_14_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_14_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_26_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_26_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_131_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_131_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_40_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_40_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_132_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_132_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_132_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_12_input=e.listlen_a1_s01_input),containsValue(e.p_s03_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s03_audioProcessSampleCount),containsValue(e.p_s03_zeroBuffer)&&(this.zeroBuffer=e.p_s03_zeroBuffer),containsValue(e.p_s03_dummyBuffer)&&(this.dummyBuffer=e.p_s03_dummyBuffer),containsValue(e.p_s03_vs)&&(this.vs=e.p_s03_vs),containsValue(e.p_s03_maxvs)&&(this.maxvs=e.p_s03_maxvs),containsValue(e.p_s03_sr)&&(this.sr=e.p_s03_sr),containsValue(e.p_s03_invsr)&&(this.invsr=e.p_s03_invsr),containsValue(e.counter_s01_count)&&(this.counter_14_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_14_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_40_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_40_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s03_noteNumber)&&(this.noteNumber=e.p_s03_noteNumber),containsValue(e.p_s03_isMuted)&&(this.isMuted=e.p_s03_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_432{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_15_phase=!0,this.random_41_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_133_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_133_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_133_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_133_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_134_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_134_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_134_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_14_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_14_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_14_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_14_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_14_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_14_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_14_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_14_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_14_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_15_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_15_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_15_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_15_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_15_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_15_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_15_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_15_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_15_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_15_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_27_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_27_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_135_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_135_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_41_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_41_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_136_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_136_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_136_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_13_input=e.listlen_a1_s01_input),containsValue(e.p_s02_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s02_audioProcessSampleCount),containsValue(e.p_s02_zeroBuffer)&&(this.zeroBuffer=e.p_s02_zeroBuffer),containsValue(e.p_s02_dummyBuffer)&&(this.dummyBuffer=e.p_s02_dummyBuffer),containsValue(e.p_s02_vs)&&(this.vs=e.p_s02_vs),containsValue(e.p_s02_maxvs)&&(this.maxvs=e.p_s02_maxvs),containsValue(e.p_s02_sr)&&(this.sr=e.p_s02_sr),containsValue(e.p_s02_invsr)&&(this.invsr=e.p_s02_invsr),containsValue(e.counter_s01_count)&&(this.counter_15_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_15_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_41_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_41_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s02_noteNumber)&&(this.noteNumber=e.p_s02_noteNumber),containsValue(e.p_s02_isMuted)&&(this.isMuted=e.p_s02_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_433{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_16_phase=!0,this.random_42_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_137_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_137_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_137_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_137_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_138_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_138_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_138_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_15_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_15_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_15_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_15_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_15_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_15_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_15_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_15_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_15_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_16_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_16_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_16_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_16_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_16_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_16_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_16_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_16_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_16_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_16_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_28_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_28_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_139_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_139_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_42_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_42_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_140_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_140_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_140_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_14_input=e.listlen_a1_s01_input),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.counter_s01_count)&&(this.counter_16_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_16_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_42_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_42_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_481{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0,this.p_26=new Array,this.p_27=new Array,this.p_28=new Array,this.p_29=new Array,this.p_30=new Array,this.p_31=new Array,this.p_32=new Array,this.p_33=new Array,this.p_34=new Array,this.p_35=new Array,this.p_36=new Array,this.p_37=new Array,this.p_38=new Array,this.p_39=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.join_s01_in0)&&(this.join_02_in0=e.join_s01_in0),containsValue(e.join_s01_in1)&&(this.join_02_in1=e.join_s01_in1),containsValue(e.join_s01_in2)&&(this.join_02_in2=e.join_s01_in2),containsValue(e.join_s01_in3)&&(this.join_02_in3=e.join_s01_in3),containsValue(e.join_s01_in4)&&(this.join_02_in4=e.join_s01_in4),containsValue(e.join_s01_in5)&&(this.join_02_in5=e.join_s01_in5),containsValue(e.join_s01_in6)&&(this.join_02_in6=e.join_s01_in6),containsValue(e.join_s01_in7)&&(this.join_02_in7=e.join_s01_in7),containsValue(e.join_s01_in8)&&(this.join_02_in8=e.join_s01_in8),containsValue(e.join_s01_in9)&&(this.join_02_in9=e.join_s01_in9),containsValue(e.join_s01_in10)&&(this.join_02_in10=e.join_s01_in10),containsValue(e.join_s01_in11)&&(this.join_02_in11=e.join_s01_in11),containsValue(e.join_s01_in12)&&(this.join_02_in12=e.join_s01_in12),containsValue(e.join_s01_in13)&&(this.join_02_in13=e.join_s01_in13),containsValue(e.p_s14_target)&&(this.p_26_target=e.p_s14_target),containsValue(e.p_s13_target)&&(this.p_27_target=e.p_s13_target),containsValue(e.p_s12_target)&&(this.p_28_target=e.p_s12_target),containsValue(e.p_s11_target)&&(this.p_29_target=e.p_s11_target),containsValue(e.p_s10_target)&&(this.p_30_target=e.p_s10_target),containsValue(e.p_s09_target)&&(this.p_31_target=e.p_s09_target),containsValue(e.p_s08_target)&&(this.p_32_target=e.p_s08_target),containsValue(e.p_s07_target)&&(this.p_33_target=e.p_s07_target),containsValue(e.p_s06_target)&&(this.p_34_target=e.p_s06_target),containsValue(e.p_s05_target)&&(this.p_35_target=e.p_s05_target),containsValue(e.p_s04_target)&&(this.p_36_target=e.p_s04_target),containsValue(e.p_s03_target)&&(this.p_37_target=e.p_s03_target),containsValue(e.p_s02_target)&&(this.p_38_target=e.p_s02_target),containsValue(e.p_s01_target)&&(this.p_39_target=e.p_s01_target),containsValue(e.p_s11_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s11_audioProcessSampleCount),containsValue(e.p_s11_zeroBuffer)&&(this.zeroBuffer=e.p_s11_zeroBuffer),containsValue(e.p_s11_dummyBuffer)&&(this.dummyBuffer=e.p_s11_dummyBuffer),containsValue(e.p_s11_vs)&&(this.vs=e.p_s11_vs),containsValue(e.p_s11_maxvs)&&(this.maxvs=e.p_s11_maxvs),containsValue(e.p_s11_sr)&&(this.sr=e.p_s11_sr),containsValue(e.p_s11_invsr)&&(this.invsr=e.p_s11_invsr),containsValue(e.p_s11_noteNumber)&&(this.noteNumber=e.p_s11_noteNumber),containsValue(e.p_s11_isMuted)&&(this.isMuted=e.p_s11_isMuted)),this.p_26=new RNBOSubpatcher_420,this.p_26.setEngineAndPatcher(this.getEngine(),this),this.p_26.initialize(getSubState(e,\"p_s14\")),this.p_26.setParameterOffset(this.getParameterOffset(this.p_26)),this.p_27=new RNBOSubpatcher_421,this.p_27.setEngineAndPatcher(this.getEngine(),this),this.p_27.initialize(getSubState(e,\"p_s13\")),this.p_27.setParameterOffset(this.getParameterOffset(this.p_27)),this.p_28=new RNBOSubpatcher_422,this.p_28.setEngineAndPatcher(this.getEngine(),this),this.p_28.initialize(getSubState(e,\"p_s12\")),this.p_28.setParameterOffset(this.getParameterOffset(this.p_28)),this.p_29=new RNBOSubpatcher_423,this.p_29.setEngineAndPatcher(this.getEngine(),this),this.p_29.initialize(getSubState(e,\"p_s11\")),this.p_29.setParameterOffset(this.getParameterOffset(this.p_29)),this.p_30=new RNBOSubpatcher_424,this.p_30.setEngineAndPatcher(this.getEngine(),this),this.p_30.initialize(getSubState(e,\"p_s10\")),this.p_30.setParameterOffset(this.getParameterOffset(this.p_30)),this.p_31=new RNBOSubpatcher_425,this.p_31.setEngineAndPatcher(this.getEngine(),this),this.p_31.initialize(getSubState(e,\"p_s09\")),this.p_31.setParameterOffset(this.getParameterOffset(this.p_31)),this.p_32=new RNBOSubpatcher_426,this.p_32.setEngineAndPatcher(this.getEngine(),this),this.p_32.initialize(getSubState(e,\"p_s08\")),this.p_32.setParameterOffset(this.getParameterOffset(this.p_32)),this.p_33=new RNBOSubpatcher_427,this.p_33.setEngineAndPatcher(this.getEngine(),this),this.p_33.initialize(getSubState(e,\"p_s07\")),this.p_33.setParameterOffset(this.getParameterOffset(this.p_33)),this.p_34=new RNBOSubpatcher_428,this.p_34.setEngineAndPatcher(this.getEngine(),this),this.p_34.initialize(getSubState(e,\"p_s06\")),this.p_34.setParameterOffset(this.getParameterOffset(this.p_34)),this.p_35=new RNBOSubpatcher_429,this.p_35.setEngineAndPatcher(this.getEngine(),this),this.p_35.initialize(getSubState(e,\"p_s05\")),this.p_35.setParameterOffset(this.getParameterOffset(this.p_35)),this.p_36=new RNBOSubpatcher_430,this.p_36.setEngineAndPatcher(this.getEngine(),this),this.p_36.initialize(getSubState(e,\"p_s04\")),this.p_36.setParameterOffset(this.getParameterOffset(this.p_36)),this.p_37=new RNBOSubpatcher_431,this.p_37.setEngineAndPatcher(this.getEngine(),this),this.p_37.initialize(getSubState(e,\"p_s03\")),this.p_37.setParameterOffset(this.getParameterOffset(this.p_37)),this.p_38=new RNBOSubpatcher_432,this.p_38.setEngineAndPatcher(this.getEngine(),this),this.p_38.initialize(getSubState(e,\"p_s02\")),this.p_38.setParameterOffset(this.getParameterOffset(this.p_38)),this.p_39=new RNBOSubpatcher_433,this.p_39.setEngineAndPatcher(this.getEngine(),this),this.p_39.initialize(getSubState(e,\"p_s01\")),this.p_39.setParameterOffset(this.getParameterOffset(this.p_39))}getPreset(e){this.p_26.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-53\")),this.p_27.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-26\")),this.p_28.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-32\")),this.p_29.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-38\")),this.p_30.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-47\")),this.p_31.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-44\")),this.p_32.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-41\")),this.p_33.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-57\")),this.p_34.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-54\")),this.p_35.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-50\")),this.p_36.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-66\")),this.p_37.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-63\")),this.p_38.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-60\")),this.p_39.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-69\"))}processTempoEvent(e,t){this.updateTime(e),this.p_26.processTempoEvent(e,t),this.p_27.processTempoEvent(e,t),this.p_28.processTempoEvent(e,t),this.p_29.processTempoEvent(e,t),this.p_30.processTempoEvent(e,t),this.p_31.processTempoEvent(e,t),this.p_32.processTempoEvent(e,t),this.p_33.processTempoEvent(e,t),this.p_34.processTempoEvent(e,t),this.p_35.processTempoEvent(e,t),this.p_36.processTempoEvent(e,t),this.p_37.processTempoEvent(e,t),this.p_38.processTempoEvent(e,t),this.p_39.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_26.processTransportEvent(e,t),this.p_27.processTransportEvent(e,t),this.p_28.processTransportEvent(e,t),this.p_29.processTransportEvent(e,t),this.p_30.processTransportEvent(e,t),this.p_31.processTransportEvent(e,t),this.p_32.processTransportEvent(e,t),this.p_33.processTransportEvent(e,t),this.p_34.processTransportEvent(e,t),this.p_35.processTransportEvent(e,t),this.p_36.processTransportEvent(e,t),this.p_37.processTransportEvent(e,t),this.p_38.processTransportEvent(e,t),this.p_39.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_26.processBeatTimeEvent(e,t),this.p_27.processBeatTimeEvent(e,t),this.p_28.processBeatTimeEvent(e,t),this.p_29.processBeatTimeEvent(e,t),this.p_30.processBeatTimeEvent(e,t),this.p_31.processBeatTimeEvent(e,t),this.p_32.processBeatTimeEvent(e,t),this.p_33.processBeatTimeEvent(e,t),this.p_34.processBeatTimeEvent(e,t),this.p_35.processBeatTimeEvent(e,t),this.p_36.processBeatTimeEvent(e,t),this.p_37.processBeatTimeEvent(e,t),this.p_38.processBeatTimeEvent(e,t),this.p_39.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_26.processTimeSignatureEvent(e,t,s),this.p_27.processTimeSignatureEvent(e,t,s),this.p_28.processTimeSignatureEvent(e,t,s),this.p_29.processTimeSignatureEvent(e,t,s),this.p_30.processTimeSignatureEvent(e,t,s),this.p_31.processTimeSignatureEvent(e,t,s),this.p_32.processTimeSignatureEvent(e,t,s),this.p_33.processTimeSignatureEvent(e,t,s),this.p_34.processTimeSignatureEvent(e,t,s),this.p_35.processTimeSignatureEvent(e,t,s),this.p_36.processTimeSignatureEvent(e,t,s),this.p_37.processTimeSignatureEvent(e,t,s),this.p_38.processTimeSignatureEvent(e,t,s),this.p_39.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_26.getNumParameters()&&this.p_26.setParameterValue(e,t,s),(e-=this.p_26.getNumParameters())<this.p_27.getNumParameters()&&this.p_27.setParameterValue(e,t,s),(e-=this.p_27.getNumParameters())<this.p_28.getNumParameters()&&this.p_28.setParameterValue(e,t,s),(e-=this.p_28.getNumParameters())<this.p_29.getNumParameters()&&this.p_29.setParameterValue(e,t,s),(e-=this.p_29.getNumParameters())<this.p_30.getNumParameters()&&this.p_30.setParameterValue(e,t,s),(e-=this.p_30.getNumParameters())<this.p_31.getNumParameters()&&this.p_31.setParameterValue(e,t,s),(e-=this.p_31.getNumParameters())<this.p_32.getNumParameters()&&this.p_32.setParameterValue(e,t,s),(e-=this.p_32.getNumParameters())<this.p_33.getNumParameters()&&this.p_33.setParameterValue(e,t,s),(e-=this.p_33.getNumParameters())<this.p_34.getNumParameters()&&this.p_34.setParameterValue(e,t,s),(e-=this.p_34.getNumParameters())<this.p_35.getNumParameters()&&this.p_35.setParameterValue(e,t,s),(e-=this.p_35.getNumParameters())<this.p_36.getNumParameters()&&this.p_36.setParameterValue(e,t,s),(e-=this.p_36.getNumParameters())<this.p_37.getNumParameters()&&this.p_37.setParameterValue(e,t,s),(e-=this.p_37.getNumParameters())<this.p_38.getNumParameters()&&this.p_38.setParameterValue(e,t,s),(e-=this.p_38.getNumParameters())<this.p_39.getNumParameters()&&this.p_39.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_26.getNumParameters()?this.p_26.getParameterValue(e):(e-=this.p_26.getNumParameters())<this.p_27.getNumParameters()?this.p_27.getParameterValue(e):(e-=this.p_27.getNumParameters())<this.p_28.getNumParameters()?this.p_28.getParameterValue(e):(e-=this.p_28.getNumParameters())<this.p_29.getNumParameters()?this.p_29.getParameterValue(e):(e-=this.p_29.getNumParameters())<this.p_30.getNumParameters()?this.p_30.getParameterValue(e):(e-=this.p_30.getNumParameters())<this.p_31.getNumParameters()?this.p_31.getParameterValue(e):(e-=this.p_31.getNumParameters())<this.p_32.getNumParameters()?this.p_32.getParameterValue(e):(e-=this.p_32.getNumParameters())<this.p_33.getNumParameters()?this.p_33.getParameterValue(e):(e-=this.p_33.getNumParameters())<this.p_34.getNumParameters()?this.p_34.getParameterValue(e):(e-=this.p_34.getNumParameters())<this.p_35.getNumParameters()?this.p_35.getParameterValue(e):(e-=this.p_35.getNumParameters())<this.p_36.getNumParameters()?this.p_36.getParameterValue(e):(e-=this.p_36.getNumParameters())<this.p_37.getNumParameters()?this.p_37.getParameterValue(e):(e-=this.p_37.getNumParameters())<this.p_38.getNumParameters()?this.p_38.getParameterValue(e):(e-=this.p_38.getNumParameters())<this.p_39.getNumParameters()?this.p_39.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters()+this.p_30.getNumParameters()+this.p_31.getNumParameters()+this.p_32.getNumParameters()+this.p_33.getNumParameters()+this.p_34.getNumParameters()+this.p_35.getNumParameters()+this.p_36.getNumParameters()+this.p_37.getNumParameters()+this.p_38.getNumParameters()+this.p_39.getNumParameters()}getParameterName(e){return(e-=0)<this.p_26.getNumParameters()?this.p_26.getParameterName(e):(e-=this.p_26.getNumParameters())<this.p_27.getNumParameters()?this.p_27.getParameterName(e):(e-=this.p_27.getNumParameters())<this.p_28.getNumParameters()?this.p_28.getParameterName(e):(e-=this.p_28.getNumParameters())<this.p_29.getNumParameters()?this.p_29.getParameterName(e):(e-=this.p_29.getNumParameters())<this.p_30.getNumParameters()?this.p_30.getParameterName(e):(e-=this.p_30.getNumParameters())<this.p_31.getNumParameters()?this.p_31.getParameterName(e):(e-=this.p_31.getNumParameters())<this.p_32.getNumParameters()?this.p_32.getParameterName(e):(e-=this.p_32.getNumParameters())<this.p_33.getNumParameters()?this.p_33.getParameterName(e):(e-=this.p_33.getNumParameters())<this.p_34.getNumParameters()?this.p_34.getParameterName(e):(e-=this.p_34.getNumParameters())<this.p_35.getNumParameters()?this.p_35.getParameterName(e):(e-=this.p_35.getNumParameters())<this.p_36.getNumParameters()?this.p_36.getParameterName(e):(e-=this.p_36.getNumParameters())<this.p_37.getNumParameters()?this.p_37.getParameterName(e):(e-=this.p_37.getNumParameters())<this.p_38.getNumParameters()?this.p_38.getParameterName(e):(e-=this.p_38.getNumParameters())<this.p_39.getNumParameters()?this.p_39.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_26.getNumParameters()?this.p_26.getParameterId(e):(e-=this.p_26.getNumParameters())<this.p_27.getNumParameters()?this.p_27.getParameterId(e):(e-=this.p_27.getNumParameters())<this.p_28.getNumParameters()?this.p_28.getParameterId(e):(e-=this.p_28.getNumParameters())<this.p_29.getNumParameters()?this.p_29.getParameterId(e):(e-=this.p_29.getNumParameters())<this.p_30.getNumParameters()?this.p_30.getParameterId(e):(e-=this.p_30.getNumParameters())<this.p_31.getNumParameters()?this.p_31.getParameterId(e):(e-=this.p_31.getNumParameters())<this.p_32.getNumParameters()?this.p_32.getParameterId(e):(e-=this.p_32.getNumParameters())<this.p_33.getNumParameters()?this.p_33.getParameterId(e):(e-=this.p_33.getNumParameters())<this.p_34.getNumParameters()?this.p_34.getParameterId(e):(e-=this.p_34.getNumParameters())<this.p_35.getNumParameters()?this.p_35.getParameterId(e):(e-=this.p_35.getNumParameters())<this.p_36.getNumParameters()?this.p_36.getParameterId(e):(e-=this.p_36.getNumParameters())<this.p_37.getNumParameters()?this.p_37.getParameterId(e):(e-=this.p_37.getNumParameters())<this.p_38.getNumParameters()?this.p_38.getParameterId(e):(e-=this.p_38.getNumParameters())<this.p_39.getNumParameters()?this.p_39.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_26.getNumParameters()&&this.p_26.getParameterInfo(e,t),(e-=this.p_26.getNumParameters())<this.p_27.getNumParameters()&&this.p_27.getParameterInfo(e,t),(e-=this.p_27.getNumParameters())<this.p_28.getNumParameters()&&this.p_28.getParameterInfo(e,t),(e-=this.p_28.getNumParameters())<this.p_29.getNumParameters()&&this.p_29.getParameterInfo(e,t),(e-=this.p_29.getNumParameters())<this.p_30.getNumParameters()&&this.p_30.getParameterInfo(e,t),(e-=this.p_30.getNumParameters())<this.p_31.getNumParameters()&&this.p_31.getParameterInfo(e,t),(e-=this.p_31.getNumParameters())<this.p_32.getNumParameters()&&this.p_32.getParameterInfo(e,t),(e-=this.p_32.getNumParameters())<this.p_33.getNumParameters()&&this.p_33.getParameterInfo(e,t),(e-=this.p_33.getNumParameters())<this.p_34.getNumParameters()&&this.p_34.getParameterInfo(e,t),(e-=this.p_34.getNumParameters())<this.p_35.getNumParameters()&&this.p_35.getParameterInfo(e,t),(e-=this.p_35.getNumParameters())<this.p_36.getNumParameters()&&this.p_36.getParameterInfo(e,t),(e-=this.p_36.getNumParameters())<this.p_37.getNumParameters()&&this.p_37.getParameterInfo(e,t),(e-=this.p_37.getNumParameters())<this.p_38.getNumParameters()&&this.p_38.getParameterInfo(e,t),(e-=this.p_38.getNumParameters())<this.p_39.getNumParameters()&&this.p_39.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return e==this.p_26?0:e==this.p_27?0+this.p_26.getNumParameters():e==this.p_28?0+this.p_26.getNumParameters()+this.p_27.getNumParameters():e==this.p_29?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters():e==this.p_30?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters():e==this.p_31?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters()+this.p_30.getNumParameters():e==this.p_32?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters()+this.p_30.getNumParameters()+this.p_31.getNumParameters():e==this.p_33?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters()+this.p_30.getNumParameters()+this.p_31.getNumParameters()+this.p_32.getNumParameters():e==this.p_34?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters()+this.p_30.getNumParameters()+this.p_31.getNumParameters()+this.p_32.getNumParameters()+this.p_33.getNumParameters():e==this.p_35?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters()+this.p_30.getNumParameters()+this.p_31.getNumParameters()+this.p_32.getNumParameters()+this.p_33.getNumParameters()+this.p_34.getNumParameters():e==this.p_36?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters()+this.p_30.getNumParameters()+this.p_31.getNumParameters()+this.p_32.getNumParameters()+this.p_33.getNumParameters()+this.p_34.getNumParameters()+this.p_35.getNumParameters():e==this.p_37?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters()+this.p_30.getNumParameters()+this.p_31.getNumParameters()+this.p_32.getNumParameters()+this.p_33.getNumParameters()+this.p_34.getNumParameters()+this.p_35.getNumParameters()+this.p_36.getNumParameters():e==this.p_38?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters()+this.p_30.getNumParameters()+this.p_31.getNumParameters()+this.p_32.getNumParameters()+this.p_33.getNumParameters()+this.p_34.getNumParameters()+this.p_35.getNumParameters()+this.p_36.getNumParameters()+this.p_37.getNumParameters():e==this.p_39?0+this.p_26.getNumParameters()+this.p_27.getNumParameters()+this.p_28.getNumParameters()+this.p_29.getNumParameters()+this.p_30.getNumParameters()+this.p_31.getNumParameters()+this.p_32.getNumParameters()+this.p_33.getNumParameters()+this.p_34.getNumParameters()+this.p_35.getNumParameters()+this.p_36.getNumParameters()+this.p_37.getNumParameters()+this.p_38.getNumParameters():0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_26.getNumParameters()?this.p_26.convertToNormalizedParameterValue(e,t):(e-=this.p_26.getNumParameters())<this.p_27.getNumParameters()?this.p_27.convertToNormalizedParameterValue(e,t):(e-=this.p_27.getNumParameters())<this.p_28.getNumParameters()?this.p_28.convertToNormalizedParameterValue(e,t):(e-=this.p_28.getNumParameters())<this.p_29.getNumParameters()?this.p_29.convertToNormalizedParameterValue(e,t):(e-=this.p_29.getNumParameters())<this.p_30.getNumParameters()?this.p_30.convertToNormalizedParameterValue(e,t):(e-=this.p_30.getNumParameters())<this.p_31.getNumParameters()?this.p_31.convertToNormalizedParameterValue(e,t):(e-=this.p_31.getNumParameters())<this.p_32.getNumParameters()?this.p_32.convertToNormalizedParameterValue(e,t):(e-=this.p_32.getNumParameters())<this.p_33.getNumParameters()?this.p_33.convertToNormalizedParameterValue(e,t):(e-=this.p_33.getNumParameters())<this.p_34.getNumParameters()?this.p_34.convertToNormalizedParameterValue(e,t):(e-=this.p_34.getNumParameters())<this.p_35.getNumParameters()?this.p_35.convertToNormalizedParameterValue(e,t):(e-=this.p_35.getNumParameters())<this.p_36.getNumParameters()?this.p_36.convertToNormalizedParameterValue(e,t):(e-=this.p_36.getNumParameters())<this.p_37.getNumParameters()?this.p_37.convertToNormalizedParameterValue(e,t):(e-=this.p_37.getNumParameters())<this.p_38.getNumParameters()?this.p_38.convertToNormalizedParameterValue(e,t):(e-=this.p_38.getNumParameters())<this.p_39.getNumParameters()?this.p_39.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_26.getNumParameters()?this.p_26.convertFromNormalizedParameterValue(e,t):(e-=this.p_26.getNumParameters())<this.p_27.getNumParameters()?this.p_27.convertFromNormalizedParameterValue(e,t):(e-=this.p_27.getNumParameters())<this.p_28.getNumParameters()?this.p_28.convertFromNormalizedParameterValue(e,t):(e-=this.p_28.getNumParameters())<this.p_29.getNumParameters()?this.p_29.convertFromNormalizedParameterValue(e,t):(e-=this.p_29.getNumParameters())<this.p_30.getNumParameters()?this.p_30.convertFromNormalizedParameterValue(e,t):(e-=this.p_30.getNumParameters())<this.p_31.getNumParameters()?this.p_31.convertFromNormalizedParameterValue(e,t):(e-=this.p_31.getNumParameters())<this.p_32.getNumParameters()?this.p_32.convertFromNormalizedParameterValue(e,t):(e-=this.p_32.getNumParameters())<this.p_33.getNumParameters()?this.p_33.convertFromNormalizedParameterValue(e,t):(e-=this.p_33.getNumParameters())<this.p_34.getNumParameters()?this.p_34.convertFromNormalizedParameterValue(e,t):(e-=this.p_34.getNumParameters())<this.p_35.getNumParameters()?this.p_35.convertFromNormalizedParameterValue(e,t):(e-=this.p_35.getNumParameters())<this.p_36.getNumParameters()?this.p_36.convertFromNormalizedParameterValue(e,t):(e-=this.p_36.getNumParameters())<this.p_37.getNumParameters()?this.p_37.convertFromNormalizedParameterValue(e,t):(e-=this.p_37.getNumParameters())<this.p_38.getNumParameters()?this.p_38.convertFromNormalizedParameterValue(e,t):(e-=this.p_38.getNumParameters())<this.p_39.getNumParameters()?this.p_39.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_26.getNumParameters()?this.p_26.constrainParameterValue(e,t):(e-=this.p_26.getNumParameters())<this.p_27.getNumParameters()?this.p_27.constrainParameterValue(e,t):(e-=this.p_27.getNumParameters())<this.p_28.getNumParameters()?this.p_28.constrainParameterValue(e,t):(e-=this.p_28.getNumParameters())<this.p_29.getNumParameters()?this.p_29.constrainParameterValue(e,t):(e-=this.p_29.getNumParameters())<this.p_30.getNumParameters()?this.p_30.constrainParameterValue(e,t):(e-=this.p_30.getNumParameters())<this.p_31.getNumParameters()?this.p_31.constrainParameterValue(e,t):(e-=this.p_31.getNumParameters())<this.p_32.getNumParameters()?this.p_32.constrainParameterValue(e,t):(e-=this.p_32.getNumParameters())<this.p_33.getNumParameters()?this.p_33.constrainParameterValue(e,t):(e-=this.p_33.getNumParameters())<this.p_34.getNumParameters()?this.p_34.constrainParameterValue(e,t):(e-=this.p_34.getNumParameters())<this.p_35.getNumParameters()?this.p_35.constrainParameterValue(e,t):(e-=this.p_35.getNumParameters())<this.p_36.getNumParameters()?this.p_36.constrainParameterValue(e,t):(e-=this.p_36.getNumParameters())<this.p_37.getNumParameters()?this.p_37.constrainParameterValue(e,t):(e-=this.p_37.getNumParameters())<this.p_38.getNumParameters()?this.p_38.constrainParameterValue(e,t):(e-=this.p_38.getNumParameters())<this.p_39.getNumParameters()?this.p_39.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm1_freq\"):this.inport_17_value_number_set(a);break;case TAG(\"fm1_c1ratio\"):this.inport_18_value_number_set(a);break;case TAG(\"fm1_c2ratio\"):this.inport_19_value_number_set(a);break;case TAG(\"fm1_c3ratio\"):this.inport_20_value_number_set(a);break;case TAG(\"fm1_3to1\"):this.inport_21_value_number_set(a);break;case TAG(\"fm1_2to1\"):this.inport_22_value_number_set(a);break;case TAG(\"fm1_3to2\"):this.inport_23_value_number_set(a);break;case TAG(\"fm1_c1release\"):this.inport_24_value_number_set(a);break;case TAG(\"fm1_c2release\"):this.inport_25_value_number_set(a);break;case TAG(\"fm1_c3release\"):this.inport_26_value_number_set(a);break;case TAG(\"fm1_op1gain\"):this.inport_27_value_number_set(a);break;case TAG(\"fm1_op2gain\"):this.inport_28_value_number_set(a);break;case TAG(\"fm1_op3gain\"):this.inport_29_value_number_set(a);break;case TAG(\"fm1_gain\"):this.inport_30_value_number_set(a)}this.p_26.processNumMessage(e,t,s,a),this.p_27.processNumMessage(e,t,s,a),this.p_28.processNumMessage(e,t,s,a),this.p_29.processNumMessage(e,t,s,a),this.p_30.processNumMessage(e,t,s,a),this.p_31.processNumMessage(e,t,s,a),this.p_32.processNumMessage(e,t,s,a),this.p_33.processNumMessage(e,t,s,a),this.p_34.processNumMessage(e,t,s,a),this.p_35.processNumMessage(e,t,s,a),this.p_36.processNumMessage(e,t,s,a),this.p_37.processNumMessage(e,t,s,a),this.p_38.processNumMessage(e,t,s,a),this.p_39.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm1_freq\"):this.inport_17_value_list_set(a);break;case TAG(\"fm1_c1ratio\"):this.inport_18_value_list_set(a);break;case TAG(\"fm1_c2ratio\"):this.inport_19_value_list_set(a);break;case TAG(\"fm1_c3ratio\"):this.inport_20_value_list_set(a);break;case TAG(\"fm1_3to1\"):this.inport_21_value_list_set(a);break;case TAG(\"fm1_2to1\"):this.inport_22_value_list_set(a);break;case TAG(\"fm1_3to2\"):this.inport_23_value_list_set(a);break;case TAG(\"fm1_c1release\"):this.inport_24_value_list_set(a);break;case TAG(\"fm1_c2release\"):this.inport_25_value_list_set(a);break;case TAG(\"fm1_c3release\"):this.inport_26_value_list_set(a);break;case TAG(\"fm1_op1gain\"):this.inport_27_value_list_set(a);break;case TAG(\"fm1_op2gain\"):this.inport_28_value_list_set(a);break;case TAG(\"fm1_op3gain\"):this.inport_29_value_list_set(a);break;case TAG(\"fm1_gain\"):this.inport_30_value_list_set(a)}this.p_26.processListMessage(e,t,s,a),this.p_27.processListMessage(e,t,s,a),this.p_28.processListMessage(e,t,s,a),this.p_29.processListMessage(e,t,s,a),this.p_30.processListMessage(e,t,s,a),this.p_31.processListMessage(e,t,s,a),this.p_32.processListMessage(e,t,s,a),this.p_33.processListMessage(e,t,s,a),this.p_34.processListMessage(e,t,s,a),this.p_35.processListMessage(e,t,s,a),this.p_36.processListMessage(e,t,s,a),this.p_37.processListMessage(e,t,s,a),this.p_38.processListMessage(e,t,s,a),this.p_39.processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"fm1_freq\"):this.inport_17_value_bang_bang();break;case TAG(\"fm1_c1ratio\"):this.inport_18_value_bang_bang();break;case TAG(\"fm1_c2ratio\"):this.inport_19_value_bang_bang();break;case TAG(\"fm1_c3ratio\"):this.inport_20_value_bang_bang();break;case TAG(\"fm1_3to1\"):this.inport_21_value_bang_bang();break;case TAG(\"fm1_2to1\"):this.inport_22_value_bang_bang();break;case TAG(\"fm1_3to2\"):this.inport_23_value_bang_bang();break;case TAG(\"fm1_c1release\"):this.inport_24_value_bang_bang();break;case TAG(\"fm1_c2release\"):this.inport_25_value_bang_bang();break;case TAG(\"fm1_c3release\"):this.inport_26_value_bang_bang();break;case TAG(\"fm1_op1gain\"):this.inport_27_value_bang_bang();break;case TAG(\"fm1_op2gain\"):this.inport_28_value_bang_bang();break;case TAG(\"fm1_op3gain\"):this.inport_29_value_bang_bang();break;case TAG(\"fm1_gain\"):this.inport_30_value_bang_bang()}this.p_26.processBangMessage(e,t,s),this.p_27.processBangMessage(e,t,s),this.p_28.processBangMessage(e,t,s),this.p_29.processBangMessage(e,t,s),this.p_30.processBangMessage(e,t,s),this.p_31.processBangMessage(e,t,s),this.p_32.processBangMessage(e,t,s),this.p_33.processBangMessage(e,t,s),this.p_34.processBangMessage(e,t,s),this.p_35.processBangMessage(e,t,s),this.p_36.processBangMessage(e,t,s),this.p_37.processBangMessage(e,t,s),this.p_38.processBangMessage(e,t,s),this.p_39.processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"fm1_freq\"):return\"fm1_freq\";case TAG(\"\"):return\"\";case TAG(\"fm1_c1ratio\"):return\"fm1_c1ratio\";case TAG(\"fm1_c2ratio\"):return\"fm1_c2ratio\";case TAG(\"fm1_c3ratio\"):return\"fm1_c3ratio\";case TAG(\"fm1_3to1\"):return\"fm1_3to1\";case TAG(\"fm1_2to1\"):return\"fm1_2to1\";case TAG(\"fm1_3to2\"):return\"fm1_3to2\";case TAG(\"fm1_c1release\"):return\"fm1_c1release\";case TAG(\"fm1_c2release\"):return\"fm1_c2release\";case TAG(\"fm1_c3release\"):return\"fm1_c3release\";case TAG(\"fm1_op1gain\"):return\"fm1_op1gain\";case TAG(\"fm1_op2gain\"):return\"fm1_op2gain\";case TAG(\"fm1_op3gain\"):return\"fm1_op3gain\";case TAG(\"fm1_gain\"):return\"fm1_gain\"}var t=this.p_26.resolveTag(e);if(t)return t;var s=this.p_27.resolveTag(e);if(s)return s;var a=this.p_28.resolveTag(e);if(a)return a;var r=this.p_29.resolveTag(e);if(r)return r;var _=this.p_30.resolveTag(e);if(_)return _;var i=this.p_31.resolveTag(e);if(i)return i;var n=this.p_32.resolveTag(e);if(n)return n;var u=this.p_33.resolveTag(e);if(u)return u;var o=this.p_34.resolveTag(e);if(o)return o;var p=this.p_35.resolveTag(e);if(p)return p;var m=this.p_36.resolveTag(e);if(m)return m;var h=this.p_37.resolveTag(e);if(h)return h;var l=this.p_38.resolveTag(e);if(l)return l;var c=this.p_39.resolveTag(e);return c||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_26.processDataViewUpdate(e,t),this.p_27.processDataViewUpdate(e,t),this.p_28.processDataViewUpdate(e,t),this.p_29.processDataViewUpdate(e,t),this.p_30.processDataViewUpdate(e,t),this.p_31.processDataViewUpdate(e,t),this.p_32.processDataViewUpdate(e,t),this.p_33.processDataViewUpdate(e,t),this.p_34.processDataViewUpdate(e,t),this.p_35.processDataViewUpdate(e,t),this.p_36.processDataViewUpdate(e,t),this.p_37.processDataViewUpdate(e,t),this.p_38.processDataViewUpdate(e,t),this.p_39.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_482{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.select_a1_s01_test1)&&(this.select_02_test1=e.select_a1_s01_test1),containsValue(e.select_a1_s01_test2)&&(this.select_02_test2=e.select_a1_s01_test2),containsValue(e.expr_s01_in1)&&(this.expr_141_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_141_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_141_out1=e.expr_s01_out1),containsValue(e.listchange_a1_s01_input)&&(this.listchange_01_input=e.listchange_a1_s01_input),containsValue(e.listchange_a1_s01_compare)&&(this.listchange_01_compare=e.listchange_a1_s01_compare),containsValue(e.p_s03_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s03_audioProcessSampleCount),containsValue(e.p_s03_zeroBuffer)&&(this.zeroBuffer=e.p_s03_zeroBuffer),containsValue(e.p_s03_dummyBuffer)&&(this.dummyBuffer=e.p_s03_dummyBuffer),containsValue(e.p_s03_vs)&&(this.vs=e.p_s03_vs),containsValue(e.p_s03_maxvs)&&(this.maxvs=e.p_s03_maxvs),containsValue(e.p_s03_sr)&&(this.sr=e.p_s03_sr),containsValue(e.p_s03_invsr)&&(this.invsr=e.p_s03_invsr),containsValue(e.p_s03_noteNumber)&&(this.noteNumber=e.p_s03_noteNumber),containsValue(e.p_s03_isMuted)&&(this.isMuted=e.p_s03_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_483{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.onebang_02_allow=0,this.counter_17_phase=!0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s01_in1)&&(this.expr_142_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_142_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_142_out1=e.expr_s01_out1),containsValue(e.gate_s01_onoff)&&(this.gate_16_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_16_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_16_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_16_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_16_out2_list=e.gate_s01_out2_list),containsValue(e.expr_s02_in1)&&(this.expr_143_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_143_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_143_out1=e.expr_s02_out1),containsValue(e.receive_a1_s01_output_number)&&(this.receive_11_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_11_output_list=e.receive_a1_s01_output_list),containsValue(e.onebang_s01_initial)&&(this.onebang_02_initial=e.onebang_s01_initial),containsValue(e.select_a1_s01_test1)&&(this.select_03_test1=e.select_a1_s01_test1),containsValue(e.counter_s01_carryflag)&&(this.counter_17_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_17_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_17_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_17_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_17_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_17_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_17_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_17_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_17_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_17_minimum=e.counter_s01_minimum),containsValue(e.p_s02_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s02_audioProcessSampleCount),containsValue(e.p_s02_zeroBuffer)&&(this.zeroBuffer=e.p_s02_zeroBuffer),containsValue(e.p_s02_dummyBuffer)&&(this.dummyBuffer=e.p_s02_dummyBuffer),containsValue(e.p_s02_vs)&&(this.vs=e.p_s02_vs),containsValue(e.p_s02_maxvs)&&(this.maxvs=e.p_s02_maxvs),containsValue(e.p_s02_sr)&&(this.sr=e.p_s02_sr),containsValue(e.p_s02_invsr)&&(this.invsr=e.p_s02_invsr),containsValue(e.onebang_s01_allow)&&(this.onebang_02_allow=e.onebang_s01_allow),containsValue(e.counter_s01_count)&&(this.counter_17_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_17_phase=e.counter_s01_phase),containsValue(e.p_s02_noteNumber)&&(this.noteNumber=e.p_s02_noteNumber),containsValue(e.p_s02_isMuted)&&(this.isMuted=e.p_s02_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm2_listener\"):this.inport_31_value_number_set(a)}}processListMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm2_listener\"):this.inport_31_value_list_set(a)}}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"fm2_listener\"):this.inport_31_value_bang_bang()}}resolveTag(e){switch(e){case TAG(\"fm2_listener\"):return\"fm2_listener\";case TAG(\"\"):return\"\"}return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_484{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.switchobj_a1_s01_onoff)&&(this.switchobj_05_onoff=e.switchobj_a1_s01_onoff),containsValue(e.receive_a1_s03_output_number)&&(this.receive_12_output_number=e.receive_a1_s03_output_number),containsValue(e.receive_a1_s03_output_list)&&(this.receive_12_output_list=e.receive_a1_s03_output_list),containsValue(e.receive_a1_s02_output_number)&&(this.receive_13_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_13_output_list=e.receive_a1_s02_output_list),containsValue(e.receive_a1_s01_output_number)&&(this.receive_14_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_14_output_list=e.receive_a1_s01_output_list),containsValue(e.p_s08_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s08_audioProcessSampleCount),containsValue(e.p_s08_zeroBuffer)&&(this.zeroBuffer=e.p_s08_zeroBuffer),containsValue(e.p_s08_dummyBuffer)&&(this.dummyBuffer=e.p_s08_dummyBuffer),containsValue(e.p_s08_vs)&&(this.vs=e.p_s08_vs),containsValue(e.p_s08_maxvs)&&(this.maxvs=e.p_s08_maxvs),containsValue(e.p_s08_sr)&&(this.sr=e.p_s08_sr),containsValue(e.p_s08_invsr)&&(this.invsr=e.p_s08_invsr),containsValue(e.p_s08_noteNumber)&&(this.noteNumber=e.p_s08_noteNumber),containsValue(e.p_s08_isMuted)&&(this.isMuted=e.p_s08_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_434{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(4),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.phasor_04_sigbuf=0,this.phasor_04_setupDone=!1,this.ip_10_sigbuf=0,this.ip_10_setupDone=!1,this.ip_11_sigbuf=0,this.ip_11_setupDone=!1,this.onepole_tilde_04_needsUpdate=!1,this.onepole_tilde_04_setupDone=!1,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 2}getNumOutputChannels(){return 2}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e}setNoteNumber(e){this.noteNumber=e}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.dspexpr_a1_s01_in1)&&(this.dspexpr_24_in1=e.dspexpr_a1_s01_in1),containsValue(e.phasor_a1_s01_freq)&&(this.phasor_04_freq=e.phasor_a1_s01_freq),containsValue(e.dspexpr_a1_s02_in1)&&(this.dspexpr_25_in1=e.dspexpr_a1_s02_in1),containsValue(e.dspexpr_a1_s02_in2)&&(this.dspexpr_25_in2=e.dspexpr_a1_s02_in2),containsValue(e.dspexpr_a1_s03_in1)&&(this.dspexpr_26_in1=e.dspexpr_a1_s03_in1),containsValue(e.dspexpr_a1_s03_in2)&&(this.dspexpr_26_in2=e.dspexpr_a1_s03_in2),containsValue(e.dspexpr_a1_s04_in1)&&(this.dspexpr_27_in1=e.dspexpr_a1_s04_in1),containsValue(e.dspexpr_a1_s04_in2)&&(this.dspexpr_27_in2=e.dspexpr_a1_s04_in2),containsValue(e.ip_a1_s01_value)&&(this.ip_10_value=e.ip_a1_s01_value),containsValue(e.ip_a1_s01_impulse)&&(this.ip_10_impulse=e.ip_a1_s01_impulse),containsValue(e.dspexpr_a1_s05_in1)&&(this.dspexpr_28_in1=e.dspexpr_a1_s05_in1),containsValue(e.dspexpr_a1_s05_in2)&&(this.dspexpr_28_in2=e.dspexpr_a1_s05_in2),containsValue(e.dspexpr_a1_s06_in1)&&(this.dspexpr_29_in1=e.dspexpr_a1_s06_in1),containsValue(e.dspexpr_a1_s06_in2)&&(this.dspexpr_29_in2=e.dspexpr_a1_s06_in2),containsValue(e.floatnum_a2_s03_input_number)&&(this.floatnum_10_input_number=e.floatnum_a2_s03_input_number),containsValue(e.floatnum_a2_s03_value)&&(this.floatnum_10_value=e.floatnum_a2_s03_value),containsValue(e.ip_a1_s02_value)&&(this.ip_11_value=e.ip_a1_s02_value),containsValue(e.ip_a1_s02_impulse)&&(this.ip_11_impulse=e.ip_a1_s02_impulse),containsValue(e.floatnum_a2_s01_input_number)&&(this.floatnum_11_input_number=e.floatnum_a2_s01_input_number),containsValue(e.floatnum_a2_s01_value)&&(this.floatnum_11_value=e.floatnum_a2_s01_value),containsValue(e.line_a1_s01_segments)&&(this.line_06_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_06_time=e.line_a1_s01_time),containsValue(e.onepole_s01_x)&&(this.onepole_tilde_04_x=e.onepole_s01_x),containsValue(e.onepole_s01_freqInHz)&&(this.onepole_tilde_04_freqInHz=e.onepole_s01_freqInHz),containsValue(e.pack_a1_s01_in1)&&(this.pack_10_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_10_in2=e.pack_a1_s01_in2),containsValue(e.pack_a1_s01_in3)&&(this.pack_10_in3=e.pack_a1_s01_in3),containsValue(e.pack_a1_s01_in4)&&(this.pack_10_in4=e.pack_a1_s01_in4),containsValue(e.pack_a1_s01_in5)&&(this.pack_10_in5=e.pack_a1_s01_in5),containsValue(e.pack_a1_s01_in6)&&(this.pack_10_in6=e.pack_a1_s01_in6),containsValue(e.curve_a1_s01_dest)&&(this.curve_04_dest=e.curve_a1_s01_dest),containsValue(e.curve_a1_s01_time)&&(this.curve_04_time=e.curve_a1_s01_time),containsValue(e.curve_a1_s01_curve)&&(this.curve_04_curve=e.curve_a1_s01_curve),containsValue(e.floatnum_a2_s02_input_number)&&(this.floatnum_12_input_number=e.floatnum_a2_s02_input_number),containsValue(e.floatnum_a2_s02_value)&&(this.floatnum_12_value=e.floatnum_a2_s02_value),containsValue(e.p_s02_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s02_audioProcessSampleCount),containsValue(e.p_s02_zeroBuffer)&&(this.zeroBuffer=e.p_s02_zeroBuffer),containsValue(e.p_s02_dummyBuffer)&&(this.dummyBuffer=e.p_s02_dummyBuffer),containsValue(e.p_s02_vs)&&(this.vs=e.p_s02_vs),containsValue(e.p_s02_maxvs)&&(this.maxvs=e.p_s02_maxvs),containsValue(e.p_s02_sr)&&(this.sr=e.p_s02_sr),containsValue(e.p_s02_invsr)&&(this.invsr=e.p_s02_invsr),containsValue(e.phasor_a1_s01_sigbuf)&&(this.phasor_04_sigbuf=e.phasor_a1_s01_sigbuf),containsValue(e.phasor_a1_s01_lastLockedPhase)&&(this.phasor_04_lastLockedPhase=e.phasor_a1_s01_lastLockedPhase),containsValue(e.phasor_a1_s01_conv)&&(this.phasor_04_conv=e.phasor_a1_s01_conv),containsValue(e.phasor_a1_s01_ph_currentPhase)&&(this.phasor_04_ph_currentPhase=e.phasor_a1_s01_ph_currentPhase),containsValue(e.phasor_a1_s01_ph_conv)&&(this.phasor_04_ph_conv=e.phasor_a1_s01_ph_conv),containsValue(e.phasor_a1_s01_setupDone)&&(this.phasor_04_setupDone=e.phasor_a1_s01_setupDone),containsValue(e.ip_a1_s01_lastValue)&&(this.ip_10_lastValue=e.ip_a1_s01_lastValue),containsValue(e.ip_a1_s01_lastIndex)&&(this.ip_10_lastIndex=e.ip_a1_s01_lastIndex),containsValue(e.ip_a1_s01_resetCount)&&(this.ip_10_resetCount=e.ip_a1_s01_resetCount),containsValue(e.ip_a1_s01_sigbuf)&&(this.ip_10_sigbuf=e.ip_a1_s01_sigbuf),containsValue(e.ip_a1_s01_setupDone)&&(this.ip_10_setupDone=e.ip_a1_s01_setupDone),containsValue(e.floatnum_a2_s03_stored)&&(this.floatnum_10_stored=e.floatnum_a2_s03_stored),containsValue(e.ip_a1_s02_lastValue)&&(this.ip_11_lastValue=e.ip_a1_s02_lastValue),containsValue(e.ip_a1_s02_lastIndex)&&(this.ip_11_lastIndex=e.ip_a1_s02_lastIndex),containsValue(e.ip_a1_s02_resetCount)&&(this.ip_11_resetCount=e.ip_a1_s02_resetCount),containsValue(e.ip_a1_s02_sigbuf)&&(this.ip_11_sigbuf=e.ip_a1_s02_sigbuf),containsValue(e.ip_a1_s02_setupDone)&&(this.ip_11_setupDone=e.ip_a1_s02_setupDone),containsValue(e.floatnum_a2_s01_stored)&&(this.floatnum_11_stored=e.floatnum_a2_s01_stored),containsValue(e.line_a1_s01_activeRamps)&&(this.line_06_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_06_currentValue=e.line_a1_s01_currentValue),containsValue(e.onepole_s01_freq)&&(this.onepole_tilde_04_freq=e.onepole_s01_freq),containsValue(e.onepole_s01_needsUpdate)&&(this.onepole_tilde_04_needsUpdate=e.onepole_s01_needsUpdate),containsValue(e.onepole_s01_lastY)&&(this.onepole_tilde_04_lastY=e.onepole_s01_lastY),containsValue(e.onepole_s01_a0)&&(this.onepole_tilde_04_a0=e.onepole_s01_a0),containsValue(e.onepole_s01_b1)&&(this.onepole_tilde_04_b1=e.onepole_s01_b1),containsValue(e.onepole_s01_setupDone)&&(this.onepole_tilde_04_setupDone=e.onepole_s01_setupDone),containsValue(e.curve_a1_s01_activeRamps)&&(this.curve_04_activeRamps=e.curve_a1_s01_activeRamps),containsValue(e.curve_a1_s01_currentValue)&&(this.curve_04_currentValue=e.curve_a1_s01_currentValue),containsValue(e.curve_a1_s01_samplecount)&&(this.curve_04_samplecount=e.curve_a1_s01_samplecount),containsValue(e.curve_a1_s01_startvalue)&&(this.curve_04_startvalue=e.curve_a1_s01_startvalue),containsValue(e.floatnum_a2_s02_stored)&&(this.floatnum_12_stored=e.floatnum_a2_s02_stored),containsValue(e.p_s02_noteNumber)&&(this.noteNumber=e.p_s02_noteNumber),containsValue(e.p_s02_isMuted)&&(this.isMuted=e.p_s02_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 760652352:this.line_06_target_bang();break;case 861222235:this.curve_04_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_435{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e}setNoteNumber(e){this.noteNumber=e}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.listslice_a1_s02_input)&&(this.listslice_03_input=e.listslice_a1_s02_input),containsValue(e.listslice_a1_s02_size)&&(this.listslice_03_size=e.listslice_a1_s02_size),containsValue(e.line_a1_s01_segments)&&(this.line_07_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_07_time=e.line_a1_s01_time),containsValue(e.maximum_a1_s01_input)&&(this.maximum_05_input=e.maximum_a1_s01_input),containsValue(e.maximum_a1_s01_right)&&(this.maximum_05_right=e.maximum_a1_s01_right),containsValue(e.maximum_a1_s01_out)&&(this.maximum_05_out=e.maximum_a1_s01_out),containsValue(e.maximum_a1_s01_index)&&(this.maximum_05_index=e.maximum_a1_s01_index),containsValue(e.listslice_a1_s01_input)&&(this.listslice_04_input=e.listslice_a1_s01_input),containsValue(e.listslice_a1_s01_size)&&(this.listslice_04_size=e.listslice_a1_s01_size),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.line_a1_s01_activeRamps)&&(this.line_07_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_07_currentValue=e.line_a1_s01_currentValue),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 760652352:this.line_07_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_436{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(4),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.phasor_05_sigbuf=0,this.phasor_05_setupDone=!1,this.ip_12_sigbuf=0,this.ip_12_setupDone=!1,this.ip_13_sigbuf=0,this.ip_13_setupDone=!1,this.onepole_tilde_05_needsUpdate=!1,this.onepole_tilde_05_setupDone=!1,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 2}getNumOutputChannels(){return 2}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e}setNoteNumber(e){this.noteNumber=e}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.dspexpr_a1_s01_in1)&&(this.dspexpr_30_in1=e.dspexpr_a1_s01_in1),containsValue(e.phasor_a1_s01_freq)&&(this.phasor_05_freq=e.phasor_a1_s01_freq),containsValue(e.dspexpr_a1_s02_in1)&&(this.dspexpr_31_in1=e.dspexpr_a1_s02_in1),containsValue(e.dspexpr_a1_s02_in2)&&(this.dspexpr_31_in2=e.dspexpr_a1_s02_in2),containsValue(e.dspexpr_a1_s03_in1)&&(this.dspexpr_32_in1=e.dspexpr_a1_s03_in1),containsValue(e.dspexpr_a1_s03_in2)&&(this.dspexpr_32_in2=e.dspexpr_a1_s03_in2),containsValue(e.dspexpr_a1_s04_in1)&&(this.dspexpr_33_in1=e.dspexpr_a1_s04_in1),containsValue(e.dspexpr_a1_s04_in2)&&(this.dspexpr_33_in2=e.dspexpr_a1_s04_in2),containsValue(e.ip_a1_s01_value)&&(this.ip_12_value=e.ip_a1_s01_value),containsValue(e.ip_a1_s01_impulse)&&(this.ip_12_impulse=e.ip_a1_s01_impulse),containsValue(e.dspexpr_a1_s05_in1)&&(this.dspexpr_34_in1=e.dspexpr_a1_s05_in1),containsValue(e.dspexpr_a1_s05_in2)&&(this.dspexpr_34_in2=e.dspexpr_a1_s05_in2),containsValue(e.dspexpr_a1_s06_in1)&&(this.dspexpr_35_in1=e.dspexpr_a1_s06_in1),containsValue(e.dspexpr_a1_s06_in2)&&(this.dspexpr_35_in2=e.dspexpr_a1_s06_in2),containsValue(e.floatnum_a2_s03_input_number)&&(this.floatnum_13_input_number=e.floatnum_a2_s03_input_number),containsValue(e.floatnum_a2_s03_value)&&(this.floatnum_13_value=e.floatnum_a2_s03_value),containsValue(e.ip_a1_s02_value)&&(this.ip_13_value=e.ip_a1_s02_value),containsValue(e.ip_a1_s02_impulse)&&(this.ip_13_impulse=e.ip_a1_s02_impulse),containsValue(e.floatnum_a2_s01_input_number)&&(this.floatnum_14_input_number=e.floatnum_a2_s01_input_number),containsValue(e.floatnum_a2_s01_value)&&(this.floatnum_14_value=e.floatnum_a2_s01_value),containsValue(e.line_a1_s01_segments)&&(this.line_08_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_08_time=e.line_a1_s01_time),containsValue(e.onepole_s01_x)&&(this.onepole_tilde_05_x=e.onepole_s01_x),containsValue(e.onepole_s01_freqInHz)&&(this.onepole_tilde_05_freqInHz=e.onepole_s01_freqInHz),containsValue(e.pack_a1_s01_in1)&&(this.pack_11_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_11_in2=e.pack_a1_s01_in2),containsValue(e.pack_a1_s01_in3)&&(this.pack_11_in3=e.pack_a1_s01_in3),containsValue(e.pack_a1_s01_in4)&&(this.pack_11_in4=e.pack_a1_s01_in4),containsValue(e.pack_a1_s01_in5)&&(this.pack_11_in5=e.pack_a1_s01_in5),containsValue(e.pack_a1_s01_in6)&&(this.pack_11_in6=e.pack_a1_s01_in6),containsValue(e.curve_a1_s01_dest)&&(this.curve_05_dest=e.curve_a1_s01_dest),containsValue(e.curve_a1_s01_time)&&(this.curve_05_time=e.curve_a1_s01_time),containsValue(e.curve_a1_s01_curve)&&(this.curve_05_curve=e.curve_a1_s01_curve),containsValue(e.floatnum_a2_s02_input_number)&&(this.floatnum_15_input_number=e.floatnum_a2_s02_input_number),containsValue(e.floatnum_a2_s02_value)&&(this.floatnum_15_value=e.floatnum_a2_s02_value),containsValue(e.p_s03_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s03_audioProcessSampleCount),containsValue(e.p_s03_zeroBuffer)&&(this.zeroBuffer=e.p_s03_zeroBuffer),containsValue(e.p_s03_dummyBuffer)&&(this.dummyBuffer=e.p_s03_dummyBuffer),containsValue(e.p_s03_vs)&&(this.vs=e.p_s03_vs),containsValue(e.p_s03_maxvs)&&(this.maxvs=e.p_s03_maxvs),containsValue(e.p_s03_sr)&&(this.sr=e.p_s03_sr),containsValue(e.p_s03_invsr)&&(this.invsr=e.p_s03_invsr),containsValue(e.phasor_a1_s01_sigbuf)&&(this.phasor_05_sigbuf=e.phasor_a1_s01_sigbuf),containsValue(e.phasor_a1_s01_lastLockedPhase)&&(this.phasor_05_lastLockedPhase=e.phasor_a1_s01_lastLockedPhase),containsValue(e.phasor_a1_s01_conv)&&(this.phasor_05_conv=e.phasor_a1_s01_conv),containsValue(e.phasor_a1_s01_ph_currentPhase)&&(this.phasor_05_ph_currentPhase=e.phasor_a1_s01_ph_currentPhase),containsValue(e.phasor_a1_s01_ph_conv)&&(this.phasor_05_ph_conv=e.phasor_a1_s01_ph_conv),containsValue(e.phasor_a1_s01_setupDone)&&(this.phasor_05_setupDone=e.phasor_a1_s01_setupDone),containsValue(e.ip_a1_s01_lastValue)&&(this.ip_12_lastValue=e.ip_a1_s01_lastValue),containsValue(e.ip_a1_s01_lastIndex)&&(this.ip_12_lastIndex=e.ip_a1_s01_lastIndex),containsValue(e.ip_a1_s01_resetCount)&&(this.ip_12_resetCount=e.ip_a1_s01_resetCount),containsValue(e.ip_a1_s01_sigbuf)&&(this.ip_12_sigbuf=e.ip_a1_s01_sigbuf),containsValue(e.ip_a1_s01_setupDone)&&(this.ip_12_setupDone=e.ip_a1_s01_setupDone),containsValue(e.floatnum_a2_s03_stored)&&(this.floatnum_13_stored=e.floatnum_a2_s03_stored),containsValue(e.ip_a1_s02_lastValue)&&(this.ip_13_lastValue=e.ip_a1_s02_lastValue),containsValue(e.ip_a1_s02_lastIndex)&&(this.ip_13_lastIndex=e.ip_a1_s02_lastIndex),containsValue(e.ip_a1_s02_resetCount)&&(this.ip_13_resetCount=e.ip_a1_s02_resetCount),containsValue(e.ip_a1_s02_sigbuf)&&(this.ip_13_sigbuf=e.ip_a1_s02_sigbuf),containsValue(e.ip_a1_s02_setupDone)&&(this.ip_13_setupDone=e.ip_a1_s02_setupDone),containsValue(e.floatnum_a2_s01_stored)&&(this.floatnum_14_stored=e.floatnum_a2_s01_stored),containsValue(e.line_a1_s01_activeRamps)&&(this.line_08_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_08_currentValue=e.line_a1_s01_currentValue),containsValue(e.onepole_s01_freq)&&(this.onepole_tilde_05_freq=e.onepole_s01_freq),containsValue(e.onepole_s01_needsUpdate)&&(this.onepole_tilde_05_needsUpdate=e.onepole_s01_needsUpdate),containsValue(e.onepole_s01_lastY)&&(this.onepole_tilde_05_lastY=e.onepole_s01_lastY),containsValue(e.onepole_s01_a0)&&(this.onepole_tilde_05_a0=e.onepole_s01_a0),containsValue(e.onepole_s01_b1)&&(this.onepole_tilde_05_b1=e.onepole_s01_b1),containsValue(e.onepole_s01_setupDone)&&(this.onepole_tilde_05_setupDone=e.onepole_s01_setupDone),containsValue(e.curve_a1_s01_activeRamps)&&(this.curve_05_activeRamps=e.curve_a1_s01_activeRamps),containsValue(e.curve_a1_s01_currentValue)&&(this.curve_05_currentValue=e.curve_a1_s01_currentValue),containsValue(e.curve_a1_s01_samplecount)&&(this.curve_05_samplecount=e.curve_a1_s01_samplecount),containsValue(e.curve_a1_s01_startvalue)&&(this.curve_05_startvalue=e.curve_a1_s01_startvalue),containsValue(e.floatnum_a2_s02_stored)&&(this.floatnum_15_stored=e.floatnum_a2_s02_stored),containsValue(e.p_s03_noteNumber)&&(this.noteNumber=e.p_s03_noteNumber),containsValue(e.p_s03_isMuted)&&(this.isMuted=e.p_s03_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 760652352:this.line_08_target_bang();break;case 861222235:this.curve_05_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_437{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(4),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.phasor_06_sigbuf=0,this.phasor_06_setupDone=!1,this.ip_14_sigbuf=0,this.ip_14_setupDone=!1,this.ip_15_sigbuf=0,this.ip_15_setupDone=!1,this.onepole_tilde_06_needsUpdate=!1,this.onepole_tilde_06_setupDone=!1,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 2}getNumOutputChannels(){return 2}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e}setNoteNumber(e){this.noteNumber=e}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.dspexpr_a1_s01_in1)&&(this.dspexpr_36_in1=e.dspexpr_a1_s01_in1),containsValue(e.phasor_a1_s01_freq)&&(this.phasor_06_freq=e.phasor_a1_s01_freq),containsValue(e.dspexpr_a1_s02_in1)&&(this.dspexpr_37_in1=e.dspexpr_a1_s02_in1),containsValue(e.dspexpr_a1_s02_in2)&&(this.dspexpr_37_in2=e.dspexpr_a1_s02_in2),containsValue(e.dspexpr_a1_s03_in1)&&(this.dspexpr_38_in1=e.dspexpr_a1_s03_in1),containsValue(e.dspexpr_a1_s03_in2)&&(this.dspexpr_38_in2=e.dspexpr_a1_s03_in2),containsValue(e.dspexpr_a1_s04_in1)&&(this.dspexpr_39_in1=e.dspexpr_a1_s04_in1),containsValue(e.dspexpr_a1_s04_in2)&&(this.dspexpr_39_in2=e.dspexpr_a1_s04_in2),containsValue(e.ip_a1_s01_value)&&(this.ip_14_value=e.ip_a1_s01_value),containsValue(e.ip_a1_s01_impulse)&&(this.ip_14_impulse=e.ip_a1_s01_impulse),containsValue(e.dspexpr_a1_s05_in1)&&(this.dspexpr_40_in1=e.dspexpr_a1_s05_in1),containsValue(e.dspexpr_a1_s05_in2)&&(this.dspexpr_40_in2=e.dspexpr_a1_s05_in2),containsValue(e.dspexpr_a1_s06_in1)&&(this.dspexpr_41_in1=e.dspexpr_a1_s06_in1),containsValue(e.dspexpr_a1_s06_in2)&&(this.dspexpr_41_in2=e.dspexpr_a1_s06_in2),containsValue(e.floatnum_a2_s03_input_number)&&(this.floatnum_16_input_number=e.floatnum_a2_s03_input_number),containsValue(e.floatnum_a2_s03_value)&&(this.floatnum_16_value=e.floatnum_a2_s03_value),containsValue(e.ip_a1_s02_value)&&(this.ip_15_value=e.ip_a1_s02_value),containsValue(e.ip_a1_s02_impulse)&&(this.ip_15_impulse=e.ip_a1_s02_impulse),containsValue(e.floatnum_a2_s01_input_number)&&(this.floatnum_17_input_number=e.floatnum_a2_s01_input_number),containsValue(e.floatnum_a2_s01_value)&&(this.floatnum_17_value=e.floatnum_a2_s01_value),containsValue(e.line_a1_s01_segments)&&(this.line_09_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_09_time=e.line_a1_s01_time),containsValue(e.onepole_s01_x)&&(this.onepole_tilde_06_x=e.onepole_s01_x),containsValue(e.onepole_s01_freqInHz)&&(this.onepole_tilde_06_freqInHz=e.onepole_s01_freqInHz),containsValue(e.pack_a1_s01_in1)&&(this.pack_12_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_12_in2=e.pack_a1_s01_in2),containsValue(e.pack_a1_s01_in3)&&(this.pack_12_in3=e.pack_a1_s01_in3),containsValue(e.pack_a1_s01_in4)&&(this.pack_12_in4=e.pack_a1_s01_in4),containsValue(e.pack_a1_s01_in5)&&(this.pack_12_in5=e.pack_a1_s01_in5),containsValue(e.pack_a1_s01_in6)&&(this.pack_12_in6=e.pack_a1_s01_in6),containsValue(e.curve_a1_s01_dest)&&(this.curve_06_dest=e.curve_a1_s01_dest),containsValue(e.curve_a1_s01_time)&&(this.curve_06_time=e.curve_a1_s01_time),containsValue(e.curve_a1_s01_curve)&&(this.curve_06_curve=e.curve_a1_s01_curve),containsValue(e.floatnum_a2_s02_input_number)&&(this.floatnum_18_input_number=e.floatnum_a2_s02_input_number),containsValue(e.floatnum_a2_s02_value)&&(this.floatnum_18_value=e.floatnum_a2_s02_value),containsValue(e.p_s04_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s04_audioProcessSampleCount),containsValue(e.p_s04_zeroBuffer)&&(this.zeroBuffer=e.p_s04_zeroBuffer),containsValue(e.p_s04_dummyBuffer)&&(this.dummyBuffer=e.p_s04_dummyBuffer),containsValue(e.p_s04_vs)&&(this.vs=e.p_s04_vs),containsValue(e.p_s04_maxvs)&&(this.maxvs=e.p_s04_maxvs),containsValue(e.p_s04_sr)&&(this.sr=e.p_s04_sr),containsValue(e.p_s04_invsr)&&(this.invsr=e.p_s04_invsr),containsValue(e.phasor_a1_s01_sigbuf)&&(this.phasor_06_sigbuf=e.phasor_a1_s01_sigbuf),containsValue(e.phasor_a1_s01_lastLockedPhase)&&(this.phasor_06_lastLockedPhase=e.phasor_a1_s01_lastLockedPhase),containsValue(e.phasor_a1_s01_conv)&&(this.phasor_06_conv=e.phasor_a1_s01_conv),containsValue(e.phasor_a1_s01_ph_currentPhase)&&(this.phasor_06_ph_currentPhase=e.phasor_a1_s01_ph_currentPhase),containsValue(e.phasor_a1_s01_ph_conv)&&(this.phasor_06_ph_conv=e.phasor_a1_s01_ph_conv),containsValue(e.phasor_a1_s01_setupDone)&&(this.phasor_06_setupDone=e.phasor_a1_s01_setupDone),containsValue(e.ip_a1_s01_lastValue)&&(this.ip_14_lastValue=e.ip_a1_s01_lastValue),containsValue(e.ip_a1_s01_lastIndex)&&(this.ip_14_lastIndex=e.ip_a1_s01_lastIndex),containsValue(e.ip_a1_s01_resetCount)&&(this.ip_14_resetCount=e.ip_a1_s01_resetCount),containsValue(e.ip_a1_s01_sigbuf)&&(this.ip_14_sigbuf=e.ip_a1_s01_sigbuf),containsValue(e.ip_a1_s01_setupDone)&&(this.ip_14_setupDone=e.ip_a1_s01_setupDone),containsValue(e.floatnum_a2_s03_stored)&&(this.floatnum_16_stored=e.floatnum_a2_s03_stored),containsValue(e.ip_a1_s02_lastValue)&&(this.ip_15_lastValue=e.ip_a1_s02_lastValue),containsValue(e.ip_a1_s02_lastIndex)&&(this.ip_15_lastIndex=e.ip_a1_s02_lastIndex),containsValue(e.ip_a1_s02_resetCount)&&(this.ip_15_resetCount=e.ip_a1_s02_resetCount),containsValue(e.ip_a1_s02_sigbuf)&&(this.ip_15_sigbuf=e.ip_a1_s02_sigbuf),containsValue(e.ip_a1_s02_setupDone)&&(this.ip_15_setupDone=e.ip_a1_s02_setupDone),containsValue(e.floatnum_a2_s01_stored)&&(this.floatnum_17_stored=e.floatnum_a2_s01_stored),containsValue(e.line_a1_s01_activeRamps)&&(this.line_09_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_09_currentValue=e.line_a1_s01_currentValue),containsValue(e.onepole_s01_freq)&&(this.onepole_tilde_06_freq=e.onepole_s01_freq),containsValue(e.onepole_s01_needsUpdate)&&(this.onepole_tilde_06_needsUpdate=e.onepole_s01_needsUpdate),containsValue(e.onepole_s01_lastY)&&(this.onepole_tilde_06_lastY=e.onepole_s01_lastY),containsValue(e.onepole_s01_a0)&&(this.onepole_tilde_06_a0=e.onepole_s01_a0),containsValue(e.onepole_s01_b1)&&(this.onepole_tilde_06_b1=e.onepole_s01_b1),containsValue(e.onepole_s01_setupDone)&&(this.onepole_tilde_06_setupDone=e.onepole_s01_setupDone),containsValue(e.curve_a1_s01_activeRamps)&&(this.curve_06_activeRamps=e.curve_a1_s01_activeRamps),containsValue(e.curve_a1_s01_currentValue)&&(this.curve_06_currentValue=e.curve_a1_s01_currentValue),containsValue(e.curve_a1_s01_samplecount)&&(this.curve_06_samplecount=e.curve_a1_s01_samplecount),containsValue(e.curve_a1_s01_startvalue)&&(this.curve_06_startvalue=e.curve_a1_s01_startvalue),containsValue(e.floatnum_a2_s02_stored)&&(this.floatnum_18_stored=e.floatnum_a2_s02_stored),containsValue(e.p_s04_noteNumber)&&(this.noteNumber=e.p_s04_noteNumber),containsValue(e.p_s04_isMuted)&&(this.isMuted=e.p_s04_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 760652352:this.line_09_target_bang();break;case 861222235:this.curve_06_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_438{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(7),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.ip_16_sigbuf=0,this.ip_16_setupDone=!1,this.ip_17_sigbuf=0,this.ip_17_setupDone=!1,this.ip_18_sigbuf=0,this.ip_18_setupDone=!1,this.voiceIndex=0,this.parameterOffset=0,this.p_40=new Array,this.p_41=new Array,this.p_42=new Array,this.p_43=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 1}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e,this.p_40.setVoiceIndex(e),this.p_41.setVoiceIndex(e),this.p_42.setVoiceIndex(e),this.p_43.setVoiceIndex(e)}setNoteNumber(e){this.noteNumber=e,this.p_40.setNoteNumber(e),this.p_41.setNoteNumber(e),this.p_42.setNoteNumber(e),this.p_43.setNoteNumber(e)}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.listindex_a1_s05_input)&&(this.listindex_17_input=e.listindex_a1_s05_input),containsValue(e.listindex_a1_s05_index)&&(this.listindex_17_index=e.listindex_a1_s05_index),containsValue(e.p_s02_target)&&(this.p_40_target=e.p_s02_target),containsValue(e.dspexpr_a1_s01_in1)&&(this.dspexpr_42_in1=e.dspexpr_a1_s01_in1),containsValue(e.dspexpr_a1_s01_in2)&&(this.dspexpr_42_in2=e.dspexpr_a1_s01_in2),containsValue(e.dspexpr_a1_s05_in1)&&(this.dspexpr_43_in1=e.dspexpr_a1_s05_in1),containsValue(e.dspexpr_a1_s05_in2)&&(this.dspexpr_43_in2=e.dspexpr_a1_s05_in2),containsValue(e.listindex_a1_s04_input)&&(this.listindex_18_input=e.listindex_a1_s04_input),containsValue(e.listindex_a1_s04_index)&&(this.listindex_18_index=e.listindex_a1_s04_index),containsValue(e.line_a1_s01_segments)&&(this.line_10_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_10_time=e.line_a1_s01_time),containsValue(e.voice_s01_mute_number)&&(this.voice_02_mute_number=e.voice_s01_mute_number),containsValue(e.listindex_a1_s06_input)&&(this.listindex_19_input=e.listindex_a1_s06_input),containsValue(e.listindex_a1_s06_index)&&(this.listindex_19_index=e.listindex_a1_s06_index),containsValue(e.p_s01_target)&&(this.p_41_target=e.p_s01_target),containsValue(e.loadmess_s01_message)&&(this.loadmess_03_message=e.loadmess_s01_message),containsValue(e.listindex_a1_s08_input)&&(this.listindex_20_input=e.listindex_a1_s08_input),containsValue(e.listindex_a1_s08_index)&&(this.listindex_20_index=e.listindex_a1_s08_index),containsValue(e.listindex_a1_s07_input)&&(this.listindex_21_input=e.listindex_a1_s07_input),containsValue(e.listindex_a1_s07_index)&&(this.listindex_21_index=e.listindex_a1_s07_index),containsValue(e.dspexpr_a1_s04_in1)&&(this.dspexpr_44_in1=e.dspexpr_a1_s04_in1),containsValue(e.dspexpr_a1_s04_in2)&&(this.dspexpr_44_in2=e.dspexpr_a1_s04_in2),containsValue(e.listindex_a1_s03_input)&&(this.listindex_22_input=e.listindex_a1_s03_input),containsValue(e.listindex_a1_s03_index)&&(this.listindex_22_index=e.listindex_a1_s03_index),containsValue(e.ip_a1_s01_value)&&(this.ip_16_value=e.ip_a1_s01_value),containsValue(e.ip_a1_s01_impulse)&&(this.ip_16_impulse=e.ip_a1_s01_impulse),containsValue(e.dspexpr_a1_s02_in1)&&(this.dspexpr_45_in1=e.dspexpr_a1_s02_in1),containsValue(e.dspexpr_a1_s02_in2)&&(this.dspexpr_45_in2=e.dspexpr_a1_s02_in2),containsValue(e.listindex_a1_s02_input)&&(this.listindex_23_input=e.listindex_a1_s02_input),containsValue(e.listindex_a1_s02_index)&&(this.listindex_23_index=e.listindex_a1_s02_index),containsValue(e.ip_a1_s02_value)&&(this.ip_17_value=e.ip_a1_s02_value),containsValue(e.ip_a1_s02_impulse)&&(this.ip_17_impulse=e.ip_a1_s02_impulse),containsValue(e.listindex_a1_s09_input)&&(this.listindex_24_input=e.listindex_a1_s09_input),containsValue(e.listindex_a1_s09_index)&&(this.listindex_24_index=e.listindex_a1_s09_index),containsValue(e.p_s03_target)&&(this.p_42_target=e.p_s03_target),containsValue(e.listindex_a1_s10_input)&&(this.listindex_25_input=e.listindex_a1_s10_input),containsValue(e.listindex_a1_s10_index)&&(this.listindex_25_index=e.listindex_a1_s10_index),containsValue(e.listindex_a1_s12_input)&&(this.listindex_26_input=e.listindex_a1_s12_input),containsValue(e.listindex_a1_s12_index)&&(this.listindex_26_index=e.listindex_a1_s12_index),containsValue(e.listindex_a1_s11_input)&&(this.listindex_27_input=e.listindex_a1_s11_input),containsValue(e.listindex_a1_s11_index)&&(this.listindex_27_index=e.listindex_a1_s11_index),containsValue(e.dspexpr_a1_s03_in1)&&(this.dspexpr_46_in1=e.dspexpr_a1_s03_in1),containsValue(e.dspexpr_a1_s03_in2)&&(this.dspexpr_46_in2=e.dspexpr_a1_s03_in2),containsValue(e.listindex_a1_s01_input)&&(this.listindex_28_input=e.listindex_a1_s01_input),containsValue(e.listindex_a1_s01_index)&&(this.listindex_28_index=e.listindex_a1_s01_index),containsValue(e.ip_a1_s03_value)&&(this.ip_18_value=e.ip_a1_s03_value),containsValue(e.ip_a1_s03_impulse)&&(this.ip_18_impulse=e.ip_a1_s03_impulse),containsValue(e.listindex_a1_s13_input)&&(this.listindex_29_input=e.listindex_a1_s13_input),containsValue(e.listindex_a1_s13_index)&&(this.listindex_29_index=e.listindex_a1_s13_index),containsValue(e.p_s04_target)&&(this.p_43_target=e.p_s04_target),containsValue(e.listindex_a1_s14_input)&&(this.listindex_30_input=e.listindex_a1_s14_input),containsValue(e.listindex_a1_s14_index)&&(this.listindex_30_index=e.listindex_a1_s14_index),containsValue(e.listindex_a1_s16_input)&&(this.listindex_31_input=e.listindex_a1_s16_input),containsValue(e.listindex_a1_s16_index)&&(this.listindex_31_index=e.listindex_a1_s16_index),containsValue(e.listindex_a1_s15_input)&&(this.listindex_32_input=e.listindex_a1_s15_input),containsValue(e.listindex_a1_s15_index)&&(this.listindex_32_index=e.listindex_a1_s15_index),containsValue(e.p_s01p_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01p_audioProcessSampleCount),containsValue(e.p_s01p_zeroBuffer)&&(this.zeroBuffer=e.p_s01p_zeroBuffer),containsValue(e.p_s01p_dummyBuffer)&&(this.dummyBuffer=e.p_s01p_dummyBuffer),containsValue(e.p_s01p_vs)&&(this.vs=e.p_s01p_vs),containsValue(e.p_s01p_maxvs)&&(this.maxvs=e.p_s01p_maxvs),containsValue(e.p_s01p_sr)&&(this.sr=e.p_s01p_sr),containsValue(e.p_s01p_invsr)&&(this.invsr=e.p_s01p_invsr),containsValue(e.line_a1_s01_activeRamps)&&(this.line_10_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_10_currentValue=e.line_a1_s01_currentValue),containsValue(e.ip_a1_s01_lastValue)&&(this.ip_16_lastValue=e.ip_a1_s01_lastValue),containsValue(e.ip_a1_s01_lastIndex)&&(this.ip_16_lastIndex=e.ip_a1_s01_lastIndex),containsValue(e.ip_a1_s01_resetCount)&&(this.ip_16_resetCount=e.ip_a1_s01_resetCount),containsValue(e.ip_a1_s01_sigbuf)&&(this.ip_16_sigbuf=e.ip_a1_s01_sigbuf),containsValue(e.ip_a1_s01_setupDone)&&(this.ip_16_setupDone=e.ip_a1_s01_setupDone),containsValue(e.ip_a1_s02_lastValue)&&(this.ip_17_lastValue=e.ip_a1_s02_lastValue),containsValue(e.ip_a1_s02_lastIndex)&&(this.ip_17_lastIndex=e.ip_a1_s02_lastIndex),containsValue(e.ip_a1_s02_resetCount)&&(this.ip_17_resetCount=e.ip_a1_s02_resetCount),containsValue(e.ip_a1_s02_sigbuf)&&(this.ip_17_sigbuf=e.ip_a1_s02_sigbuf),containsValue(e.ip_a1_s02_setupDone)&&(this.ip_17_setupDone=e.ip_a1_s02_setupDone),containsValue(e.ip_a1_s03_lastValue)&&(this.ip_18_lastValue=e.ip_a1_s03_lastValue),containsValue(e.ip_a1_s03_lastIndex)&&(this.ip_18_lastIndex=e.ip_a1_s03_lastIndex),containsValue(e.ip_a1_s03_resetCount)&&(this.ip_18_resetCount=e.ip_a1_s03_resetCount),containsValue(e.ip_a1_s03_sigbuf)&&(this.ip_18_sigbuf=e.ip_a1_s03_sigbuf),containsValue(e.ip_a1_s03_setupDone)&&(this.ip_18_setupDone=e.ip_a1_s03_setupDone),containsValue(e.p_s01p_noteNumber)&&(this.noteNumber=e.p_s01p_noteNumber),containsValue(e.p_s01p_isMuted)&&(this.isMuted=e.p_s01p_isMuted)),this.p_40=new RNBOSubpatcher_434,this.p_40.setEngineAndPatcher(this.getEngine(),this),this.p_40.initialize(getSubState(e,\"p_s02\")),this.p_40.setParameterOffset(this.getParameterOffset(this.p_40)),this.p_41=new RNBOSubpatcher_435,this.p_41.setEngineAndPatcher(this.getEngine(),this),this.p_41.initialize(getSubState(e,\"p_s01\")),this.p_41.setParameterOffset(this.getParameterOffset(this.p_41)),this.p_42=new RNBOSubpatcher_436,this.p_42.setEngineAndPatcher(this.getEngine(),this),this.p_42.initialize(getSubState(e,\"p_s03\")),this.p_42.setParameterOffset(this.getParameterOffset(this.p_42)),this.p_43=new RNBOSubpatcher_437,this.p_43.setEngineAndPatcher(this.getEngine(),this),this.p_43.initialize(getSubState(e,\"p_s04\")),this.p_43.setParameterOffset(this.getParameterOffset(this.p_43))}getPreset(e){this.p_40.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-79\")),this.p_41.getPreset(getSubState(getSubState(e,\"__sps\"),\"voice off\")),this.p_42.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-65\")),this.p_43.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-37\"))}processTempoEvent(e,t){this.updateTime(e),this.p_40.processTempoEvent(e,t),this.p_41.processTempoEvent(e,t),this.p_42.processTempoEvent(e,t),this.p_43.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_40.processTransportEvent(e,t),this.p_41.processTransportEvent(e,t),this.p_42.processTransportEvent(e,t),this.p_43.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_40.processBeatTimeEvent(e,t),this.p_41.processBeatTimeEvent(e,t),this.p_42.processBeatTimeEvent(e,t),this.p_43.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_40.processTimeSignatureEvent(e,t,s),this.p_41.processTimeSignatureEvent(e,t,s),this.p_42.processTimeSignatureEvent(e,t,s),this.p_43.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_40.getNumParameters()&&this.p_40.setParameterValue(e,t,s),(e-=this.p_40.getNumParameters())<this.p_41.getNumParameters()&&this.p_41.setParameterValue(e,t,s),(e-=this.p_41.getNumParameters())<this.p_42.getNumParameters()&&this.p_42.setParameterValue(e,t,s),(e-=this.p_42.getNumParameters())<this.p_43.getNumParameters()&&this.p_43.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_40.getNumParameters()?this.p_40.getParameterValue(e):(e-=this.p_40.getNumParameters())<this.p_41.getNumParameters()?this.p_41.getParameterValue(e):(e-=this.p_41.getNumParameters())<this.p_42.getNumParameters()?this.p_42.getParameterValue(e):(e-=this.p_42.getNumParameters())<this.p_43.getNumParameters()?this.p_43.getParameterValue(e):0}getPolyParameterValue(e,t){return e[0].getParameterValue(t)}setPolyParameterValue(e,t,s,a){for(var r=0;r<64;r++)e[r].setParameterValue(t,s,a)}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_40.getNumParameters()+this.p_41.getNumParameters()+this.p_42.getNumParameters()+this.p_43.getNumParameters()}getParameterName(e){return(e-=0)<this.p_40.getNumParameters()?this.p_40.getParameterName(e):(e-=this.p_40.getNumParameters())<this.p_41.getNumParameters()?this.p_41.getParameterName(e):(e-=this.p_41.getNumParameters())<this.p_42.getNumParameters()?this.p_42.getParameterName(e):(e-=this.p_42.getNumParameters())<this.p_43.getNumParameters()?this.p_43.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_40.getNumParameters()?this.p_40.getParameterId(e):(e-=this.p_40.getNumParameters())<this.p_41.getNumParameters()?this.p_41.getParameterId(e):(e-=this.p_41.getNumParameters())<this.p_42.getNumParameters()?this.p_42.getParameterId(e):(e-=this.p_42.getNumParameters())<this.p_43.getNumParameters()?this.p_43.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_40.getNumParameters()&&this.p_40.getParameterInfo(e,t),(e-=this.p_40.getNumParameters())<this.p_41.getNumParameters()&&this.p_41.getParameterInfo(e,t),(e-=this.p_41.getNumParameters())<this.p_42.getNumParameters()&&this.p_42.getParameterInfo(e,t),(e-=this.p_42.getNumParameters())<this.p_43.getNumParameters()&&this.p_43.getParameterInfo(e,t)}sendParameter(e){1==this.voiceIndex&&this.getPatcher().sendParameter(e+this.parameterOffset)}sendPolyParameter(e,t){this.getPatcher().sendParameter(e+this.parameterOffset+t-1)}getParameterOffset(e){return e==this.p_40?0:e==this.p_41?0+this.p_40.getNumParameters():e==this.p_42?0+this.p_40.getNumParameters()+this.p_41.getNumParameters():e==this.p_43?0+this.p_40.getNumParameters()+this.p_41.getNumParameters()+this.p_42.getNumParameters():0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_40.getNumParameters()?this.p_40.convertToNormalizedParameterValue(e,t):(e-=this.p_40.getNumParameters())<this.p_41.getNumParameters()?this.p_41.convertToNormalizedParameterValue(e,t):(e-=this.p_41.getNumParameters())<this.p_42.getNumParameters()?this.p_42.convertToNormalizedParameterValue(e,t):(e-=this.p_42.getNumParameters())<this.p_43.getNumParameters()?this.p_43.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_40.getNumParameters()?this.p_40.convertFromNormalizedParameterValue(e,t):(e-=this.p_40.getNumParameters())<this.p_41.getNumParameters()?this.p_41.convertFromNormalizedParameterValue(e,t):(e-=this.p_41.getNumParameters())<this.p_42.getNumParameters()?this.p_42.convertFromNormalizedParameterValue(e,t):(e-=this.p_42.getNumParameters())<this.p_43.getNumParameters()?this.p_43.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_40.getNumParameters()?this.p_40.constrainParameterValue(e,t):(e-=this.p_40.getNumParameters())<this.p_41.getNumParameters()?this.p_41.constrainParameterValue(e,t):(e-=this.p_41.getNumParameters())<this.p_42.getNumParameters()?this.p_42.constrainParameterValue(e,t):(e-=this.p_42.getNumParameters())<this.p_43.getNumParameters()?this.p_43.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 892732297:this.loadmess_03_startupbang_bang();break;case 760652352:this.line_10_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s),this.p_40.processNumMessage(e,t,s,a),this.p_41.processNumMessage(e,t,s,a),this.p_42.processNumMessage(e,t,s,a),this.p_43.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s),this.p_40.processListMessage(e,t,s,a),this.p_41.processListMessage(e,t,s,a),this.p_42.processListMessage(e,t,s,a),this.p_43.processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"startupbang\"):TAG(\"p_obj-156/p_obj-1/loadmess_obj-2\")==t&&this.loadmess_03_startupbang_bang()}this.p_40.processBangMessage(e,t,s),this.p_41.processBangMessage(e,t,s),this.p_42.processBangMessage(e,t,s),this.p_43.processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"p_obj-156/p_obj-1/loadmess_obj-2\"):return\"p_obj-156/p_obj-1/loadmess_obj-2\"}var t=this.p_40.resolveTag(e);if(t)return t;var s=this.p_41.resolveTag(e);if(s)return s;var a=this.p_42.resolveTag(e);if(a)return a;var r=this.p_43.resolveTag(e);return r||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_40.processDataViewUpdate(e,t),this.p_41.processDataViewUpdate(e,t),this.p_42.processDataViewUpdate(e,t),this.p_43.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_485{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_18_phase=!0,this.voiceIndex=0,this.parameterOffset=0,this.p_44=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 1}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.p_s01_target)&&(this.p_44_target=e.p_s01_target),containsValue(e.counter_s01_carryflag)&&(this.counter_18_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_18_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_18_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_18_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_18_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_18_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_18_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_18_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_18_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_18_minimum=e.counter_s01_minimum),containsValue(e.loadmess_s01_message)&&(this.loadmess_04_message=e.loadmess_s01_message),containsValue(e.p_s09_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s09_audioProcessSampleCount),containsValue(e.p_s09_zeroBuffer)&&(this.zeroBuffer=e.p_s09_zeroBuffer),containsValue(e.p_s09_dummyBuffer)&&(this.dummyBuffer=e.p_s09_dummyBuffer),containsValue(e.p_s09_vs)&&(this.vs=e.p_s09_vs),containsValue(e.p_s09_maxvs)&&(this.maxvs=e.p_s09_maxvs),containsValue(e.p_s09_sr)&&(this.sr=e.p_s09_sr),containsValue(e.p_s09_invsr)&&(this.invsr=e.p_s09_invsr),containsValue(e.counter_s01_count)&&(this.counter_18_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_18_phase=e.counter_s01_phase),containsValue(e.p_s09_noteNumber)&&(this.noteNumber=e.p_s09_noteNumber),containsValue(e.p_s09_isMuted)&&(this.isMuted=e.p_s09_isMuted));for(var t=0;t<64;t++)this.p_44[t]=new RNBOSubpatcher_438,this.p_44[t].setEngineAndPatcher(this.getEngine(),this),this.p_44[t].initialize(getSubStateAt(e,\"p_s01p\",t)),this.p_44[t].setParameterOffset(this.getParameterOffset(this.p_44[0])),this.p_44[t].setVoiceIndex(t+1)}getPreset(e){for(var t=0;t<64;t++)this.p_44[t].getPreset(getSubStateAt(getSubState(e,\"__sps\"),\"p_obj-1\",t))}processTempoEvent(e,t){this.updateTime(e);for(var s=0;s<64;s++)this.p_44[s].processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e);for(var s=0;s<64;s++)this.p_44[s].processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e);for(var s=0;s<64;s++)this.p_44[s].processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e);for(var a=0;a<64;a++)this.p_44[a].processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_44[0].getNumParameters()&&this.p_44[0].setPolyParameterValue(this.p_44,e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_44[0].getNumParameters()?this.p_44[0].getPolyParameterValue(this.p_44,e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_44[0].getNumParameters()}getParameterName(e){if((e-=0)<this.p_44[0].getNumParameters())for(var t=0;t<64;t++)return this.p_44[t].getParameterName(e);return\"bogus\"}getParameterId(e){if((e-=0)<this.p_44[0].getNumParameters())for(var t=0;t<64;t++)return this.p_44[t].getParameterId(e);return\"bogus\"}getParameterInfo(e,t){if((e-=0)<this.p_44[0].getNumParameters())for(var s=0;s<64;s++)this.p_44[s].getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return this.p_44[0],0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){if((e-=0)<this.p_44[0].getNumParameters())for(var s=0;s<64;s++)return this.p_44[s].convertToNormalizedParameterValue(e,t);return t}convertFromNormalizedParameterValue(e,t){if(t=t<0?0:t>1?1:t,(e-=0)<this.p_44[0].getNumParameters())for(var s=0;s<64;s++)return this.p_44[s].convertFromNormalizedParameterValue(e,t);return t}constrainParameterValue(e,t){if((e-=0)<this.p_44[0].getNumParameters())for(var s=0;s<64;s++)return this.p_44[s].constrainParameterValue(e,t);return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 892732297:this.loadmess_04_startupbang_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s);for(var r=0;r<64;r++)this.p_44[r].processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s);for(var r=0;r<64;r++)this.p_44[r].processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"startupbang\"):TAG(\"p_obj-156/loadmess_obj-6\")==t&&this.loadmess_04_startupbang_bang()}for(var a=0;a<64;a++)this.p_44[a].processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"p_obj-156/loadmess_obj-6\"):return\"p_obj-156/loadmess_obj-6\"}var t=this.p_44[0].resolveTag(e);return t||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t);for(var s=0;s<64;s++)this.p_44[s].processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_439{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_19_phase=!0,this.random_43_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_144_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_144_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_144_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_144_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_145_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_145_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_145_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_17_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_17_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_17_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_17_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_17_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_17_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_17_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_17_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_17_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_19_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_19_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_19_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_19_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_19_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_19_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_19_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_19_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_19_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_19_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_29_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_29_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_146_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_146_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_43_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_43_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_147_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_147_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_147_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_15_input=e.listlen_a1_s01_input),containsValue(e.p_s14_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s14_audioProcessSampleCount),containsValue(e.p_s14_zeroBuffer)&&(this.zeroBuffer=e.p_s14_zeroBuffer),containsValue(e.p_s14_dummyBuffer)&&(this.dummyBuffer=e.p_s14_dummyBuffer),containsValue(e.p_s14_vs)&&(this.vs=e.p_s14_vs),containsValue(e.p_s14_maxvs)&&(this.maxvs=e.p_s14_maxvs),containsValue(e.p_s14_sr)&&(this.sr=e.p_s14_sr),containsValue(e.p_s14_invsr)&&(this.invsr=e.p_s14_invsr),containsValue(e.counter_s01_count)&&(this.counter_19_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_19_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_43_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_43_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s14_noteNumber)&&(this.noteNumber=e.p_s14_noteNumber),containsValue(e.p_s14_isMuted)&&(this.isMuted=e.p_s14_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_440{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_20_phase=!0,this.random_44_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_148_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_148_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_148_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_148_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_149_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_149_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_149_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_18_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_18_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_18_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_18_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_18_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_18_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_18_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_18_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_18_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_20_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_20_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_20_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_20_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_20_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_20_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_20_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_20_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_20_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_20_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_30_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_30_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_150_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_150_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_44_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_44_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_151_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_151_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_151_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_16_input=e.listlen_a1_s01_input),containsValue(e.p_s13_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s13_audioProcessSampleCount),containsValue(e.p_s13_zeroBuffer)&&(this.zeroBuffer=e.p_s13_zeroBuffer),containsValue(e.p_s13_dummyBuffer)&&(this.dummyBuffer=e.p_s13_dummyBuffer),containsValue(e.p_s13_vs)&&(this.vs=e.p_s13_vs),containsValue(e.p_s13_maxvs)&&(this.maxvs=e.p_s13_maxvs),containsValue(e.p_s13_sr)&&(this.sr=e.p_s13_sr),containsValue(e.p_s13_invsr)&&(this.invsr=e.p_s13_invsr),containsValue(e.counter_s01_count)&&(this.counter_20_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_20_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_44_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_44_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s13_noteNumber)&&(this.noteNumber=e.p_s13_noteNumber),containsValue(e.p_s13_isMuted)&&(this.isMuted=e.p_s13_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_441{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_21_phase=!0,this.random_45_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_152_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_152_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_152_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_152_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_153_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_153_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_153_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_19_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_19_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_19_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_19_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_19_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_19_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_19_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_19_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_19_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_21_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_21_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_21_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_21_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_21_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_21_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_21_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_21_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_21_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_21_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_31_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_31_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_154_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_154_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_45_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_45_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_155_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_155_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_155_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_17_input=e.listlen_a1_s01_input),containsValue(e.p_s12_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s12_audioProcessSampleCount),containsValue(e.p_s12_zeroBuffer)&&(this.zeroBuffer=e.p_s12_zeroBuffer),containsValue(e.p_s12_dummyBuffer)&&(this.dummyBuffer=e.p_s12_dummyBuffer),containsValue(e.p_s12_vs)&&(this.vs=e.p_s12_vs),containsValue(e.p_s12_maxvs)&&(this.maxvs=e.p_s12_maxvs),containsValue(e.p_s12_sr)&&(this.sr=e.p_s12_sr),containsValue(e.p_s12_invsr)&&(this.invsr=e.p_s12_invsr),containsValue(e.counter_s01_count)&&(this.counter_21_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_21_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_45_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_45_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s12_noteNumber)&&(this.noteNumber=e.p_s12_noteNumber),containsValue(e.p_s12_isMuted)&&(this.isMuted=e.p_s12_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_442{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_22_phase=!0,this.random_46_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_156_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_156_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_156_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_156_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_157_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_157_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_157_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_20_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_20_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_20_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_20_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_20_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_20_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_20_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_20_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_20_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_22_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_22_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_22_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_22_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_22_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_22_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_22_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_22_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_22_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_22_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_32_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_32_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_158_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_158_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_46_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_46_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_159_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_159_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_159_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_18_input=e.listlen_a1_s01_input),containsValue(e.p_s11_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s11_audioProcessSampleCount),containsValue(e.p_s11_zeroBuffer)&&(this.zeroBuffer=e.p_s11_zeroBuffer),containsValue(e.p_s11_dummyBuffer)&&(this.dummyBuffer=e.p_s11_dummyBuffer),containsValue(e.p_s11_vs)&&(this.vs=e.p_s11_vs),containsValue(e.p_s11_maxvs)&&(this.maxvs=e.p_s11_maxvs),containsValue(e.p_s11_sr)&&(this.sr=e.p_s11_sr),containsValue(e.p_s11_invsr)&&(this.invsr=e.p_s11_invsr),containsValue(e.counter_s01_count)&&(this.counter_22_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_22_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_46_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_46_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s11_noteNumber)&&(this.noteNumber=e.p_s11_noteNumber),containsValue(e.p_s11_isMuted)&&(this.isMuted=e.p_s11_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_443{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_23_phase=!0,this.random_47_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_160_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_160_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_160_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_160_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_161_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_161_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_161_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_21_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_21_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_21_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_21_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_21_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_21_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_21_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_21_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_21_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_23_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_23_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_23_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_23_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_23_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_23_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_23_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_23_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_23_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_23_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_33_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_33_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_162_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_162_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_47_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_47_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_163_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_163_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_163_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_19_input=e.listlen_a1_s01_input),containsValue(e.p_s10_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s10_audioProcessSampleCount),containsValue(e.p_s10_zeroBuffer)&&(this.zeroBuffer=e.p_s10_zeroBuffer),containsValue(e.p_s10_dummyBuffer)&&(this.dummyBuffer=e.p_s10_dummyBuffer),containsValue(e.p_s10_vs)&&(this.vs=e.p_s10_vs),containsValue(e.p_s10_maxvs)&&(this.maxvs=e.p_s10_maxvs),containsValue(e.p_s10_sr)&&(this.sr=e.p_s10_sr),containsValue(e.p_s10_invsr)&&(this.invsr=e.p_s10_invsr),containsValue(e.counter_s01_count)&&(this.counter_23_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_23_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_47_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_47_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s10_noteNumber)&&(this.noteNumber=e.p_s10_noteNumber),containsValue(e.p_s10_isMuted)&&(this.isMuted=e.p_s10_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_444{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_24_phase=!0,this.random_48_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_164_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_164_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_164_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_164_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_165_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_165_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_165_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_22_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_22_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_22_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_22_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_22_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_22_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_22_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_22_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_22_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_24_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_24_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_24_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_24_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_24_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_24_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_24_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_24_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_24_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_24_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_34_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_34_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_166_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_166_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_48_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_48_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_167_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_167_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_167_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_20_input=e.listlen_a1_s01_input),containsValue(e.p_s09_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s09_audioProcessSampleCount),containsValue(e.p_s09_zeroBuffer)&&(this.zeroBuffer=e.p_s09_zeroBuffer),containsValue(e.p_s09_dummyBuffer)&&(this.dummyBuffer=e.p_s09_dummyBuffer),containsValue(e.p_s09_vs)&&(this.vs=e.p_s09_vs),containsValue(e.p_s09_maxvs)&&(this.maxvs=e.p_s09_maxvs),containsValue(e.p_s09_sr)&&(this.sr=e.p_s09_sr),containsValue(e.p_s09_invsr)&&(this.invsr=e.p_s09_invsr),containsValue(e.counter_s01_count)&&(this.counter_24_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_24_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_48_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_48_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s09_noteNumber)&&(this.noteNumber=e.p_s09_noteNumber),containsValue(e.p_s09_isMuted)&&(this.isMuted=e.p_s09_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_445{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_25_phase=!0,this.random_49_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_168_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_168_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_168_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_168_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_169_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_169_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_169_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_23_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_23_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_23_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_23_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_23_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_23_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_23_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_23_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_23_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_25_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_25_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_25_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_25_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_25_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_25_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_25_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_25_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_25_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_25_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_35_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_35_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_170_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_170_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_49_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_49_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_171_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_171_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_171_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_21_input=e.listlen_a1_s01_input),containsValue(e.p_s08_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s08_audioProcessSampleCount),containsValue(e.p_s08_zeroBuffer)&&(this.zeroBuffer=e.p_s08_zeroBuffer),containsValue(e.p_s08_dummyBuffer)&&(this.dummyBuffer=e.p_s08_dummyBuffer),containsValue(e.p_s08_vs)&&(this.vs=e.p_s08_vs),containsValue(e.p_s08_maxvs)&&(this.maxvs=e.p_s08_maxvs),containsValue(e.p_s08_sr)&&(this.sr=e.p_s08_sr),containsValue(e.p_s08_invsr)&&(this.invsr=e.p_s08_invsr),containsValue(e.counter_s01_count)&&(this.counter_25_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_25_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_49_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_49_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s08_noteNumber)&&(this.noteNumber=e.p_s08_noteNumber),containsValue(e.p_s08_isMuted)&&(this.isMuted=e.p_s08_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_446{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_26_phase=!0,this.random_50_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_172_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_172_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_172_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_172_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_173_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_173_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_173_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_24_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_24_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_24_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_24_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_24_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_24_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_24_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_24_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_24_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_26_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_26_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_26_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_26_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_26_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_26_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_26_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_26_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_26_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_26_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_36_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_36_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_174_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_174_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_50_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_50_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_175_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_175_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_175_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_22_input=e.listlen_a1_s01_input),containsValue(e.p_s07_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s07_audioProcessSampleCount),containsValue(e.p_s07_zeroBuffer)&&(this.zeroBuffer=e.p_s07_zeroBuffer),containsValue(e.p_s07_dummyBuffer)&&(this.dummyBuffer=e.p_s07_dummyBuffer),containsValue(e.p_s07_vs)&&(this.vs=e.p_s07_vs),containsValue(e.p_s07_maxvs)&&(this.maxvs=e.p_s07_maxvs),containsValue(e.p_s07_sr)&&(this.sr=e.p_s07_sr),containsValue(e.p_s07_invsr)&&(this.invsr=e.p_s07_invsr),containsValue(e.counter_s01_count)&&(this.counter_26_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_26_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_50_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_50_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s07_noteNumber)&&(this.noteNumber=e.p_s07_noteNumber),containsValue(e.p_s07_isMuted)&&(this.isMuted=e.p_s07_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_447{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_27_phase=!0,this.random_51_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_176_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_176_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_176_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_176_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_177_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_177_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_177_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_25_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_25_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_25_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_25_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_25_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_25_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_25_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_25_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_25_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_27_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_27_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_27_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_27_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_27_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_27_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_27_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_27_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_27_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_27_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_37_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_37_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_178_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_178_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_51_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_51_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_179_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_179_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_179_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_23_input=e.listlen_a1_s01_input),containsValue(e.p_s06_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s06_audioProcessSampleCount),containsValue(e.p_s06_zeroBuffer)&&(this.zeroBuffer=e.p_s06_zeroBuffer),containsValue(e.p_s06_dummyBuffer)&&(this.dummyBuffer=e.p_s06_dummyBuffer),containsValue(e.p_s06_vs)&&(this.vs=e.p_s06_vs),containsValue(e.p_s06_maxvs)&&(this.maxvs=e.p_s06_maxvs),containsValue(e.p_s06_sr)&&(this.sr=e.p_s06_sr),containsValue(e.p_s06_invsr)&&(this.invsr=e.p_s06_invsr),containsValue(e.counter_s01_count)&&(this.counter_27_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_27_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_51_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_51_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s06_noteNumber)&&(this.noteNumber=e.p_s06_noteNumber),containsValue(e.p_s06_isMuted)&&(this.isMuted=e.p_s06_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_448{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_28_phase=!0,this.random_52_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_180_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_180_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_180_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_180_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_181_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_181_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_181_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_26_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_26_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_26_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_26_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_26_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_26_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_26_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_26_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_26_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_28_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_28_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_28_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_28_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_28_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_28_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_28_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_28_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_28_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_28_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_38_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_38_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_182_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_182_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_52_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_52_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_183_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_183_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_183_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_24_input=e.listlen_a1_s01_input),containsValue(e.p_s05_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s05_audioProcessSampleCount),containsValue(e.p_s05_zeroBuffer)&&(this.zeroBuffer=e.p_s05_zeroBuffer),containsValue(e.p_s05_dummyBuffer)&&(this.dummyBuffer=e.p_s05_dummyBuffer),containsValue(e.p_s05_vs)&&(this.vs=e.p_s05_vs),containsValue(e.p_s05_maxvs)&&(this.maxvs=e.p_s05_maxvs),containsValue(e.p_s05_sr)&&(this.sr=e.p_s05_sr),containsValue(e.p_s05_invsr)&&(this.invsr=e.p_s05_invsr),containsValue(e.counter_s01_count)&&(this.counter_28_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_28_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_52_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_52_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s05_noteNumber)&&(this.noteNumber=e.p_s05_noteNumber),containsValue(e.p_s05_isMuted)&&(this.isMuted=e.p_s05_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_449{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_29_phase=!0,this.random_53_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_184_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_184_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_184_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_184_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_185_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_185_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_185_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_27_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_27_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_27_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_27_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_27_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_27_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_27_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_27_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_27_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_29_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_29_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_29_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_29_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_29_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_29_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_29_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_29_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_29_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_29_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_39_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_39_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_186_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_186_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_53_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_53_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_187_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_187_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_187_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_25_input=e.listlen_a1_s01_input),containsValue(e.p_s04_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s04_audioProcessSampleCount),containsValue(e.p_s04_zeroBuffer)&&(this.zeroBuffer=e.p_s04_zeroBuffer),containsValue(e.p_s04_dummyBuffer)&&(this.dummyBuffer=e.p_s04_dummyBuffer),containsValue(e.p_s04_vs)&&(this.vs=e.p_s04_vs),containsValue(e.p_s04_maxvs)&&(this.maxvs=e.p_s04_maxvs),containsValue(e.p_s04_sr)&&(this.sr=e.p_s04_sr),containsValue(e.p_s04_invsr)&&(this.invsr=e.p_s04_invsr),containsValue(e.counter_s01_count)&&(this.counter_29_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_29_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_53_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_53_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s04_noteNumber)&&(this.noteNumber=e.p_s04_noteNumber),containsValue(e.p_s04_isMuted)&&(this.isMuted=e.p_s04_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_450{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_30_phase=!0,this.random_54_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_188_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_188_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_188_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_188_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_189_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_189_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_189_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_28_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_28_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_28_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_28_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_28_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_28_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_28_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_28_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_28_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_30_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_30_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_30_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_30_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_30_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_30_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_30_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_30_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_30_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_30_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_40_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_40_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_190_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_190_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_54_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_54_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_191_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_191_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_191_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_26_input=e.listlen_a1_s01_input),containsValue(e.p_s03_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s03_audioProcessSampleCount),containsValue(e.p_s03_zeroBuffer)&&(this.zeroBuffer=e.p_s03_zeroBuffer),containsValue(e.p_s03_dummyBuffer)&&(this.dummyBuffer=e.p_s03_dummyBuffer),containsValue(e.p_s03_vs)&&(this.vs=e.p_s03_vs),containsValue(e.p_s03_maxvs)&&(this.maxvs=e.p_s03_maxvs),containsValue(e.p_s03_sr)&&(this.sr=e.p_s03_sr),containsValue(e.p_s03_invsr)&&(this.invsr=e.p_s03_invsr),containsValue(e.counter_s01_count)&&(this.counter_30_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_30_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_54_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_54_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s03_noteNumber)&&(this.noteNumber=e.p_s03_noteNumber),containsValue(e.p_s03_isMuted)&&(this.isMuted=e.p_s03_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_451{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_31_phase=!0,this.random_55_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_192_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_192_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_192_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_192_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_193_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_193_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_193_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_29_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_29_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_29_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_29_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_29_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_29_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_29_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_29_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_29_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_31_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_31_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_31_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_31_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_31_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_31_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_31_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_31_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_31_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_31_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_41_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_41_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_194_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_194_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_55_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_55_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_195_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_195_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_195_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_27_input=e.listlen_a1_s01_input),containsValue(e.p_s02_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s02_audioProcessSampleCount),containsValue(e.p_s02_zeroBuffer)&&(this.zeroBuffer=e.p_s02_zeroBuffer),containsValue(e.p_s02_dummyBuffer)&&(this.dummyBuffer=e.p_s02_dummyBuffer),containsValue(e.p_s02_vs)&&(this.vs=e.p_s02_vs),containsValue(e.p_s02_maxvs)&&(this.maxvs=e.p_s02_maxvs),containsValue(e.p_s02_sr)&&(this.sr=e.p_s02_sr),containsValue(e.p_s02_invsr)&&(this.invsr=e.p_s02_invsr),containsValue(e.counter_s01_count)&&(this.counter_31_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_31_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_55_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_55_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s02_noteNumber)&&(this.noteNumber=e.p_s02_noteNumber),containsValue(e.p_s02_isMuted)&&(this.isMuted=e.p_s02_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_452{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_32_phase=!0,this.random_56_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_196_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_196_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_196_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_196_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_197_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_197_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_197_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_30_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_30_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_30_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_30_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_30_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_30_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_30_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_30_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_30_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_32_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_32_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_32_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_32_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_32_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_32_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_32_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_32_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_32_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_32_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_42_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_42_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_198_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_198_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_56_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_56_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_199_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_199_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_199_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_28_input=e.listlen_a1_s01_input),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.counter_s01_count)&&(this.counter_32_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_32_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_56_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_56_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_486{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0,this.p_45=new Array,this.p_46=new Array,this.p_47=new Array,this.p_48=new Array,this.p_49=new Array,this.p_50=new Array,this.p_51=new Array,this.p_52=new Array,this.p_53=new Array,this.p_54=new Array,this.p_55=new Array,this.p_56=new Array,this.p_57=new Array,this.p_58=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.join_s01_in0)&&(this.join_03_in0=e.join_s01_in0),containsValue(e.join_s01_in1)&&(this.join_03_in1=e.join_s01_in1),containsValue(e.join_s01_in2)&&(this.join_03_in2=e.join_s01_in2),containsValue(e.join_s01_in3)&&(this.join_03_in3=e.join_s01_in3),containsValue(e.join_s01_in4)&&(this.join_03_in4=e.join_s01_in4),containsValue(e.join_s01_in5)&&(this.join_03_in5=e.join_s01_in5),containsValue(e.join_s01_in6)&&(this.join_03_in6=e.join_s01_in6),containsValue(e.join_s01_in7)&&(this.join_03_in7=e.join_s01_in7),containsValue(e.join_s01_in8)&&(this.join_03_in8=e.join_s01_in8),containsValue(e.join_s01_in9)&&(this.join_03_in9=e.join_s01_in9),containsValue(e.join_s01_in10)&&(this.join_03_in10=e.join_s01_in10),containsValue(e.join_s01_in11)&&(this.join_03_in11=e.join_s01_in11),containsValue(e.join_s01_in12)&&(this.join_03_in12=e.join_s01_in12),containsValue(e.join_s01_in13)&&(this.join_03_in13=e.join_s01_in13),containsValue(e.p_s14_target)&&(this.p_45_target=e.p_s14_target),containsValue(e.p_s13_target)&&(this.p_46_target=e.p_s13_target),containsValue(e.p_s12_target)&&(this.p_47_target=e.p_s12_target),containsValue(e.p_s11_target)&&(this.p_48_target=e.p_s11_target),containsValue(e.p_s10_target)&&(this.p_49_target=e.p_s10_target),containsValue(e.p_s09_target)&&(this.p_50_target=e.p_s09_target),containsValue(e.p_s08_target)&&(this.p_51_target=e.p_s08_target),containsValue(e.p_s07_target)&&(this.p_52_target=e.p_s07_target),containsValue(e.p_s06_target)&&(this.p_53_target=e.p_s06_target),containsValue(e.p_s05_target)&&(this.p_54_target=e.p_s05_target),containsValue(e.p_s04_target)&&(this.p_55_target=e.p_s04_target),containsValue(e.p_s03_target)&&(this.p_56_target=e.p_s03_target),containsValue(e.p_s02_target)&&(this.p_57_target=e.p_s02_target),containsValue(e.p_s01_target)&&(this.p_58_target=e.p_s01_target),containsValue(e.p_s06_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s06_audioProcessSampleCount),containsValue(e.p_s06_zeroBuffer)&&(this.zeroBuffer=e.p_s06_zeroBuffer),containsValue(e.p_s06_dummyBuffer)&&(this.dummyBuffer=e.p_s06_dummyBuffer),containsValue(e.p_s06_vs)&&(this.vs=e.p_s06_vs),containsValue(e.p_s06_maxvs)&&(this.maxvs=e.p_s06_maxvs),containsValue(e.p_s06_sr)&&(this.sr=e.p_s06_sr),containsValue(e.p_s06_invsr)&&(this.invsr=e.p_s06_invsr),containsValue(e.p_s06_noteNumber)&&(this.noteNumber=e.p_s06_noteNumber),containsValue(e.p_s06_isMuted)&&(this.isMuted=e.p_s06_isMuted)),this.p_45=new RNBOSubpatcher_439,this.p_45.setEngineAndPatcher(this.getEngine(),this),this.p_45.initialize(getSubState(e,\"p_s14\")),this.p_45.setParameterOffset(this.getParameterOffset(this.p_45)),this.p_46=new RNBOSubpatcher_440,this.p_46.setEngineAndPatcher(this.getEngine(),this),this.p_46.initialize(getSubState(e,\"p_s13\")),this.p_46.setParameterOffset(this.getParameterOffset(this.p_46)),this.p_47=new RNBOSubpatcher_441,this.p_47.setEngineAndPatcher(this.getEngine(),this),this.p_47.initialize(getSubState(e,\"p_s12\")),this.p_47.setParameterOffset(this.getParameterOffset(this.p_47)),this.p_48=new RNBOSubpatcher_442,this.p_48.setEngineAndPatcher(this.getEngine(),this),this.p_48.initialize(getSubState(e,\"p_s11\")),this.p_48.setParameterOffset(this.getParameterOffset(this.p_48)),this.p_49=new RNBOSubpatcher_443,this.p_49.setEngineAndPatcher(this.getEngine(),this),this.p_49.initialize(getSubState(e,\"p_s10\")),this.p_49.setParameterOffset(this.getParameterOffset(this.p_49)),this.p_50=new RNBOSubpatcher_444,this.p_50.setEngineAndPatcher(this.getEngine(),this),this.p_50.initialize(getSubState(e,\"p_s09\")),this.p_50.setParameterOffset(this.getParameterOffset(this.p_50)),this.p_51=new RNBOSubpatcher_445,this.p_51.setEngineAndPatcher(this.getEngine(),this),this.p_51.initialize(getSubState(e,\"p_s08\")),this.p_51.setParameterOffset(this.getParameterOffset(this.p_51)),this.p_52=new RNBOSubpatcher_446,this.p_52.setEngineAndPatcher(this.getEngine(),this),this.p_52.initialize(getSubState(e,\"p_s07\")),this.p_52.setParameterOffset(this.getParameterOffset(this.p_52)),this.p_53=new RNBOSubpatcher_447,this.p_53.setEngineAndPatcher(this.getEngine(),this),this.p_53.initialize(getSubState(e,\"p_s06\")),this.p_53.setParameterOffset(this.getParameterOffset(this.p_53)),this.p_54=new RNBOSubpatcher_448,this.p_54.setEngineAndPatcher(this.getEngine(),this),this.p_54.initialize(getSubState(e,\"p_s05\")),this.p_54.setParameterOffset(this.getParameterOffset(this.p_54)),this.p_55=new RNBOSubpatcher_449,this.p_55.setEngineAndPatcher(this.getEngine(),this),this.p_55.initialize(getSubState(e,\"p_s04\")),this.p_55.setParameterOffset(this.getParameterOffset(this.p_55)),this.p_56=new RNBOSubpatcher_450,this.p_56.setEngineAndPatcher(this.getEngine(),this),this.p_56.initialize(getSubState(e,\"p_s03\")),this.p_56.setParameterOffset(this.getParameterOffset(this.p_56)),this.p_57=new RNBOSubpatcher_451,this.p_57.setEngineAndPatcher(this.getEngine(),this),this.p_57.initialize(getSubState(e,\"p_s02\")),this.p_57.setParameterOffset(this.getParameterOffset(this.p_57)),this.p_58=new RNBOSubpatcher_452,this.p_58.setEngineAndPatcher(this.getEngine(),this),this.p_58.initialize(getSubState(e,\"p_s01\")),this.p_58.setParameterOffset(this.getParameterOffset(this.p_58))}getPreset(e){this.p_45.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-53\")),this.p_46.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-26\")),this.p_47.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-32\")),this.p_48.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-38\")),this.p_49.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-47\")),this.p_50.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-44\")),this.p_51.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-41\")),this.p_52.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-57\")),this.p_53.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-54\")),this.p_54.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-50\")),this.p_55.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-66\")),this.p_56.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-63\")),this.p_57.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-60\")),this.p_58.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-69\"))}processTempoEvent(e,t){this.updateTime(e),this.p_45.processTempoEvent(e,t),this.p_46.processTempoEvent(e,t),this.p_47.processTempoEvent(e,t),this.p_48.processTempoEvent(e,t),this.p_49.processTempoEvent(e,t),this.p_50.processTempoEvent(e,t),this.p_51.processTempoEvent(e,t),this.p_52.processTempoEvent(e,t),this.p_53.processTempoEvent(e,t),this.p_54.processTempoEvent(e,t),this.p_55.processTempoEvent(e,t),this.p_56.processTempoEvent(e,t),this.p_57.processTempoEvent(e,t),this.p_58.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_45.processTransportEvent(e,t),this.p_46.processTransportEvent(e,t),this.p_47.processTransportEvent(e,t),this.p_48.processTransportEvent(e,t),this.p_49.processTransportEvent(e,t),this.p_50.processTransportEvent(e,t),this.p_51.processTransportEvent(e,t),this.p_52.processTransportEvent(e,t),this.p_53.processTransportEvent(e,t),this.p_54.processTransportEvent(e,t),this.p_55.processTransportEvent(e,t),this.p_56.processTransportEvent(e,t),this.p_57.processTransportEvent(e,t),this.p_58.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_45.processBeatTimeEvent(e,t),this.p_46.processBeatTimeEvent(e,t),this.p_47.processBeatTimeEvent(e,t),this.p_48.processBeatTimeEvent(e,t),this.p_49.processBeatTimeEvent(e,t),this.p_50.processBeatTimeEvent(e,t),this.p_51.processBeatTimeEvent(e,t),this.p_52.processBeatTimeEvent(e,t),this.p_53.processBeatTimeEvent(e,t),this.p_54.processBeatTimeEvent(e,t),this.p_55.processBeatTimeEvent(e,t),this.p_56.processBeatTimeEvent(e,t),this.p_57.processBeatTimeEvent(e,t),this.p_58.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_45.processTimeSignatureEvent(e,t,s),this.p_46.processTimeSignatureEvent(e,t,s),this.p_47.processTimeSignatureEvent(e,t,s),this.p_48.processTimeSignatureEvent(e,t,s),this.p_49.processTimeSignatureEvent(e,t,s),this.p_50.processTimeSignatureEvent(e,t,s),this.p_51.processTimeSignatureEvent(e,t,s),this.p_52.processTimeSignatureEvent(e,t,s),this.p_53.processTimeSignatureEvent(e,t,s),this.p_54.processTimeSignatureEvent(e,t,s),this.p_55.processTimeSignatureEvent(e,t,s),this.p_56.processTimeSignatureEvent(e,t,s),this.p_57.processTimeSignatureEvent(e,t,s),this.p_58.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_45.getNumParameters()&&this.p_45.setParameterValue(e,t,s),(e-=this.p_45.getNumParameters())<this.p_46.getNumParameters()&&this.p_46.setParameterValue(e,t,s),(e-=this.p_46.getNumParameters())<this.p_47.getNumParameters()&&this.p_47.setParameterValue(e,t,s),(e-=this.p_47.getNumParameters())<this.p_48.getNumParameters()&&this.p_48.setParameterValue(e,t,s),(e-=this.p_48.getNumParameters())<this.p_49.getNumParameters()&&this.p_49.setParameterValue(e,t,s),(e-=this.p_49.getNumParameters())<this.p_50.getNumParameters()&&this.p_50.setParameterValue(e,t,s),(e-=this.p_50.getNumParameters())<this.p_51.getNumParameters()&&this.p_51.setParameterValue(e,t,s),(e-=this.p_51.getNumParameters())<this.p_52.getNumParameters()&&this.p_52.setParameterValue(e,t,s),(e-=this.p_52.getNumParameters())<this.p_53.getNumParameters()&&this.p_53.setParameterValue(e,t,s),(e-=this.p_53.getNumParameters())<this.p_54.getNumParameters()&&this.p_54.setParameterValue(e,t,s),(e-=this.p_54.getNumParameters())<this.p_55.getNumParameters()&&this.p_55.setParameterValue(e,t,s),(e-=this.p_55.getNumParameters())<this.p_56.getNumParameters()&&this.p_56.setParameterValue(e,t,s),(e-=this.p_56.getNumParameters())<this.p_57.getNumParameters()&&this.p_57.setParameterValue(e,t,s),(e-=this.p_57.getNumParameters())<this.p_58.getNumParameters()&&this.p_58.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_45.getNumParameters()?this.p_45.getParameterValue(e):(e-=this.p_45.getNumParameters())<this.p_46.getNumParameters()?this.p_46.getParameterValue(e):(e-=this.p_46.getNumParameters())<this.p_47.getNumParameters()?this.p_47.getParameterValue(e):(e-=this.p_47.getNumParameters())<this.p_48.getNumParameters()?this.p_48.getParameterValue(e):(e-=this.p_48.getNumParameters())<this.p_49.getNumParameters()?this.p_49.getParameterValue(e):(e-=this.p_49.getNumParameters())<this.p_50.getNumParameters()?this.p_50.getParameterValue(e):(e-=this.p_50.getNumParameters())<this.p_51.getNumParameters()?this.p_51.getParameterValue(e):(e-=this.p_51.getNumParameters())<this.p_52.getNumParameters()?this.p_52.getParameterValue(e):(e-=this.p_52.getNumParameters())<this.p_53.getNumParameters()?this.p_53.getParameterValue(e):(e-=this.p_53.getNumParameters())<this.p_54.getNumParameters()?this.p_54.getParameterValue(e):(e-=this.p_54.getNumParameters())<this.p_55.getNumParameters()?this.p_55.getParameterValue(e):(e-=this.p_55.getNumParameters())<this.p_56.getNumParameters()?this.p_56.getParameterValue(e):(e-=this.p_56.getNumParameters())<this.p_57.getNumParameters()?this.p_57.getParameterValue(e):(e-=this.p_57.getNumParameters())<this.p_58.getNumParameters()?this.p_58.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters()+this.p_49.getNumParameters()+this.p_50.getNumParameters()+this.p_51.getNumParameters()+this.p_52.getNumParameters()+this.p_53.getNumParameters()+this.p_54.getNumParameters()+this.p_55.getNumParameters()+this.p_56.getNumParameters()+this.p_57.getNumParameters()+this.p_58.getNumParameters()}getParameterName(e){return(e-=0)<this.p_45.getNumParameters()?this.p_45.getParameterName(e):(e-=this.p_45.getNumParameters())<this.p_46.getNumParameters()?this.p_46.getParameterName(e):(e-=this.p_46.getNumParameters())<this.p_47.getNumParameters()?this.p_47.getParameterName(e):(e-=this.p_47.getNumParameters())<this.p_48.getNumParameters()?this.p_48.getParameterName(e):(e-=this.p_48.getNumParameters())<this.p_49.getNumParameters()?this.p_49.getParameterName(e):(e-=this.p_49.getNumParameters())<this.p_50.getNumParameters()?this.p_50.getParameterName(e):(e-=this.p_50.getNumParameters())<this.p_51.getNumParameters()?this.p_51.getParameterName(e):(e-=this.p_51.getNumParameters())<this.p_52.getNumParameters()?this.p_52.getParameterName(e):(e-=this.p_52.getNumParameters())<this.p_53.getNumParameters()?this.p_53.getParameterName(e):(e-=this.p_53.getNumParameters())<this.p_54.getNumParameters()?this.p_54.getParameterName(e):(e-=this.p_54.getNumParameters())<this.p_55.getNumParameters()?this.p_55.getParameterName(e):(e-=this.p_55.getNumParameters())<this.p_56.getNumParameters()?this.p_56.getParameterName(e):(e-=this.p_56.getNumParameters())<this.p_57.getNumParameters()?this.p_57.getParameterName(e):(e-=this.p_57.getNumParameters())<this.p_58.getNumParameters()?this.p_58.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_45.getNumParameters()?this.p_45.getParameterId(e):(e-=this.p_45.getNumParameters())<this.p_46.getNumParameters()?this.p_46.getParameterId(e):(e-=this.p_46.getNumParameters())<this.p_47.getNumParameters()?this.p_47.getParameterId(e):(e-=this.p_47.getNumParameters())<this.p_48.getNumParameters()?this.p_48.getParameterId(e):(e-=this.p_48.getNumParameters())<this.p_49.getNumParameters()?this.p_49.getParameterId(e):(e-=this.p_49.getNumParameters())<this.p_50.getNumParameters()?this.p_50.getParameterId(e):(e-=this.p_50.getNumParameters())<this.p_51.getNumParameters()?this.p_51.getParameterId(e):(e-=this.p_51.getNumParameters())<this.p_52.getNumParameters()?this.p_52.getParameterId(e):(e-=this.p_52.getNumParameters())<this.p_53.getNumParameters()?this.p_53.getParameterId(e):(e-=this.p_53.getNumParameters())<this.p_54.getNumParameters()?this.p_54.getParameterId(e):(e-=this.p_54.getNumParameters())<this.p_55.getNumParameters()?this.p_55.getParameterId(e):(e-=this.p_55.getNumParameters())<this.p_56.getNumParameters()?this.p_56.getParameterId(e):(e-=this.p_56.getNumParameters())<this.p_57.getNumParameters()?this.p_57.getParameterId(e):(e-=this.p_57.getNumParameters())<this.p_58.getNumParameters()?this.p_58.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_45.getNumParameters()&&this.p_45.getParameterInfo(e,t),(e-=this.p_45.getNumParameters())<this.p_46.getNumParameters()&&this.p_46.getParameterInfo(e,t),(e-=this.p_46.getNumParameters())<this.p_47.getNumParameters()&&this.p_47.getParameterInfo(e,t),(e-=this.p_47.getNumParameters())<this.p_48.getNumParameters()&&this.p_48.getParameterInfo(e,t),(e-=this.p_48.getNumParameters())<this.p_49.getNumParameters()&&this.p_49.getParameterInfo(e,t),(e-=this.p_49.getNumParameters())<this.p_50.getNumParameters()&&this.p_50.getParameterInfo(e,t),(e-=this.p_50.getNumParameters())<this.p_51.getNumParameters()&&this.p_51.getParameterInfo(e,t),(e-=this.p_51.getNumParameters())<this.p_52.getNumParameters()&&this.p_52.getParameterInfo(e,t),(e-=this.p_52.getNumParameters())<this.p_53.getNumParameters()&&this.p_53.getParameterInfo(e,t),(e-=this.p_53.getNumParameters())<this.p_54.getNumParameters()&&this.p_54.getParameterInfo(e,t),(e-=this.p_54.getNumParameters())<this.p_55.getNumParameters()&&this.p_55.getParameterInfo(e,t),(e-=this.p_55.getNumParameters())<this.p_56.getNumParameters()&&this.p_56.getParameterInfo(e,t),(e-=this.p_56.getNumParameters())<this.p_57.getNumParameters()&&this.p_57.getParameterInfo(e,t),(e-=this.p_57.getNumParameters())<this.p_58.getNumParameters()&&this.p_58.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return e==this.p_45?0:e==this.p_46?0+this.p_45.getNumParameters():e==this.p_47?0+this.p_45.getNumParameters()+this.p_46.getNumParameters():e==this.p_48?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters():e==this.p_49?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters():e==this.p_50?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters()+this.p_49.getNumParameters():e==this.p_51?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters()+this.p_49.getNumParameters()+this.p_50.getNumParameters():e==this.p_52?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters()+this.p_49.getNumParameters()+this.p_50.getNumParameters()+this.p_51.getNumParameters():e==this.p_53?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters()+this.p_49.getNumParameters()+this.p_50.getNumParameters()+this.p_51.getNumParameters()+this.p_52.getNumParameters():e==this.p_54?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters()+this.p_49.getNumParameters()+this.p_50.getNumParameters()+this.p_51.getNumParameters()+this.p_52.getNumParameters()+this.p_53.getNumParameters():e==this.p_55?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters()+this.p_49.getNumParameters()+this.p_50.getNumParameters()+this.p_51.getNumParameters()+this.p_52.getNumParameters()+this.p_53.getNumParameters()+this.p_54.getNumParameters():e==this.p_56?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters()+this.p_49.getNumParameters()+this.p_50.getNumParameters()+this.p_51.getNumParameters()+this.p_52.getNumParameters()+this.p_53.getNumParameters()+this.p_54.getNumParameters()+this.p_55.getNumParameters():e==this.p_57?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters()+this.p_49.getNumParameters()+this.p_50.getNumParameters()+this.p_51.getNumParameters()+this.p_52.getNumParameters()+this.p_53.getNumParameters()+this.p_54.getNumParameters()+this.p_55.getNumParameters()+this.p_56.getNumParameters():e==this.p_58?0+this.p_45.getNumParameters()+this.p_46.getNumParameters()+this.p_47.getNumParameters()+this.p_48.getNumParameters()+this.p_49.getNumParameters()+this.p_50.getNumParameters()+this.p_51.getNumParameters()+this.p_52.getNumParameters()+this.p_53.getNumParameters()+this.p_54.getNumParameters()+this.p_55.getNumParameters()+this.p_56.getNumParameters()+this.p_57.getNumParameters():0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_45.getNumParameters()?this.p_45.convertToNormalizedParameterValue(e,t):(e-=this.p_45.getNumParameters())<this.p_46.getNumParameters()?this.p_46.convertToNormalizedParameterValue(e,t):(e-=this.p_46.getNumParameters())<this.p_47.getNumParameters()?this.p_47.convertToNormalizedParameterValue(e,t):(e-=this.p_47.getNumParameters())<this.p_48.getNumParameters()?this.p_48.convertToNormalizedParameterValue(e,t):(e-=this.p_48.getNumParameters())<this.p_49.getNumParameters()?this.p_49.convertToNormalizedParameterValue(e,t):(e-=this.p_49.getNumParameters())<this.p_50.getNumParameters()?this.p_50.convertToNormalizedParameterValue(e,t):(e-=this.p_50.getNumParameters())<this.p_51.getNumParameters()?this.p_51.convertToNormalizedParameterValue(e,t):(e-=this.p_51.getNumParameters())<this.p_52.getNumParameters()?this.p_52.convertToNormalizedParameterValue(e,t):(e-=this.p_52.getNumParameters())<this.p_53.getNumParameters()?this.p_53.convertToNormalizedParameterValue(e,t):(e-=this.p_53.getNumParameters())<this.p_54.getNumParameters()?this.p_54.convertToNormalizedParameterValue(e,t):(e-=this.p_54.getNumParameters())<this.p_55.getNumParameters()?this.p_55.convertToNormalizedParameterValue(e,t):(e-=this.p_55.getNumParameters())<this.p_56.getNumParameters()?this.p_56.convertToNormalizedParameterValue(e,t):(e-=this.p_56.getNumParameters())<this.p_57.getNumParameters()?this.p_57.convertToNormalizedParameterValue(e,t):(e-=this.p_57.getNumParameters())<this.p_58.getNumParameters()?this.p_58.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_45.getNumParameters()?this.p_45.convertFromNormalizedParameterValue(e,t):(e-=this.p_45.getNumParameters())<this.p_46.getNumParameters()?this.p_46.convertFromNormalizedParameterValue(e,t):(e-=this.p_46.getNumParameters())<this.p_47.getNumParameters()?this.p_47.convertFromNormalizedParameterValue(e,t):(e-=this.p_47.getNumParameters())<this.p_48.getNumParameters()?this.p_48.convertFromNormalizedParameterValue(e,t):(e-=this.p_48.getNumParameters())<this.p_49.getNumParameters()?this.p_49.convertFromNormalizedParameterValue(e,t):(e-=this.p_49.getNumParameters())<this.p_50.getNumParameters()?this.p_50.convertFromNormalizedParameterValue(e,t):(e-=this.p_50.getNumParameters())<this.p_51.getNumParameters()?this.p_51.convertFromNormalizedParameterValue(e,t):(e-=this.p_51.getNumParameters())<this.p_52.getNumParameters()?this.p_52.convertFromNormalizedParameterValue(e,t):(e-=this.p_52.getNumParameters())<this.p_53.getNumParameters()?this.p_53.convertFromNormalizedParameterValue(e,t):(e-=this.p_53.getNumParameters())<this.p_54.getNumParameters()?this.p_54.convertFromNormalizedParameterValue(e,t):(e-=this.p_54.getNumParameters())<this.p_55.getNumParameters()?this.p_55.convertFromNormalizedParameterValue(e,t):(e-=this.p_55.getNumParameters())<this.p_56.getNumParameters()?this.p_56.convertFromNormalizedParameterValue(e,t):(e-=this.p_56.getNumParameters())<this.p_57.getNumParameters()?this.p_57.convertFromNormalizedParameterValue(e,t):(e-=this.p_57.getNumParameters())<this.p_58.getNumParameters()?this.p_58.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_45.getNumParameters()?this.p_45.constrainParameterValue(e,t):(e-=this.p_45.getNumParameters())<this.p_46.getNumParameters()?this.p_46.constrainParameterValue(e,t):(e-=this.p_46.getNumParameters())<this.p_47.getNumParameters()?this.p_47.constrainParameterValue(e,t):(e-=this.p_47.getNumParameters())<this.p_48.getNumParameters()?this.p_48.constrainParameterValue(e,t):(e-=this.p_48.getNumParameters())<this.p_49.getNumParameters()?this.p_49.constrainParameterValue(e,t):(e-=this.p_49.getNumParameters())<this.p_50.getNumParameters()?this.p_50.constrainParameterValue(e,t):(e-=this.p_50.getNumParameters())<this.p_51.getNumParameters()?this.p_51.constrainParameterValue(e,t):(e-=this.p_51.getNumParameters())<this.p_52.getNumParameters()?this.p_52.constrainParameterValue(e,t):(e-=this.p_52.getNumParameters())<this.p_53.getNumParameters()?this.p_53.constrainParameterValue(e,t):(e-=this.p_53.getNumParameters())<this.p_54.getNumParameters()?this.p_54.constrainParameterValue(e,t):(e-=this.p_54.getNumParameters())<this.p_55.getNumParameters()?this.p_55.constrainParameterValue(e,t):(e-=this.p_55.getNumParameters())<this.p_56.getNumParameters()?this.p_56.constrainParameterValue(e,t):(e-=this.p_56.getNumParameters())<this.p_57.getNumParameters()?this.p_57.constrainParameterValue(e,t):(e-=this.p_57.getNumParameters())<this.p_58.getNumParameters()?this.p_58.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm2_freq\"):this.inport_32_value_number_set(a);break;case TAG(\"fm2_c1ratio\"):this.inport_33_value_number_set(a);break;case TAG(\"fm2_c2ratio\"):this.inport_34_value_number_set(a);break;case TAG(\"fm2_c3ratio\"):this.inport_35_value_number_set(a);break;case TAG(\"fm2_3to1\"):this.inport_36_value_number_set(a);break;case TAG(\"fm2_2to1\"):this.inport_37_value_number_set(a);break;case TAG(\"fm2_3to2\"):this.inport_38_value_number_set(a);break;case TAG(\"fm2_c1release\"):this.inport_39_value_number_set(a);break;case TAG(\"fm2_c2release\"):this.inport_40_value_number_set(a);break;case TAG(\"fm2_c3release\"):this.inport_41_value_number_set(a);break;case TAG(\"fm2_op1gain\"):this.inport_42_value_number_set(a);break;case TAG(\"fm2_op2gain\"):this.inport_43_value_number_set(a);break;case TAG(\"fm2_op3gain\"):this.inport_44_value_number_set(a);break;case TAG(\"fm2_gain\"):this.inport_45_value_number_set(a)}this.p_45.processNumMessage(e,t,s,a),this.p_46.processNumMessage(e,t,s,a),this.p_47.processNumMessage(e,t,s,a),this.p_48.processNumMessage(e,t,s,a),this.p_49.processNumMessage(e,t,s,a),this.p_50.processNumMessage(e,t,s,a),this.p_51.processNumMessage(e,t,s,a),this.p_52.processNumMessage(e,t,s,a),this.p_53.processNumMessage(e,t,s,a),this.p_54.processNumMessage(e,t,s,a),this.p_55.processNumMessage(e,t,s,a),this.p_56.processNumMessage(e,t,s,a),this.p_57.processNumMessage(e,t,s,a),this.p_58.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm2_freq\"):this.inport_32_value_list_set(a);break;case TAG(\"fm2_c1ratio\"):this.inport_33_value_list_set(a);break;case TAG(\"fm2_c2ratio\"):this.inport_34_value_list_set(a);break;case TAG(\"fm2_c3ratio\"):this.inport_35_value_list_set(a);break;case TAG(\"fm2_3to1\"):this.inport_36_value_list_set(a);break;case TAG(\"fm2_2to1\"):this.inport_37_value_list_set(a);break;case TAG(\"fm2_3to2\"):this.inport_38_value_list_set(a);break;case TAG(\"fm2_c1release\"):this.inport_39_value_list_set(a);break;case TAG(\"fm2_c2release\"):this.inport_40_value_list_set(a);break;case TAG(\"fm2_c3release\"):this.inport_41_value_list_set(a);break;case TAG(\"fm2_op1gain\"):this.inport_42_value_list_set(a);break;case TAG(\"fm2_op2gain\"):this.inport_43_value_list_set(a);break;case TAG(\"fm2_op3gain\"):this.inport_44_value_list_set(a);break;case TAG(\"fm2_gain\"):this.inport_45_value_list_set(a)}this.p_45.processListMessage(e,t,s,a),this.p_46.processListMessage(e,t,s,a),this.p_47.processListMessage(e,t,s,a),this.p_48.processListMessage(e,t,s,a),this.p_49.processListMessage(e,t,s,a),this.p_50.processListMessage(e,t,s,a),this.p_51.processListMessage(e,t,s,a),this.p_52.processListMessage(e,t,s,a),this.p_53.processListMessage(e,t,s,a),this.p_54.processListMessage(e,t,s,a),this.p_55.processListMessage(e,t,s,a),this.p_56.processListMessage(e,t,s,a),this.p_57.processListMessage(e,t,s,a),this.p_58.processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"fm2_freq\"):this.inport_32_value_bang_bang();break;case TAG(\"fm2_c1ratio\"):this.inport_33_value_bang_bang();break;case TAG(\"fm2_c2ratio\"):this.inport_34_value_bang_bang();break;case TAG(\"fm2_c3ratio\"):this.inport_35_value_bang_bang();break;case TAG(\"fm2_3to1\"):this.inport_36_value_bang_bang();break;case TAG(\"fm2_2to1\"):this.inport_37_value_bang_bang();break;case TAG(\"fm2_3to2\"):this.inport_38_value_bang_bang();break;case TAG(\"fm2_c1release\"):this.inport_39_value_bang_bang();break;case TAG(\"fm2_c2release\"):this.inport_40_value_bang_bang();break;case TAG(\"fm2_c3release\"):this.inport_41_value_bang_bang();break;case TAG(\"fm2_op1gain\"):this.inport_42_value_bang_bang();break;case TAG(\"fm2_op2gain\"):this.inport_43_value_bang_bang();break;case TAG(\"fm2_op3gain\"):this.inport_44_value_bang_bang();break;case TAG(\"fm2_gain\"):this.inport_45_value_bang_bang()}this.p_45.processBangMessage(e,t,s),this.p_46.processBangMessage(e,t,s),this.p_47.processBangMessage(e,t,s),this.p_48.processBangMessage(e,t,s),this.p_49.processBangMessage(e,t,s),this.p_50.processBangMessage(e,t,s),this.p_51.processBangMessage(e,t,s),this.p_52.processBangMessage(e,t,s),this.p_53.processBangMessage(e,t,s),this.p_54.processBangMessage(e,t,s),this.p_55.processBangMessage(e,t,s),this.p_56.processBangMessage(e,t,s),this.p_57.processBangMessage(e,t,s),this.p_58.processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"fm2_freq\"):return\"fm2_freq\";case TAG(\"\"):return\"\";case TAG(\"fm2_c1ratio\"):return\"fm2_c1ratio\";case TAG(\"fm2_c2ratio\"):return\"fm2_c2ratio\";case TAG(\"fm2_c3ratio\"):return\"fm2_c3ratio\";case TAG(\"fm2_3to1\"):return\"fm2_3to1\";case TAG(\"fm2_2to1\"):return\"fm2_2to1\";case TAG(\"fm2_3to2\"):return\"fm2_3to2\";case TAG(\"fm2_c1release\"):return\"fm2_c1release\";case TAG(\"fm2_c2release\"):return\"fm2_c2release\";case TAG(\"fm2_c3release\"):return\"fm2_c3release\";case TAG(\"fm2_op1gain\"):return\"fm2_op1gain\";case TAG(\"fm2_op2gain\"):return\"fm2_op2gain\";case TAG(\"fm2_op3gain\"):return\"fm2_op3gain\";case TAG(\"fm2_gain\"):return\"fm2_gain\"}var t=this.p_45.resolveTag(e);if(t)return t;var s=this.p_46.resolveTag(e);if(s)return s;var a=this.p_47.resolveTag(e);if(a)return a;var r=this.p_48.resolveTag(e);if(r)return r;var _=this.p_49.resolveTag(e);if(_)return _;var i=this.p_50.resolveTag(e);if(i)return i;var n=this.p_51.resolveTag(e);if(n)return n;var u=this.p_52.resolveTag(e);if(u)return u;var o=this.p_53.resolveTag(e);if(o)return o;var p=this.p_54.resolveTag(e);if(p)return p;var m=this.p_55.resolveTag(e);if(m)return m;var h=this.p_56.resolveTag(e);if(h)return h;var l=this.p_57.resolveTag(e);if(l)return l;var c=this.p_58.resolveTag(e);return c||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_45.processDataViewUpdate(e,t),this.p_46.processDataViewUpdate(e,t),this.p_47.processDataViewUpdate(e,t),this.p_48.processDataViewUpdate(e,t),this.p_49.processDataViewUpdate(e,t),this.p_50.processDataViewUpdate(e,t),this.p_51.processDataViewUpdate(e,t),this.p_52.processDataViewUpdate(e,t),this.p_53.processDataViewUpdate(e,t),this.p_54.processDataViewUpdate(e,t),this.p_55.processDataViewUpdate(e,t),this.p_56.processDataViewUpdate(e,t),this.p_57.processDataViewUpdate(e,t),this.p_58.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_456{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_57_nz_last=0,this.random_58_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_200_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_200_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_200_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_201_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_201_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_201_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_57_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_57_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_202_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_202_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_202_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_58_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_58_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_43_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_43_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s17_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s17_audioProcessSampleCount),containsValue(e.p_s17_zeroBuffer)&&(this.zeroBuffer=e.p_s17_zeroBuffer),containsValue(e.p_s17_dummyBuffer)&&(this.dummyBuffer=e.p_s17_dummyBuffer),containsValue(e.p_s17_vs)&&(this.vs=e.p_s17_vs),containsValue(e.p_s17_maxvs)&&(this.maxvs=e.p_s17_maxvs),containsValue(e.p_s17_sr)&&(this.sr=e.p_s17_sr),containsValue(e.p_s17_invsr)&&(this.invsr=e.p_s17_invsr),containsValue(e.random_s02_nz_last)&&(this.random_57_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_57_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_58_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_58_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s17_noteNumber)&&(this.noteNumber=e.p_s17_noteNumber),containsValue(e.p_s17_isMuted)&&(this.isMuted=e.p_s17_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_457{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_59_nz_last=0,this.random_60_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_203_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_203_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_203_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_204_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_204_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_204_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_59_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_59_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_205_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_205_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_205_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_60_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_60_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_44_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_44_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s16_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s16_audioProcessSampleCount),containsValue(e.p_s16_zeroBuffer)&&(this.zeroBuffer=e.p_s16_zeroBuffer),containsValue(e.p_s16_dummyBuffer)&&(this.dummyBuffer=e.p_s16_dummyBuffer),containsValue(e.p_s16_vs)&&(this.vs=e.p_s16_vs),containsValue(e.p_s16_maxvs)&&(this.maxvs=e.p_s16_maxvs),containsValue(e.p_s16_sr)&&(this.sr=e.p_s16_sr),containsValue(e.p_s16_invsr)&&(this.invsr=e.p_s16_invsr),containsValue(e.random_s02_nz_last)&&(this.random_59_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_59_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_60_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_60_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s16_noteNumber)&&(this.noteNumber=e.p_s16_noteNumber),containsValue(e.p_s16_isMuted)&&(this.isMuted=e.p_s16_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_458{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_61_nz_last=0,this.random_62_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_206_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_206_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_206_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_207_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_207_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_207_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_61_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_61_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_208_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_208_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_208_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_62_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_62_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_45_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_45_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s15_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s15_audioProcessSampleCount),containsValue(e.p_s15_zeroBuffer)&&(this.zeroBuffer=e.p_s15_zeroBuffer),containsValue(e.p_s15_dummyBuffer)&&(this.dummyBuffer=e.p_s15_dummyBuffer),containsValue(e.p_s15_vs)&&(this.vs=e.p_s15_vs),containsValue(e.p_s15_maxvs)&&(this.maxvs=e.p_s15_maxvs),containsValue(e.p_s15_sr)&&(this.sr=e.p_s15_sr),containsValue(e.p_s15_invsr)&&(this.invsr=e.p_s15_invsr),containsValue(e.random_s02_nz_last)&&(this.random_61_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_61_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_62_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_62_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s15_noteNumber)&&(this.noteNumber=e.p_s15_noteNumber),containsValue(e.p_s15_isMuted)&&(this.isMuted=e.p_s15_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_459{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_63_nz_last=0,this.random_64_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_209_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_209_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_209_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_210_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_210_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_210_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_63_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_63_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_211_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_211_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_211_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_64_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_64_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_46_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_46_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s14_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s14_audioProcessSampleCount),containsValue(e.p_s14_zeroBuffer)&&(this.zeroBuffer=e.p_s14_zeroBuffer),containsValue(e.p_s14_dummyBuffer)&&(this.dummyBuffer=e.p_s14_dummyBuffer),containsValue(e.p_s14_vs)&&(this.vs=e.p_s14_vs),containsValue(e.p_s14_maxvs)&&(this.maxvs=e.p_s14_maxvs),containsValue(e.p_s14_sr)&&(this.sr=e.p_s14_sr),containsValue(e.p_s14_invsr)&&(this.invsr=e.p_s14_invsr),containsValue(e.random_s02_nz_last)&&(this.random_63_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_63_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_64_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_64_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s14_noteNumber)&&(this.noteNumber=e.p_s14_noteNumber),containsValue(e.p_s14_isMuted)&&(this.isMuted=e.p_s14_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_460{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_65_nz_last=0,this.random_66_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_212_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_212_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_212_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_213_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_213_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_213_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_65_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_65_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_214_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_214_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_214_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_66_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_66_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_47_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_47_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s13_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s13_audioProcessSampleCount),containsValue(e.p_s13_zeroBuffer)&&(this.zeroBuffer=e.p_s13_zeroBuffer),containsValue(e.p_s13_dummyBuffer)&&(this.dummyBuffer=e.p_s13_dummyBuffer),containsValue(e.p_s13_vs)&&(this.vs=e.p_s13_vs),containsValue(e.p_s13_maxvs)&&(this.maxvs=e.p_s13_maxvs),containsValue(e.p_s13_sr)&&(this.sr=e.p_s13_sr),containsValue(e.p_s13_invsr)&&(this.invsr=e.p_s13_invsr),containsValue(e.random_s02_nz_last)&&(this.random_65_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_65_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_66_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_66_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s13_noteNumber)&&(this.noteNumber=e.p_s13_noteNumber),containsValue(e.p_s13_isMuted)&&(this.isMuted=e.p_s13_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_461{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_67_nz_last=0,this.random_68_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_215_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_215_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_215_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_216_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_216_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_216_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_67_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_67_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_217_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_217_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_217_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_68_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_68_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_48_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_48_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s12_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s12_audioProcessSampleCount),containsValue(e.p_s12_zeroBuffer)&&(this.zeroBuffer=e.p_s12_zeroBuffer),containsValue(e.p_s12_dummyBuffer)&&(this.dummyBuffer=e.p_s12_dummyBuffer),containsValue(e.p_s12_vs)&&(this.vs=e.p_s12_vs),containsValue(e.p_s12_maxvs)&&(this.maxvs=e.p_s12_maxvs),containsValue(e.p_s12_sr)&&(this.sr=e.p_s12_sr),containsValue(e.p_s12_invsr)&&(this.invsr=e.p_s12_invsr),containsValue(e.random_s02_nz_last)&&(this.random_67_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_67_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_68_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_68_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s12_noteNumber)&&(this.noteNumber=e.p_s12_noteNumber),containsValue(e.p_s12_isMuted)&&(this.isMuted=e.p_s12_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_462{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_69_nz_last=0,this.random_70_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_218_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_218_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_218_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_219_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_219_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_219_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_69_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_69_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_220_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_220_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_220_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_70_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_70_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_49_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_49_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s11_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s11_audioProcessSampleCount),containsValue(e.p_s11_zeroBuffer)&&(this.zeroBuffer=e.p_s11_zeroBuffer),containsValue(e.p_s11_dummyBuffer)&&(this.dummyBuffer=e.p_s11_dummyBuffer),containsValue(e.p_s11_vs)&&(this.vs=e.p_s11_vs),containsValue(e.p_s11_maxvs)&&(this.maxvs=e.p_s11_maxvs),containsValue(e.p_s11_sr)&&(this.sr=e.p_s11_sr),containsValue(e.p_s11_invsr)&&(this.invsr=e.p_s11_invsr),containsValue(e.random_s02_nz_last)&&(this.random_69_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_69_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_70_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_70_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s11_noteNumber)&&(this.noteNumber=e.p_s11_noteNumber),containsValue(e.p_s11_isMuted)&&(this.isMuted=e.p_s11_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_453{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_221_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_221_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_221_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_222_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_222_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_222_out1=e.expr_s01_out1),containsValue(e.scale_s01_input)&&(this.scale_07_input=e.scale_s01_input),containsValue(e.scale_s01_inlow)&&(this.scale_07_inlow=e.scale_s01_inlow),containsValue(e.scale_s01_inhigh)&&(this.scale_07_inhigh=e.scale_s01_inhigh),containsValue(e.scale_s01_outlow)&&(this.scale_07_outlow=e.scale_s01_outlow),containsValue(e.scale_s01_outhigh)&&(this.scale_07_outhigh=e.scale_s01_outhigh),containsValue(e.scale_s01_power)&&(this.scale_07_power=e.scale_s01_power),containsValue(e.scale_s01_out)&&(this.scale_07_out=e.scale_s01_out),containsValue(e.expr_s03_in1)&&(this.expr_223_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_223_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_223_out1=e.expr_s03_out1),containsValue(e.scale_s02_input)&&(this.scale_08_input=e.scale_s02_input),containsValue(e.scale_s02_inlow)&&(this.scale_08_inlow=e.scale_s02_inlow),containsValue(e.scale_s02_inhigh)&&(this.scale_08_inhigh=e.scale_s02_inhigh),containsValue(e.scale_s02_outlow)&&(this.scale_08_outlow=e.scale_s02_outlow),containsValue(e.scale_s02_outhigh)&&(this.scale_08_outhigh=e.scale_s02_outhigh),containsValue(e.scale_s02_power)&&(this.scale_08_power=e.scale_s02_power),containsValue(e.scale_s02_out)&&(this.scale_08_out=e.scale_s02_out),containsValue(e.expr_s04_in1)&&(this.expr_224_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_224_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_224_out1=e.expr_s04_out1),containsValue(e.expr_s05_in1)&&(this.expr_225_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_225_in2=e.expr_s05_in2),containsValue(e.expr_s05_in3)&&(this.expr_225_in3=e.expr_s05_in3),containsValue(e.expr_s05_out1)&&(this.expr_225_out1=e.expr_s05_out1),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_463{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0,this.p_59=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.unpack_s03_out1)&&(this.unpack_13_out1=e.unpack_s03_out1),containsValue(e.unpack_s03_out2)&&(this.unpack_13_out2=e.unpack_s03_out2),containsValue(e.pack_s01_in1)&&(this.pack_13_in1=e.pack_s01_in1),containsValue(e.pack_s01_in2)&&(this.pack_13_in2=e.pack_s01_in2),containsValue(e.unpack_s04_out1)&&(this.unpack_14_out1=e.unpack_s04_out1),containsValue(e.unpack_s04_out2)&&(this.unpack_14_out2=e.unpack_s04_out2),containsValue(e.receive_a1_s02_output_number)&&(this.receive_15_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_15_output_list=e.receive_a1_s02_output_list),containsValue(e.expr_s07_in1)&&(this.expr_226_in1=e.expr_s07_in1),containsValue(e.expr_s07_in2)&&(this.expr_226_in2=e.expr_s07_in2),containsValue(e.expr_s07_out1)&&(this.expr_226_out1=e.expr_s07_out1),containsValue(e.pack_a1_s01_in1)&&(this.pack_14_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_14_in2=e.pack_a1_s01_in2),containsValue(e.maximum_a1_s01_input)&&(this.maximum_06_input=e.maximum_a1_s01_input),containsValue(e.maximum_a1_s01_right)&&(this.maximum_06_right=e.maximum_a1_s01_right),containsValue(e.maximum_a1_s01_out)&&(this.maximum_06_out=e.maximum_a1_s01_out),containsValue(e.maximum_a1_s01_index)&&(this.maximum_06_index=e.maximum_a1_s01_index),containsValue(e.unpack_s02_out1)&&(this.unpack_15_out1=e.unpack_s02_out1),containsValue(e.unpack_s02_out2)&&(this.unpack_15_out2=e.unpack_s02_out2),containsValue(e.expr_s06_in1)&&(this.expr_227_in1=e.expr_s06_in1),containsValue(e.expr_s06_in2)&&(this.expr_227_in2=e.expr_s06_in2),containsValue(e.expr_s06_out1)&&(this.expr_227_out1=e.expr_s06_out1),containsValue(e.switchobj_a1_s01_onoff)&&(this.switchobj_06_onoff=e.switchobj_a1_s01_onoff),containsValue(e.receive_a1_s01_output_number)&&(this.receive_16_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_16_output_list=e.receive_a1_s01_output_list),containsValue(e.p_s01_target)&&(this.p_59_target=e.p_s01_target),containsValue(e.expr_s04_in1)&&(this.expr_228_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_228_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_228_out1=e.expr_s04_out1),containsValue(e.unpack_s01_out1)&&(this.unpack_16_out1=e.unpack_s01_out1),containsValue(e.unpack_s01_out2)&&(this.unpack_16_out2=e.unpack_s01_out2),containsValue(e.expr_s05_in1)&&(this.expr_229_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_229_in2=e.expr_s05_in2),containsValue(e.expr_s05_out1)&&(this.expr_229_out1=e.expr_s05_out1),containsValue(e.expr_s02_in1)&&(this.expr_230_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_230_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_230_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_231_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_231_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_231_out1=e.expr_s03_out1),containsValue(e.expr_s01_in1)&&(this.expr_232_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_232_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_232_out1=e.expr_s01_out1),containsValue(e.p_s03_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s03_audioProcessSampleCount),containsValue(e.p_s03_zeroBuffer)&&(this.zeroBuffer=e.p_s03_zeroBuffer),containsValue(e.p_s03_dummyBuffer)&&(this.dummyBuffer=e.p_s03_dummyBuffer),containsValue(e.p_s03_vs)&&(this.vs=e.p_s03_vs),containsValue(e.p_s03_maxvs)&&(this.maxvs=e.p_s03_maxvs),containsValue(e.p_s03_sr)&&(this.sr=e.p_s03_sr),containsValue(e.p_s03_invsr)&&(this.invsr=e.p_s03_invsr),containsValue(e.p_s03_noteNumber)&&(this.noteNumber=e.p_s03_noteNumber),containsValue(e.p_s03_isMuted)&&(this.isMuted=e.p_s03_isMuted)),this.p_59=new RNBOSubpatcher_453,this.p_59.setEngineAndPatcher(this.getEngine(),this),this.p_59.initialize(getSubState(e,\"p_s01\")),this.p_59.setParameterOffset(this.getParameterOffset(this.p_59))}getPreset(e){this.p_59.getPreset(getSubState(getSubState(e,\"__sps\"),\"scaled_envelope\"))}processTempoEvent(e,t){this.updateTime(e),this.p_59.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_59.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_59.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_59.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_59.getNumParameters()&&this.p_59.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_59.getNumParameters()?this.p_59.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_59.getNumParameters()}getParameterName(e){return(e-=0)<this.p_59.getNumParameters()?this.p_59.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_59.getNumParameters()?this.p_59.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_59.getNumParameters()&&this.p_59.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return this.p_59,0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_59.getNumParameters()?this.p_59.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_59.getNumParameters()?this.p_59.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_59.getNumParameters()?this.p_59.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s),this.p_59.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s),this.p_59.processListMessage(e,t,s,a)}processBangMessage(e,t,s){this.updateTime(s),this.p_59.processBangMessage(e,t,s)}resolveTag(e){var t=this.p_59.resolveTag(e);return t||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_59.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_464{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_71_nz_last=0,this.random_72_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_233_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_233_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_233_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_234_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_234_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_234_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_71_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_71_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_235_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_235_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_235_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_72_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_72_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_50_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_50_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s10_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s10_audioProcessSampleCount),containsValue(e.p_s10_zeroBuffer)&&(this.zeroBuffer=e.p_s10_zeroBuffer),containsValue(e.p_s10_dummyBuffer)&&(this.dummyBuffer=e.p_s10_dummyBuffer),containsValue(e.p_s10_vs)&&(this.vs=e.p_s10_vs),containsValue(e.p_s10_maxvs)&&(this.maxvs=e.p_s10_maxvs),containsValue(e.p_s10_sr)&&(this.sr=e.p_s10_sr),containsValue(e.p_s10_invsr)&&(this.invsr=e.p_s10_invsr),containsValue(e.random_s02_nz_last)&&(this.random_71_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_71_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_72_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_72_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s10_noteNumber)&&(this.noteNumber=e.p_s10_noteNumber),containsValue(e.p_s10_isMuted)&&(this.isMuted=e.p_s10_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_454{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_236_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_236_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_236_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_237_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_237_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_237_out1=e.expr_s01_out1),containsValue(e.scale_s01_input)&&(this.scale_09_input=e.scale_s01_input),containsValue(e.scale_s01_inlow)&&(this.scale_09_inlow=e.scale_s01_inlow),containsValue(e.scale_s01_inhigh)&&(this.scale_09_inhigh=e.scale_s01_inhigh),containsValue(e.scale_s01_outlow)&&(this.scale_09_outlow=e.scale_s01_outlow),containsValue(e.scale_s01_outhigh)&&(this.scale_09_outhigh=e.scale_s01_outhigh),containsValue(e.scale_s01_power)&&(this.scale_09_power=e.scale_s01_power),containsValue(e.scale_s01_out)&&(this.scale_09_out=e.scale_s01_out),containsValue(e.expr_s03_in1)&&(this.expr_238_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_238_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_238_out1=e.expr_s03_out1),containsValue(e.scale_s02_input)&&(this.scale_10_input=e.scale_s02_input),containsValue(e.scale_s02_inlow)&&(this.scale_10_inlow=e.scale_s02_inlow),containsValue(e.scale_s02_inhigh)&&(this.scale_10_inhigh=e.scale_s02_inhigh),containsValue(e.scale_s02_outlow)&&(this.scale_10_outlow=e.scale_s02_outlow),containsValue(e.scale_s02_outhigh)&&(this.scale_10_outhigh=e.scale_s02_outhigh),containsValue(e.scale_s02_power)&&(this.scale_10_power=e.scale_s02_power),containsValue(e.scale_s02_out)&&(this.scale_10_out=e.scale_s02_out),containsValue(e.expr_s04_in1)&&(this.expr_239_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_239_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_239_out1=e.expr_s04_out1),containsValue(e.expr_s05_in1)&&(this.expr_240_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_240_in2=e.expr_s05_in2),containsValue(e.expr_s05_in3)&&(this.expr_240_in3=e.expr_s05_in3),containsValue(e.expr_s05_out1)&&(this.expr_240_out1=e.expr_s05_out1),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_465{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0,this.p_60=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.unpack_s03_out1)&&(this.unpack_17_out1=e.unpack_s03_out1),containsValue(e.unpack_s03_out2)&&(this.unpack_17_out2=e.unpack_s03_out2),containsValue(e.pack_s01_in1)&&(this.pack_15_in1=e.pack_s01_in1),containsValue(e.pack_s01_in2)&&(this.pack_15_in2=e.pack_s01_in2),containsValue(e.unpack_s04_out1)&&(this.unpack_18_out1=e.unpack_s04_out1),containsValue(e.unpack_s04_out2)&&(this.unpack_18_out2=e.unpack_s04_out2),containsValue(e.receive_a1_s02_output_number)&&(this.receive_17_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_17_output_list=e.receive_a1_s02_output_list),containsValue(e.expr_s07_in1)&&(this.expr_241_in1=e.expr_s07_in1),containsValue(e.expr_s07_in2)&&(this.expr_241_in2=e.expr_s07_in2),containsValue(e.expr_s07_out1)&&(this.expr_241_out1=e.expr_s07_out1),containsValue(e.pack_a1_s01_in1)&&(this.pack_16_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_16_in2=e.pack_a1_s01_in2),containsValue(e.maximum_a1_s01_input)&&(this.maximum_07_input=e.maximum_a1_s01_input),containsValue(e.maximum_a1_s01_right)&&(this.maximum_07_right=e.maximum_a1_s01_right),containsValue(e.maximum_a1_s01_out)&&(this.maximum_07_out=e.maximum_a1_s01_out),containsValue(e.maximum_a1_s01_index)&&(this.maximum_07_index=e.maximum_a1_s01_index),containsValue(e.unpack_s02_out1)&&(this.unpack_19_out1=e.unpack_s02_out1),containsValue(e.unpack_s02_out2)&&(this.unpack_19_out2=e.unpack_s02_out2),containsValue(e.expr_s06_in1)&&(this.expr_242_in1=e.expr_s06_in1),containsValue(e.expr_s06_in2)&&(this.expr_242_in2=e.expr_s06_in2),containsValue(e.expr_s06_out1)&&(this.expr_242_out1=e.expr_s06_out1),containsValue(e.switchobj_a1_s01_onoff)&&(this.switchobj_07_onoff=e.switchobj_a1_s01_onoff),containsValue(e.receive_a1_s01_output_number)&&(this.receive_18_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_18_output_list=e.receive_a1_s01_output_list),containsValue(e.p_s01_target)&&(this.p_60_target=e.p_s01_target),containsValue(e.expr_s04_in1)&&(this.expr_243_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_243_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_243_out1=e.expr_s04_out1),containsValue(e.unpack_s01_out1)&&(this.unpack_20_out1=e.unpack_s01_out1),containsValue(e.unpack_s01_out2)&&(this.unpack_20_out2=e.unpack_s01_out2),containsValue(e.expr_s05_in1)&&(this.expr_244_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_244_in2=e.expr_s05_in2),containsValue(e.expr_s05_out1)&&(this.expr_244_out1=e.expr_s05_out1),containsValue(e.expr_s02_in1)&&(this.expr_245_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_245_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_245_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_246_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_246_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_246_out1=e.expr_s03_out1),containsValue(e.expr_s01_in1)&&(this.expr_247_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_247_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_247_out1=e.expr_s01_out1),containsValue(e.p_s02_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s02_audioProcessSampleCount),containsValue(e.p_s02_zeroBuffer)&&(this.zeroBuffer=e.p_s02_zeroBuffer),containsValue(e.p_s02_dummyBuffer)&&(this.dummyBuffer=e.p_s02_dummyBuffer),containsValue(e.p_s02_vs)&&(this.vs=e.p_s02_vs),containsValue(e.p_s02_maxvs)&&(this.maxvs=e.p_s02_maxvs),containsValue(e.p_s02_sr)&&(this.sr=e.p_s02_sr),containsValue(e.p_s02_invsr)&&(this.invsr=e.p_s02_invsr),containsValue(e.p_s02_noteNumber)&&(this.noteNumber=e.p_s02_noteNumber),containsValue(e.p_s02_isMuted)&&(this.isMuted=e.p_s02_isMuted)),this.p_60=new RNBOSubpatcher_454,this.p_60.setEngineAndPatcher(this.getEngine(),this),this.p_60.initialize(getSubState(e,\"p_s01\")),this.p_60.setParameterOffset(this.getParameterOffset(this.p_60))}getPreset(e){this.p_60.getPreset(getSubState(getSubState(e,\"__sps\"),\"scaled_envelope\"))}processTempoEvent(e,t){this.updateTime(e),this.p_60.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_60.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_60.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_60.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_60.getNumParameters()&&this.p_60.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_60.getNumParameters()?this.p_60.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_60.getNumParameters()}getParameterName(e){return(e-=0)<this.p_60.getNumParameters()?this.p_60.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_60.getNumParameters()?this.p_60.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_60.getNumParameters()&&this.p_60.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return this.p_60,0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_60.getNumParameters()?this.p_60.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_60.getNumParameters()?this.p_60.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_60.getNumParameters()?this.p_60.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s),this.p_60.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s),this.p_60.processListMessage(e,t,s,a)}processBangMessage(e,t,s){this.updateTime(s),this.p_60.processBangMessage(e,t,s)}resolveTag(e){var t=this.p_60.resolveTag(e);return t||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_60.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_466{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_73_nz_last=0,this.random_74_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_248_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_248_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_248_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_249_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_249_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_249_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_73_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_73_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_250_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_250_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_250_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_74_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_74_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_51_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_51_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s09_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s09_audioProcessSampleCount),containsValue(e.p_s09_zeroBuffer)&&(this.zeroBuffer=e.p_s09_zeroBuffer),containsValue(e.p_s09_dummyBuffer)&&(this.dummyBuffer=e.p_s09_dummyBuffer),containsValue(e.p_s09_vs)&&(this.vs=e.p_s09_vs),containsValue(e.p_s09_maxvs)&&(this.maxvs=e.p_s09_maxvs),containsValue(e.p_s09_sr)&&(this.sr=e.p_s09_sr),containsValue(e.p_s09_invsr)&&(this.invsr=e.p_s09_invsr),containsValue(e.random_s02_nz_last)&&(this.random_73_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_73_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_74_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_74_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s09_noteNumber)&&(this.noteNumber=e.p_s09_noteNumber),containsValue(e.p_s09_isMuted)&&(this.isMuted=e.p_s09_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_467{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_75_nz_last=0,this.random_76_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_251_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_251_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_251_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_252_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_252_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_252_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_75_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_75_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_253_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_253_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_253_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_76_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_76_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_52_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_52_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s08_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s08_audioProcessSampleCount),containsValue(e.p_s08_zeroBuffer)&&(this.zeroBuffer=e.p_s08_zeroBuffer),containsValue(e.p_s08_dummyBuffer)&&(this.dummyBuffer=e.p_s08_dummyBuffer),containsValue(e.p_s08_vs)&&(this.vs=e.p_s08_vs),containsValue(e.p_s08_maxvs)&&(this.maxvs=e.p_s08_maxvs),containsValue(e.p_s08_sr)&&(this.sr=e.p_s08_sr),containsValue(e.p_s08_invsr)&&(this.invsr=e.p_s08_invsr),containsValue(e.random_s02_nz_last)&&(this.random_75_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_75_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_76_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_76_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s08_noteNumber)&&(this.noteNumber=e.p_s08_noteNumber),containsValue(e.p_s08_isMuted)&&(this.isMuted=e.p_s08_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_455{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_254_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_254_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_254_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_255_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_255_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_255_out1=e.expr_s01_out1),containsValue(e.scale_s01_input)&&(this.scale_11_input=e.scale_s01_input),containsValue(e.scale_s01_inlow)&&(this.scale_11_inlow=e.scale_s01_inlow),containsValue(e.scale_s01_inhigh)&&(this.scale_11_inhigh=e.scale_s01_inhigh),containsValue(e.scale_s01_outlow)&&(this.scale_11_outlow=e.scale_s01_outlow),containsValue(e.scale_s01_outhigh)&&(this.scale_11_outhigh=e.scale_s01_outhigh),containsValue(e.scale_s01_power)&&(this.scale_11_power=e.scale_s01_power),containsValue(e.scale_s01_out)&&(this.scale_11_out=e.scale_s01_out),containsValue(e.expr_s03_in1)&&(this.expr_256_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_256_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_256_out1=e.expr_s03_out1),containsValue(e.scale_s02_input)&&(this.scale_12_input=e.scale_s02_input),containsValue(e.scale_s02_inlow)&&(this.scale_12_inlow=e.scale_s02_inlow),containsValue(e.scale_s02_inhigh)&&(this.scale_12_inhigh=e.scale_s02_inhigh),containsValue(e.scale_s02_outlow)&&(this.scale_12_outlow=e.scale_s02_outlow),containsValue(e.scale_s02_outhigh)&&(this.scale_12_outhigh=e.scale_s02_outhigh),containsValue(e.scale_s02_power)&&(this.scale_12_power=e.scale_s02_power),containsValue(e.scale_s02_out)&&(this.scale_12_out=e.scale_s02_out),containsValue(e.expr_s04_in1)&&(this.expr_257_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_257_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_257_out1=e.expr_s04_out1),containsValue(e.expr_s05_in1)&&(this.expr_258_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_258_in2=e.expr_s05_in2),containsValue(e.expr_s05_in3)&&(this.expr_258_in3=e.expr_s05_in3),containsValue(e.expr_s05_out1)&&(this.expr_258_out1=e.expr_s05_out1),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_468{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0,this.p_61=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.unpack_s03_out1)&&(this.unpack_21_out1=e.unpack_s03_out1),containsValue(e.unpack_s03_out2)&&(this.unpack_21_out2=e.unpack_s03_out2),containsValue(e.pack_s01_in1)&&(this.pack_17_in1=e.pack_s01_in1),containsValue(e.pack_s01_in2)&&(this.pack_17_in2=e.pack_s01_in2),containsValue(e.unpack_s04_out1)&&(this.unpack_22_out1=e.unpack_s04_out1),containsValue(e.unpack_s04_out2)&&(this.unpack_22_out2=e.unpack_s04_out2),containsValue(e.receive_a1_s02_output_number)&&(this.receive_19_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_19_output_list=e.receive_a1_s02_output_list),containsValue(e.expr_s07_in1)&&(this.expr_259_in1=e.expr_s07_in1),containsValue(e.expr_s07_in2)&&(this.expr_259_in2=e.expr_s07_in2),containsValue(e.expr_s07_out1)&&(this.expr_259_out1=e.expr_s07_out1),containsValue(e.pack_a1_s01_in1)&&(this.pack_18_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_18_in2=e.pack_a1_s01_in2),containsValue(e.maximum_a1_s01_input)&&(this.maximum_08_input=e.maximum_a1_s01_input),containsValue(e.maximum_a1_s01_right)&&(this.maximum_08_right=e.maximum_a1_s01_right),containsValue(e.maximum_a1_s01_out)&&(this.maximum_08_out=e.maximum_a1_s01_out),containsValue(e.maximum_a1_s01_index)&&(this.maximum_08_index=e.maximum_a1_s01_index),containsValue(e.unpack_s02_out1)&&(this.unpack_23_out1=e.unpack_s02_out1),containsValue(e.unpack_s02_out2)&&(this.unpack_23_out2=e.unpack_s02_out2),containsValue(e.expr_s06_in1)&&(this.expr_260_in1=e.expr_s06_in1),containsValue(e.expr_s06_in2)&&(this.expr_260_in2=e.expr_s06_in2),containsValue(e.expr_s06_out1)&&(this.expr_260_out1=e.expr_s06_out1),containsValue(e.switchobj_a1_s01_onoff)&&(this.switchobj_08_onoff=e.switchobj_a1_s01_onoff),containsValue(e.receive_a1_s01_output_number)&&(this.receive_20_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_20_output_list=e.receive_a1_s01_output_list),containsValue(e.p_s01_target)&&(this.p_61_target=e.p_s01_target),containsValue(e.expr_s04_in1)&&(this.expr_261_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_261_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_261_out1=e.expr_s04_out1),containsValue(e.unpack_s01_out1)&&(this.unpack_24_out1=e.unpack_s01_out1),containsValue(e.unpack_s01_out2)&&(this.unpack_24_out2=e.unpack_s01_out2),containsValue(e.expr_s05_in1)&&(this.expr_262_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_262_in2=e.expr_s05_in2),containsValue(e.expr_s05_out1)&&(this.expr_262_out1=e.expr_s05_out1),containsValue(e.expr_s02_in1)&&(this.expr_263_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_263_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_263_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_264_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_264_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_264_out1=e.expr_s03_out1),containsValue(e.expr_s01_in1)&&(this.expr_265_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_265_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_265_out1=e.expr_s01_out1),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted)),this.p_61=new RNBOSubpatcher_455,this.p_61.setEngineAndPatcher(this.getEngine(),this),this.p_61.initialize(getSubState(e,\"p_s01\")),this.p_61.setParameterOffset(this.getParameterOffset(this.p_61))}getPreset(e){this.p_61.getPreset(getSubState(getSubState(e,\"__sps\"),\"scaled_envelope\"))}processTempoEvent(e,t){this.updateTime(e),this.p_61.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_61.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_61.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_61.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_61.getNumParameters()&&this.p_61.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_61.getNumParameters()?this.p_61.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_61.getNumParameters()}getParameterName(e){return(e-=0)<this.p_61.getNumParameters()?this.p_61.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_61.getNumParameters()?this.p_61.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_61.getNumParameters()&&this.p_61.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return this.p_61,0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_61.getNumParameters()?this.p_61.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_61.getNumParameters()?this.p_61.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_61.getNumParameters()?this.p_61.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s),this.p_61.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s),this.p_61.processListMessage(e,t,s,a)}processBangMessage(e,t,s){this.updateTime(s),this.p_61.processBangMessage(e,t,s)}resolveTag(e){var t=this.p_61.resolveTag(e);return t||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_61.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_469{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_77_nz_last=0,this.random_78_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_266_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_266_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_266_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_267_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_267_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_267_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_77_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_77_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_268_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_268_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_268_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_78_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_78_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_53_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_53_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s07_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s07_audioProcessSampleCount),containsValue(e.p_s07_zeroBuffer)&&(this.zeroBuffer=e.p_s07_zeroBuffer),containsValue(e.p_s07_dummyBuffer)&&(this.dummyBuffer=e.p_s07_dummyBuffer),containsValue(e.p_s07_vs)&&(this.vs=e.p_s07_vs),containsValue(e.p_s07_maxvs)&&(this.maxvs=e.p_s07_maxvs),containsValue(e.p_s07_sr)&&(this.sr=e.p_s07_sr),containsValue(e.p_s07_invsr)&&(this.invsr=e.p_s07_invsr),containsValue(e.random_s02_nz_last)&&(this.random_77_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_77_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_78_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_78_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s07_noteNumber)&&(this.noteNumber=e.p_s07_noteNumber),containsValue(e.p_s07_isMuted)&&(this.isMuted=e.p_s07_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_470{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_79_nz_last=0,this.random_80_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_269_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_269_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_269_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_270_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_270_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_270_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_79_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_79_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_271_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_271_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_271_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_80_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_80_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_54_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_54_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s06_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s06_audioProcessSampleCount),containsValue(e.p_s06_zeroBuffer)&&(this.zeroBuffer=e.p_s06_zeroBuffer),containsValue(e.p_s06_dummyBuffer)&&(this.dummyBuffer=e.p_s06_dummyBuffer),containsValue(e.p_s06_vs)&&(this.vs=e.p_s06_vs),containsValue(e.p_s06_maxvs)&&(this.maxvs=e.p_s06_maxvs),containsValue(e.p_s06_sr)&&(this.sr=e.p_s06_sr),containsValue(e.p_s06_invsr)&&(this.invsr=e.p_s06_invsr),containsValue(e.random_s02_nz_last)&&(this.random_79_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_79_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_80_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_80_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s06_noteNumber)&&(this.noteNumber=e.p_s06_noteNumber),containsValue(e.p_s06_isMuted)&&(this.isMuted=e.p_s06_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_471{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_81_nz_last=0,this.random_82_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_272_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_272_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_272_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_273_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_273_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_273_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_81_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_81_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_274_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_274_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_274_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_82_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_82_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_55_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_55_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s05_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s05_audioProcessSampleCount),containsValue(e.p_s05_zeroBuffer)&&(this.zeroBuffer=e.p_s05_zeroBuffer),containsValue(e.p_s05_dummyBuffer)&&(this.dummyBuffer=e.p_s05_dummyBuffer),containsValue(e.p_s05_vs)&&(this.vs=e.p_s05_vs),containsValue(e.p_s05_maxvs)&&(this.maxvs=e.p_s05_maxvs),containsValue(e.p_s05_sr)&&(this.sr=e.p_s05_sr),containsValue(e.p_s05_invsr)&&(this.invsr=e.p_s05_invsr),containsValue(e.random_s02_nz_last)&&(this.random_81_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_81_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_82_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_82_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s05_noteNumber)&&(this.noteNumber=e.p_s05_noteNumber),containsValue(e.p_s05_isMuted)&&(this.isMuted=e.p_s05_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_472{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.random_83_nz_last=0,this.random_84_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_275_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_275_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_275_out1=e.expr_s02_out1),containsValue(e.expr_s01_in1)&&(this.expr_276_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_276_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_276_out1=e.expr_s01_out1),containsValue(e.random_s02_limit)&&(this.random_83_limit=e.random_s02_limit),containsValue(e.random_s02_seed)&&(this.random_83_seed=e.random_s02_seed),containsValue(e.expr_s03_in1)&&(this.expr_277_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_277_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_277_out1=e.expr_s03_out1),containsValue(e.random_s01_limit)&&(this.random_84_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_84_seed=e.random_s01_seed),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_56_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_56_lookup=e.listlookup_a1_s01_lookup),containsValue(e.p_s04_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s04_audioProcessSampleCount),containsValue(e.p_s04_zeroBuffer)&&(this.zeroBuffer=e.p_s04_zeroBuffer),containsValue(e.p_s04_dummyBuffer)&&(this.dummyBuffer=e.p_s04_dummyBuffer),containsValue(e.p_s04_vs)&&(this.vs=e.p_s04_vs),containsValue(e.p_s04_maxvs)&&(this.maxvs=e.p_s04_maxvs),containsValue(e.p_s04_sr)&&(this.sr=e.p_s04_sr),containsValue(e.p_s04_invsr)&&(this.invsr=e.p_s04_invsr),containsValue(e.random_s02_nz_last)&&(this.random_83_nz_last=e.random_s02_nz_last),containsValue(e.random_s02_nz_recip)&&(this.random_83_nz_recip=e.random_s02_nz_recip),containsValue(e.random_s01_nz_last)&&(this.random_84_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_84_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s04_noteNumber)&&(this.noteNumber=e.p_s04_noteNumber),containsValue(e.p_s04_isMuted)&&(this.isMuted=e.p_s04_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_487{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.mtof_05_innerMtoF_buffer=0,this.mtof_05_innerScala_internal=!0,this.mtof_05_innerScala_KBM_MAP_OFFSET=7,this.mtof_05_innerScala_lastValid=!1,this.mtof_06_innerMtoF_buffer=0,this.mtof_06_innerScala_internal=!0,this.mtof_06_innerScala_KBM_MAP_OFFSET=7,this.mtof_06_innerScala_lastValid=!1,this.mtof_07_innerMtoF_buffer=0,this.mtof_07_innerScala_internal=!0,this.mtof_07_innerScala_KBM_MAP_OFFSET=7,this.mtof_07_innerScala_lastValid=!1,this.mtof_08_innerMtoF_buffer=0,this.mtof_08_innerScala_internal=!0,this.mtof_08_innerScala_KBM_MAP_OFFSET=7,this.mtof_08_innerScala_lastValid=!1,this.voiceIndex=0,this.parameterOffset=0,this.p_62=new Array,this.p_63=new Array,this.p_64=new Array,this.p_65=new Array,this.p_66=new Array,this.p_67=new Array,this.p_68=new Array,this.p_69=new Array,this.p_70=new Array,this.p_71=new Array,this.p_72=new Array,this.p_73=new Array,this.p_74=new Array,this.p_75=new Array,this.p_76=new Array,this.p_77=new Array,this.p_78=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.p_s17_target)&&(this.p_62_target=e.p_s17_target),containsValue(e.expr_s07_in1)&&(this.expr_278_in1=e.expr_s07_in1),containsValue(e.expr_s07_in2)&&(this.expr_278_in2=e.expr_s07_in2),containsValue(e.expr_s07_in3)&&(this.expr_278_in3=e.expr_s07_in3),containsValue(e.expr_s07_out1)&&(this.expr_278_out1=e.expr_s07_out1),containsValue(e.mtof_s01_midivalue)&&(this.mtof_05_midivalue=e.mtof_s01_midivalue),containsValue(e.mtof_s01_scale)&&(this.mtof_05_scale=e.mtof_s01_scale),containsValue(e.mtof_s01_map)&&(this.mtof_05_map=e.mtof_s01_map),containsValue(e.mtof_s01_base)&&(this.mtof_05_base=e.mtof_s01_base),containsValue(e.join_s01_in0)&&(this.join_04_in0=e.join_s01_in0),containsValue(e.join_s01_in1)&&(this.join_04_in1=e.join_s01_in1),containsValue(e.join_s01_in2)&&(this.join_04_in2=e.join_s01_in2),containsValue(e.join_s01_in3)&&(this.join_04_in3=e.join_s01_in3),containsValue(e.join_s01_in4)&&(this.join_04_in4=e.join_s01_in4),containsValue(e.join_s01_in5)&&(this.join_04_in5=e.join_s01_in5),containsValue(e.join_s01_in6)&&(this.join_04_in6=e.join_s01_in6),containsValue(e.join_s01_in7)&&(this.join_04_in7=e.join_s01_in7),containsValue(e.join_s01_in8)&&(this.join_04_in8=e.join_s01_in8),containsValue(e.join_s01_in9)&&(this.join_04_in9=e.join_s01_in9),containsValue(e.join_s01_in10)&&(this.join_04_in10=e.join_s01_in10),containsValue(e.join_s01_in11)&&(this.join_04_in11=e.join_s01_in11),containsValue(e.join_s01_in12)&&(this.join_04_in12=e.join_s01_in12),containsValue(e.join_s01_in13)&&(this.join_04_in13=e.join_s01_in13),containsValue(e.p_s16_target)&&(this.p_63_target=e.p_s16_target),containsValue(e.p_s15_target)&&(this.p_64_target=e.p_s15_target),containsValue(e.p_s14_target)&&(this.p_65_target=e.p_s14_target),containsValue(e.expr_s06_in1)&&(this.expr_279_in1=e.expr_s06_in1),containsValue(e.expr_s06_in2)&&(this.expr_279_in2=e.expr_s06_in2),containsValue(e.expr_s06_in3)&&(this.expr_279_in3=e.expr_s06_in3),containsValue(e.expr_s06_out1)&&(this.expr_279_out1=e.expr_s06_out1),containsValue(e.p_s13_target)&&(this.p_66_target=e.p_s13_target),containsValue(e.mtof_s04_midivalue)&&(this.mtof_06_midivalue=e.mtof_s04_midivalue),containsValue(e.mtof_s04_scale)&&(this.mtof_06_scale=e.mtof_s04_scale),containsValue(e.mtof_s04_map)&&(this.mtof_06_map=e.mtof_s04_map),containsValue(e.mtof_s04_base)&&(this.mtof_06_base=e.mtof_s04_base),containsValue(e.expr_s05_in1)&&(this.expr_280_in1=e.expr_s05_in1),containsValue(e.expr_s05_in2)&&(this.expr_280_in2=e.expr_s05_in2),containsValue(e.expr_s05_in3)&&(this.expr_280_in3=e.expr_s05_in3),containsValue(e.expr_s05_out1)&&(this.expr_280_out1=e.expr_s05_out1),containsValue(e.mtof_s03_midivalue)&&(this.mtof_07_midivalue=e.mtof_s03_midivalue),containsValue(e.mtof_s03_scale)&&(this.mtof_07_scale=e.mtof_s03_scale),containsValue(e.mtof_s03_map)&&(this.mtof_07_map=e.mtof_s03_map),containsValue(e.mtof_s03_base)&&(this.mtof_07_base=e.mtof_s03_base),containsValue(e.p_s12_target)&&(this.p_67_target=e.p_s12_target),containsValue(e.expr_s04_in1)&&(this.expr_281_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_281_in2=e.expr_s04_in2),containsValue(e.expr_s04_in3)&&(this.expr_281_in3=e.expr_s04_in3),containsValue(e.expr_s04_out1)&&(this.expr_281_out1=e.expr_s04_out1),containsValue(e.mtof_s02_midivalue)&&(this.mtof_08_midivalue=e.mtof_s02_midivalue),containsValue(e.mtof_s02_scale)&&(this.mtof_08_scale=e.mtof_s02_scale),containsValue(e.mtof_s02_map)&&(this.mtof_08_map=e.mtof_s02_map),containsValue(e.mtof_s02_base)&&(this.mtof_08_base=e.mtof_s02_base),containsValue(e.p_s11_target)&&(this.p_68_target=e.p_s11_target),containsValue(e.p_s03_target)&&(this.p_69_target=e.p_s03_target),containsValue(e.expr_s03_in1)&&(this.expr_282_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_282_in2=e.expr_s03_in2),containsValue(e.expr_s03_in3)&&(this.expr_282_in3=e.expr_s03_in3),containsValue(e.expr_s03_out1)&&(this.expr_282_out1=e.expr_s03_out1),containsValue(e.p_s10_target)&&(this.p_70_target=e.p_s10_target),containsValue(e.p_s02_target)&&(this.p_71_target=e.p_s02_target),containsValue(e.expr_s02_in1)&&(this.expr_283_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_283_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_283_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_283_out1=e.expr_s02_out1),containsValue(e.p_s09_target)&&(this.p_72_target=e.p_s09_target),containsValue(e.expr_s01_in1)&&(this.expr_284_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_284_in2=e.expr_s01_in2),containsValue(e.expr_s01_in3)&&(this.expr_284_in3=e.expr_s01_in3),containsValue(e.expr_s01_out1)&&(this.expr_284_out1=e.expr_s01_out1),containsValue(e.p_s08_target)&&(this.p_73_target=e.p_s08_target),containsValue(e.p_s01_target)&&(this.p_74_target=e.p_s01_target),containsValue(e.p_s07_target)&&(this.p_75_target=e.p_s07_target),containsValue(e.p_s06_target)&&(this.p_76_target=e.p_s06_target),containsValue(e.p_s05_target)&&(this.p_77_target=e.p_s05_target),containsValue(e.p_s04_target)&&(this.p_78_target=e.p_s04_target),containsValue(e.p_s07_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s07_audioProcessSampleCount),containsValue(e.p_s07_zeroBuffer)&&(this.zeroBuffer=e.p_s07_zeroBuffer),containsValue(e.p_s07_dummyBuffer)&&(this.dummyBuffer=e.p_s07_dummyBuffer),containsValue(e.p_s07_vs)&&(this.vs=e.p_s07_vs),containsValue(e.p_s07_maxvs)&&(this.maxvs=e.p_s07_maxvs),containsValue(e.p_s07_sr)&&(this.sr=e.p_s07_sr),containsValue(e.p_s07_invsr)&&(this.invsr=e.p_s07_invsr),containsValue(e.mtof_s01_innerMtoF_lastInValue)&&(this.mtof_05_innerMtoF_lastInValue=e.mtof_s01_innerMtoF_lastInValue),containsValue(e.mtof_s01_innerMtoF_lastOutValue)&&(this.mtof_05_innerMtoF_lastOutValue=e.mtof_s01_innerMtoF_lastOutValue),containsValue(e.mtof_s01_innerMtoF_lastTuning)&&(this.mtof_05_innerMtoF_lastTuning=e.mtof_s01_innerMtoF_lastTuning),containsValue(e.mtof_s01_innerScala_internal)&&(this.mtof_05_innerScala_internal=e.mtof_s01_innerScala_internal),containsValue(e.mtof_s01_innerScala_lastValid)&&(this.mtof_05_innerScala_lastValid=e.mtof_s01_innerScala_lastValid),containsValue(e.mtof_s01_innerScala_lastNote)&&(this.mtof_05_innerScala_lastNote=e.mtof_s01_innerScala_lastNote),containsValue(e.mtof_s01_innerScala_lastFreq)&&(this.mtof_05_innerScala_lastFreq=e.mtof_s01_innerScala_lastFreq),containsValue(e.mtof_s01_innerScala_sclEntryCount)&&(this.mtof_05_innerScala_sclEntryCount=e.mtof_s01_innerScala_sclEntryCount),containsValue(e.mtof_s01_innerScala_sclOctaveMul)&&(this.mtof_05_innerScala_sclOctaveMul=e.mtof_s01_innerScala_sclOctaveMul),containsValue(e.mtof_s01_innerScala_sclExpMul)&&(this.mtof_05_innerScala_sclExpMul=e.mtof_s01_innerScala_sclExpMul),containsValue(e.mtof_s01_innerScala_kbmValid)&&(this.mtof_05_innerScala_kbmValid=e.mtof_s01_innerScala_kbmValid),containsValue(e.mtof_s01_innerScala_kbmMid)&&(this.mtof_05_innerScala_kbmMid=e.mtof_s01_innerScala_kbmMid),containsValue(e.mtof_s01_innerScala_kbmRefNum)&&(this.mtof_05_innerScala_kbmRefNum=e.mtof_s01_innerScala_kbmRefNum),containsValue(e.mtof_s01_innerScala_kbmRefFreq)&&(this.mtof_05_innerScala_kbmRefFreq=e.mtof_s01_innerScala_kbmRefFreq),containsValue(e.mtof_s01_innerScala_kbmSize)&&(this.mtof_05_innerScala_kbmSize=e.mtof_s01_innerScala_kbmSize),containsValue(e.mtof_s01_innerScala_kbmMin)&&(this.mtof_05_innerScala_kbmMin=e.mtof_s01_innerScala_kbmMin),containsValue(e.mtof_s01_innerScala_kbmMax)&&(this.mtof_05_innerScala_kbmMax=e.mtof_s01_innerScala_kbmMax),containsValue(e.mtof_s01_innerScala_kbmOctaveDegree)&&(this.mtof_05_innerScala_kbmOctaveDegree=e.mtof_s01_innerScala_kbmOctaveDegree),containsValue(e.mtof_s01_innerScala_kbmMapSize)&&(this.mtof_05_innerScala_kbmMapSize=e.mtof_s01_innerScala_kbmMapSize),containsValue(e.mtof_s01_innerScala_refFreq)&&(this.mtof_05_innerScala_refFreq=e.mtof_s01_innerScala_refFreq),containsValue(e.mtof_s04_innerMtoF_lastInValue)&&(this.mtof_06_innerMtoF_lastInValue=e.mtof_s04_innerMtoF_lastInValue),containsValue(e.mtof_s04_innerMtoF_lastOutValue)&&(this.mtof_06_innerMtoF_lastOutValue=e.mtof_s04_innerMtoF_lastOutValue),containsValue(e.mtof_s04_innerMtoF_lastTuning)&&(this.mtof_06_innerMtoF_lastTuning=e.mtof_s04_innerMtoF_lastTuning),containsValue(e.mtof_s04_innerScala_internal)&&(this.mtof_06_innerScala_internal=e.mtof_s04_innerScala_internal),containsValue(e.mtof_s04_innerScala_lastValid)&&(this.mtof_06_innerScala_lastValid=e.mtof_s04_innerScala_lastValid),containsValue(e.mtof_s04_innerScala_lastNote)&&(this.mtof_06_innerScala_lastNote=e.mtof_s04_innerScala_lastNote),containsValue(e.mtof_s04_innerScala_lastFreq)&&(this.mtof_06_innerScala_lastFreq=e.mtof_s04_innerScala_lastFreq),containsValue(e.mtof_s04_innerScala_sclEntryCount)&&(this.mtof_06_innerScala_sclEntryCount=e.mtof_s04_innerScala_sclEntryCount),containsValue(e.mtof_s04_innerScala_sclOctaveMul)&&(this.mtof_06_innerScala_sclOctaveMul=e.mtof_s04_innerScala_sclOctaveMul),containsValue(e.mtof_s04_innerScala_sclExpMul)&&(this.mtof_06_innerScala_sclExpMul=e.mtof_s04_innerScala_sclExpMul),containsValue(e.mtof_s04_innerScala_kbmValid)&&(this.mtof_06_innerScala_kbmValid=e.mtof_s04_innerScala_kbmValid),containsValue(e.mtof_s04_innerScala_kbmMid)&&(this.mtof_06_innerScala_kbmMid=e.mtof_s04_innerScala_kbmMid),containsValue(e.mtof_s04_innerScala_kbmRefNum)&&(this.mtof_06_innerScala_kbmRefNum=e.mtof_s04_innerScala_kbmRefNum),containsValue(e.mtof_s04_innerScala_kbmRefFreq)&&(this.mtof_06_innerScala_kbmRefFreq=e.mtof_s04_innerScala_kbmRefFreq),containsValue(e.mtof_s04_innerScala_kbmSize)&&(this.mtof_06_innerScala_kbmSize=e.mtof_s04_innerScala_kbmSize),containsValue(e.mtof_s04_innerScala_kbmMin)&&(this.mtof_06_innerScala_kbmMin=e.mtof_s04_innerScala_kbmMin),containsValue(e.mtof_s04_innerScala_kbmMax)&&(this.mtof_06_innerScala_kbmMax=e.mtof_s04_innerScala_kbmMax),containsValue(e.mtof_s04_innerScala_kbmOctaveDegree)&&(this.mtof_06_innerScala_kbmOctaveDegree=e.mtof_s04_innerScala_kbmOctaveDegree),containsValue(e.mtof_s04_innerScala_kbmMapSize)&&(this.mtof_06_innerScala_kbmMapSize=e.mtof_s04_innerScala_kbmMapSize),containsValue(e.mtof_s04_innerScala_refFreq)&&(this.mtof_06_innerScala_refFreq=e.mtof_s04_innerScala_refFreq),containsValue(e.mtof_s03_innerMtoF_lastInValue)&&(this.mtof_07_innerMtoF_lastInValue=e.mtof_s03_innerMtoF_lastInValue),containsValue(e.mtof_s03_innerMtoF_lastOutValue)&&(this.mtof_07_innerMtoF_lastOutValue=e.mtof_s03_innerMtoF_lastOutValue),containsValue(e.mtof_s03_innerMtoF_lastTuning)&&(this.mtof_07_innerMtoF_lastTuning=e.mtof_s03_innerMtoF_lastTuning),containsValue(e.mtof_s03_innerScala_internal)&&(this.mtof_07_innerScala_internal=e.mtof_s03_innerScala_internal),containsValue(e.mtof_s03_innerScala_lastValid)&&(this.mtof_07_innerScala_lastValid=e.mtof_s03_innerScala_lastValid),containsValue(e.mtof_s03_innerScala_lastNote)&&(this.mtof_07_innerScala_lastNote=e.mtof_s03_innerScala_lastNote),containsValue(e.mtof_s03_innerScala_lastFreq)&&(this.mtof_07_innerScala_lastFreq=e.mtof_s03_innerScala_lastFreq),containsValue(e.mtof_s03_innerScala_sclEntryCount)&&(this.mtof_07_innerScala_sclEntryCount=e.mtof_s03_innerScala_sclEntryCount),containsValue(e.mtof_s03_innerScala_sclOctaveMul)&&(this.mtof_07_innerScala_sclOctaveMul=e.mtof_s03_innerScala_sclOctaveMul),containsValue(e.mtof_s03_innerScala_sclExpMul)&&(this.mtof_07_innerScala_sclExpMul=e.mtof_s03_innerScala_sclExpMul),containsValue(e.mtof_s03_innerScala_kbmValid)&&(this.mtof_07_innerScala_kbmValid=e.mtof_s03_innerScala_kbmValid),containsValue(e.mtof_s03_innerScala_kbmMid)&&(this.mtof_07_innerScala_kbmMid=e.mtof_s03_innerScala_kbmMid),containsValue(e.mtof_s03_innerScala_kbmRefNum)&&(this.mtof_07_innerScala_kbmRefNum=e.mtof_s03_innerScala_kbmRefNum),containsValue(e.mtof_s03_innerScala_kbmRefFreq)&&(this.mtof_07_innerScala_kbmRefFreq=e.mtof_s03_innerScala_kbmRefFreq),containsValue(e.mtof_s03_innerScala_kbmSize)&&(this.mtof_07_innerScala_kbmSize=e.mtof_s03_innerScala_kbmSize),containsValue(e.mtof_s03_innerScala_kbmMin)&&(this.mtof_07_innerScala_kbmMin=e.mtof_s03_innerScala_kbmMin),containsValue(e.mtof_s03_innerScala_kbmMax)&&(this.mtof_07_innerScala_kbmMax=e.mtof_s03_innerScala_kbmMax),containsValue(e.mtof_s03_innerScala_kbmOctaveDegree)&&(this.mtof_07_innerScala_kbmOctaveDegree=e.mtof_s03_innerScala_kbmOctaveDegree),containsValue(e.mtof_s03_innerScala_kbmMapSize)&&(this.mtof_07_innerScala_kbmMapSize=e.mtof_s03_innerScala_kbmMapSize),containsValue(e.mtof_s03_innerScala_refFreq)&&(this.mtof_07_innerScala_refFreq=e.mtof_s03_innerScala_refFreq),containsValue(e.mtof_s02_innerMtoF_lastInValue)&&(this.mtof_08_innerMtoF_lastInValue=e.mtof_s02_innerMtoF_lastInValue),containsValue(e.mtof_s02_innerMtoF_lastOutValue)&&(this.mtof_08_innerMtoF_lastOutValue=e.mtof_s02_innerMtoF_lastOutValue),containsValue(e.mtof_s02_innerMtoF_lastTuning)&&(this.mtof_08_innerMtoF_lastTuning=e.mtof_s02_innerMtoF_lastTuning),containsValue(e.mtof_s02_innerScala_internal)&&(this.mtof_08_innerScala_internal=e.mtof_s02_innerScala_internal),containsValue(e.mtof_s02_innerScala_lastValid)&&(this.mtof_08_innerScala_lastValid=e.mtof_s02_innerScala_lastValid),containsValue(e.mtof_s02_innerScala_lastNote)&&(this.mtof_08_innerScala_lastNote=e.mtof_s02_innerScala_lastNote),containsValue(e.mtof_s02_innerScala_lastFreq)&&(this.mtof_08_innerScala_lastFreq=e.mtof_s02_innerScala_lastFreq),containsValue(e.mtof_s02_innerScala_sclEntryCount)&&(this.mtof_08_innerScala_sclEntryCount=e.mtof_s02_innerScala_sclEntryCount),containsValue(e.mtof_s02_innerScala_sclOctaveMul)&&(this.mtof_08_innerScala_sclOctaveMul=e.mtof_s02_innerScala_sclOctaveMul),containsValue(e.mtof_s02_innerScala_sclExpMul)&&(this.mtof_08_innerScala_sclExpMul=e.mtof_s02_innerScala_sclExpMul),containsValue(e.mtof_s02_innerScala_kbmValid)&&(this.mtof_08_innerScala_kbmValid=e.mtof_s02_innerScala_kbmValid),containsValue(e.mtof_s02_innerScala_kbmMid)&&(this.mtof_08_innerScala_kbmMid=e.mtof_s02_innerScala_kbmMid),containsValue(e.mtof_s02_innerScala_kbmRefNum)&&(this.mtof_08_innerScala_kbmRefNum=e.mtof_s02_innerScala_kbmRefNum),containsValue(e.mtof_s02_innerScala_kbmRefFreq)&&(this.mtof_08_innerScala_kbmRefFreq=e.mtof_s02_innerScala_kbmRefFreq),containsValue(e.mtof_s02_innerScala_kbmSize)&&(this.mtof_08_innerScala_kbmSize=e.mtof_s02_innerScala_kbmSize),containsValue(e.mtof_s02_innerScala_kbmMin)&&(this.mtof_08_innerScala_kbmMin=e.mtof_s02_innerScala_kbmMin),containsValue(e.mtof_s02_innerScala_kbmMax)&&(this.mtof_08_innerScala_kbmMax=e.mtof_s02_innerScala_kbmMax),containsValue(e.mtof_s02_innerScala_kbmOctaveDegree)&&(this.mtof_08_innerScala_kbmOctaveDegree=e.mtof_s02_innerScala_kbmOctaveDegree),containsValue(e.mtof_s02_innerScala_kbmMapSize)&&(this.mtof_08_innerScala_kbmMapSize=e.mtof_s02_innerScala_kbmMapSize),containsValue(e.mtof_s02_innerScala_refFreq)&&(this.mtof_08_innerScala_refFreq=e.mtof_s02_innerScala_refFreq),containsValue(e.p_s07_noteNumber)&&(this.noteNumber=e.p_s07_noteNumber),containsValue(e.p_s07_isMuted)&&(this.isMuted=e.p_s07_isMuted)),this.p_62=new RNBOSubpatcher_456,this.p_62.setEngineAndPatcher(this.getEngine(),this),this.p_62.initialize(getSubState(e,\"p_s17\")),this.p_62.setParameterOffset(this.getParameterOffset(this.p_62)),this.p_63=new RNBOSubpatcher_457,this.p_63.setEngineAndPatcher(this.getEngine(),this),this.p_63.initialize(getSubState(e,\"p_s16\")),this.p_63.setParameterOffset(this.getParameterOffset(this.p_63)),this.p_64=new RNBOSubpatcher_458,this.p_64.setEngineAndPatcher(this.getEngine(),this),this.p_64.initialize(getSubState(e,\"p_s15\")),this.p_64.setParameterOffset(this.getParameterOffset(this.p_64)),this.p_65=new RNBOSubpatcher_459,this.p_65.setEngineAndPatcher(this.getEngine(),this),this.p_65.initialize(getSubState(e,\"p_s14\")),this.p_65.setParameterOffset(this.getParameterOffset(this.p_65)),this.p_66=new RNBOSubpatcher_460,this.p_66.setEngineAndPatcher(this.getEngine(),this),this.p_66.initialize(getSubState(e,\"p_s13\")),this.p_66.setParameterOffset(this.getParameterOffset(this.p_66)),this.p_67=new RNBOSubpatcher_461,this.p_67.setEngineAndPatcher(this.getEngine(),this),this.p_67.initialize(getSubState(e,\"p_s12\")),this.p_67.setParameterOffset(this.getParameterOffset(this.p_67)),this.p_68=new RNBOSubpatcher_462,this.p_68.setEngineAndPatcher(this.getEngine(),this),this.p_68.initialize(getSubState(e,\"p_s11\")),this.p_68.setParameterOffset(this.getParameterOffset(this.p_68)),this.p_69=new RNBOSubpatcher_463,this.p_69.setEngineAndPatcher(this.getEngine(),this),this.p_69.initialize(getSubState(e,\"p_s03\")),this.p_69.setParameterOffset(this.getParameterOffset(this.p_69)),this.p_70=new RNBOSubpatcher_464,this.p_70.setEngineAndPatcher(this.getEngine(),this),this.p_70.initialize(getSubState(e,\"p_s10\")),this.p_70.setParameterOffset(this.getParameterOffset(this.p_70)),this.p_71=new RNBOSubpatcher_465,this.p_71.setEngineAndPatcher(this.getEngine(),this),this.p_71.initialize(getSubState(e,\"p_s02\")),this.p_71.setParameterOffset(this.getParameterOffset(this.p_71)),this.p_72=new RNBOSubpatcher_466,this.p_72.setEngineAndPatcher(this.getEngine(),this),this.p_72.initialize(getSubState(e,\"p_s09\")),this.p_72.setParameterOffset(this.getParameterOffset(this.p_72)),this.p_73=new RNBOSubpatcher_467,this.p_73.setEngineAndPatcher(this.getEngine(),this),this.p_73.initialize(getSubState(e,\"p_s08\")),this.p_73.setParameterOffset(this.getParameterOffset(this.p_73)),this.p_74=new RNBOSubpatcher_468,this.p_74.setEngineAndPatcher(this.getEngine(),this),this.p_74.initialize(getSubState(e,\"p_s01\")),this.p_74.setParameterOffset(this.getParameterOffset(this.p_74)),this.p_75=new RNBOSubpatcher_469,this.p_75.setEngineAndPatcher(this.getEngine(),this),this.p_75.initialize(getSubState(e,\"p_s07\")),this.p_75.setParameterOffset(this.getParameterOffset(this.p_75)),this.p_76=new RNBOSubpatcher_470,this.p_76.setEngineAndPatcher(this.getEngine(),this),this.p_76.initialize(getSubState(e,\"p_s06\")),this.p_76.setParameterOffset(this.getParameterOffset(this.p_76)),this.p_77=new RNBOSubpatcher_471,this.p_77.setEngineAndPatcher(this.getEngine(),this),this.p_77.initialize(getSubState(e,\"p_s05\")),this.p_77.setParameterOffset(this.getParameterOffset(this.p_77)),this.p_78=new RNBOSubpatcher_472,this.p_78.setEngineAndPatcher(this.getEngine(),this),this.p_78.initialize(getSubState(e,\"p_s04\")),this.p_78.setParameterOffset(this.getParameterOffset(this.p_78))}getPreset(e){this.p_62.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-5\")),this.p_63.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-9\")),this.p_64.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-11\")),this.p_65.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-15\")),this.p_66.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-21\")),this.p_67.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-19\")),this.p_68.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-17\")),this.p_69.getPreset(getSubState(getSubState(e,\"__sps\"),\"cap speed[2]\")),this.p_70.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-27\")),this.p_71.getPreset(getSubState(getSubState(e,\"__sps\"),\"cap speed[1]\")),this.p_72.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-25\")),this.p_73.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-23\")),this.p_74.getPreset(getSubState(getSubState(e,\"__sps\"),\"cap speed\")),this.p_75.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-34\")),this.p_76.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-32\")),this.p_77.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-29\")),this.p_78.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-36\"))}processTempoEvent(e,t){this.updateTime(e),this.p_62.processTempoEvent(e,t),this.p_63.processTempoEvent(e,t),this.p_64.processTempoEvent(e,t),this.p_65.processTempoEvent(e,t),this.p_66.processTempoEvent(e,t),this.p_67.processTempoEvent(e,t),this.p_68.processTempoEvent(e,t),this.p_69.processTempoEvent(e,t),this.p_70.processTempoEvent(e,t),this.p_71.processTempoEvent(e,t),this.p_72.processTempoEvent(e,t),this.p_73.processTempoEvent(e,t),this.p_74.processTempoEvent(e,t),this.p_75.processTempoEvent(e,t),this.p_76.processTempoEvent(e,t),this.p_77.processTempoEvent(e,t),this.p_78.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_62.processTransportEvent(e,t),this.p_63.processTransportEvent(e,t),this.p_64.processTransportEvent(e,t),this.p_65.processTransportEvent(e,t),this.p_66.processTransportEvent(e,t),this.p_67.processTransportEvent(e,t),this.p_68.processTransportEvent(e,t),this.p_69.processTransportEvent(e,t),this.p_70.processTransportEvent(e,t),this.p_71.processTransportEvent(e,t),this.p_72.processTransportEvent(e,t),this.p_73.processTransportEvent(e,t),this.p_74.processTransportEvent(e,t),this.p_75.processTransportEvent(e,t),this.p_76.processTransportEvent(e,t),this.p_77.processTransportEvent(e,t),this.p_78.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_62.processBeatTimeEvent(e,t),this.p_63.processBeatTimeEvent(e,t),this.p_64.processBeatTimeEvent(e,t),this.p_65.processBeatTimeEvent(e,t),this.p_66.processBeatTimeEvent(e,t),this.p_67.processBeatTimeEvent(e,t),this.p_68.processBeatTimeEvent(e,t),this.p_69.processBeatTimeEvent(e,t),this.p_70.processBeatTimeEvent(e,t),this.p_71.processBeatTimeEvent(e,t),this.p_72.processBeatTimeEvent(e,t),this.p_73.processBeatTimeEvent(e,t),this.p_74.processBeatTimeEvent(e,t),this.p_75.processBeatTimeEvent(e,t),this.p_76.processBeatTimeEvent(e,t),this.p_77.processBeatTimeEvent(e,t),this.p_78.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_62.processTimeSignatureEvent(e,t,s),this.p_63.processTimeSignatureEvent(e,t,s),this.p_64.processTimeSignatureEvent(e,t,s),this.p_65.processTimeSignatureEvent(e,t,s),this.p_66.processTimeSignatureEvent(e,t,s),this.p_67.processTimeSignatureEvent(e,t,s),this.p_68.processTimeSignatureEvent(e,t,s),this.p_69.processTimeSignatureEvent(e,t,s),this.p_70.processTimeSignatureEvent(e,t,s),this.p_71.processTimeSignatureEvent(e,t,s),this.p_72.processTimeSignatureEvent(e,t,s),this.p_73.processTimeSignatureEvent(e,t,s),this.p_74.processTimeSignatureEvent(e,t,s),this.p_75.processTimeSignatureEvent(e,t,s),this.p_76.processTimeSignatureEvent(e,t,s),this.p_77.processTimeSignatureEvent(e,t,s),this.p_78.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_62.getNumParameters()&&this.p_62.setParameterValue(e,t,s),(e-=this.p_62.getNumParameters())<this.p_63.getNumParameters()&&this.p_63.setParameterValue(e,t,s),(e-=this.p_63.getNumParameters())<this.p_64.getNumParameters()&&this.p_64.setParameterValue(e,t,s),(e-=this.p_64.getNumParameters())<this.p_65.getNumParameters()&&this.p_65.setParameterValue(e,t,s),(e-=this.p_65.getNumParameters())<this.p_66.getNumParameters()&&this.p_66.setParameterValue(e,t,s),(e-=this.p_66.getNumParameters())<this.p_67.getNumParameters()&&this.p_67.setParameterValue(e,t,s),(e-=this.p_67.getNumParameters())<this.p_68.getNumParameters()&&this.p_68.setParameterValue(e,t,s),(e-=this.p_68.getNumParameters())<this.p_69.getNumParameters()&&this.p_69.setParameterValue(e,t,s),(e-=this.p_69.getNumParameters())<this.p_70.getNumParameters()&&this.p_70.setParameterValue(e,t,s),(e-=this.p_70.getNumParameters())<this.p_71.getNumParameters()&&this.p_71.setParameterValue(e,t,s),(e-=this.p_71.getNumParameters())<this.p_72.getNumParameters()&&this.p_72.setParameterValue(e,t,s),(e-=this.p_72.getNumParameters())<this.p_73.getNumParameters()&&this.p_73.setParameterValue(e,t,s),(e-=this.p_73.getNumParameters())<this.p_74.getNumParameters()&&this.p_74.setParameterValue(e,t,s),(e-=this.p_74.getNumParameters())<this.p_75.getNumParameters()&&this.p_75.setParameterValue(e,t,s),(e-=this.p_75.getNumParameters())<this.p_76.getNumParameters()&&this.p_76.setParameterValue(e,t,s),(e-=this.p_76.getNumParameters())<this.p_77.getNumParameters()&&this.p_77.setParameterValue(e,t,s),(e-=this.p_77.getNumParameters())<this.p_78.getNumParameters()&&this.p_78.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_62.getNumParameters()?this.p_62.getParameterValue(e):(e-=this.p_62.getNumParameters())<this.p_63.getNumParameters()?this.p_63.getParameterValue(e):(e-=this.p_63.getNumParameters())<this.p_64.getNumParameters()?this.p_64.getParameterValue(e):(e-=this.p_64.getNumParameters())<this.p_65.getNumParameters()?this.p_65.getParameterValue(e):(e-=this.p_65.getNumParameters())<this.p_66.getNumParameters()?this.p_66.getParameterValue(e):(e-=this.p_66.getNumParameters())<this.p_67.getNumParameters()?this.p_67.getParameterValue(e):(e-=this.p_67.getNumParameters())<this.p_68.getNumParameters()?this.p_68.getParameterValue(e):(e-=this.p_68.getNumParameters())<this.p_69.getNumParameters()?this.p_69.getParameterValue(e):(e-=this.p_69.getNumParameters())<this.p_70.getNumParameters()?this.p_70.getParameterValue(e):(e-=this.p_70.getNumParameters())<this.p_71.getNumParameters()?this.p_71.getParameterValue(e):(e-=this.p_71.getNumParameters())<this.p_72.getNumParameters()?this.p_72.getParameterValue(e):(e-=this.p_72.getNumParameters())<this.p_73.getNumParameters()?this.p_73.getParameterValue(e):(e-=this.p_73.getNumParameters())<this.p_74.getNumParameters()?this.p_74.getParameterValue(e):(e-=this.p_74.getNumParameters())<this.p_75.getNumParameters()?this.p_75.getParameterValue(e):(e-=this.p_75.getNumParameters())<this.p_76.getNumParameters()?this.p_76.getParameterValue(e):(e-=this.p_76.getNumParameters())<this.p_77.getNumParameters()?this.p_77.getParameterValue(e):(e-=this.p_77.getNumParameters())<this.p_78.getNumParameters()?this.p_78.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters()+this.p_69.getNumParameters()+this.p_70.getNumParameters()+this.p_71.getNumParameters()+this.p_72.getNumParameters()+this.p_73.getNumParameters()+this.p_74.getNumParameters()+this.p_75.getNumParameters()+this.p_76.getNumParameters()+this.p_77.getNumParameters()+this.p_78.getNumParameters()}getParameterName(e){return(e-=0)<this.p_62.getNumParameters()?this.p_62.getParameterName(e):(e-=this.p_62.getNumParameters())<this.p_63.getNumParameters()?this.p_63.getParameterName(e):(e-=this.p_63.getNumParameters())<this.p_64.getNumParameters()?this.p_64.getParameterName(e):(e-=this.p_64.getNumParameters())<this.p_65.getNumParameters()?this.p_65.getParameterName(e):(e-=this.p_65.getNumParameters())<this.p_66.getNumParameters()?this.p_66.getParameterName(e):(e-=this.p_66.getNumParameters())<this.p_67.getNumParameters()?this.p_67.getParameterName(e):(e-=this.p_67.getNumParameters())<this.p_68.getNumParameters()?this.p_68.getParameterName(e):(e-=this.p_68.getNumParameters())<this.p_69.getNumParameters()?this.p_69.getParameterName(e):(e-=this.p_69.getNumParameters())<this.p_70.getNumParameters()?this.p_70.getParameterName(e):(e-=this.p_70.getNumParameters())<this.p_71.getNumParameters()?this.p_71.getParameterName(e):(e-=this.p_71.getNumParameters())<this.p_72.getNumParameters()?this.p_72.getParameterName(e):(e-=this.p_72.getNumParameters())<this.p_73.getNumParameters()?this.p_73.getParameterName(e):(e-=this.p_73.getNumParameters())<this.p_74.getNumParameters()?this.p_74.getParameterName(e):(e-=this.p_74.getNumParameters())<this.p_75.getNumParameters()?this.p_75.getParameterName(e):(e-=this.p_75.getNumParameters())<this.p_76.getNumParameters()?this.p_76.getParameterName(e):(e-=this.p_76.getNumParameters())<this.p_77.getNumParameters()?this.p_77.getParameterName(e):(e-=this.p_77.getNumParameters())<this.p_78.getNumParameters()?this.p_78.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_62.getNumParameters()?this.p_62.getParameterId(e):(e-=this.p_62.getNumParameters())<this.p_63.getNumParameters()?this.p_63.getParameterId(e):(e-=this.p_63.getNumParameters())<this.p_64.getNumParameters()?this.p_64.getParameterId(e):(e-=this.p_64.getNumParameters())<this.p_65.getNumParameters()?this.p_65.getParameterId(e):(e-=this.p_65.getNumParameters())<this.p_66.getNumParameters()?this.p_66.getParameterId(e):(e-=this.p_66.getNumParameters())<this.p_67.getNumParameters()?this.p_67.getParameterId(e):(e-=this.p_67.getNumParameters())<this.p_68.getNumParameters()?this.p_68.getParameterId(e):(e-=this.p_68.getNumParameters())<this.p_69.getNumParameters()?this.p_69.getParameterId(e):(e-=this.p_69.getNumParameters())<this.p_70.getNumParameters()?this.p_70.getParameterId(e):(e-=this.p_70.getNumParameters())<this.p_71.getNumParameters()?this.p_71.getParameterId(e):(e-=this.p_71.getNumParameters())<this.p_72.getNumParameters()?this.p_72.getParameterId(e):(e-=this.p_72.getNumParameters())<this.p_73.getNumParameters()?this.p_73.getParameterId(e):(e-=this.p_73.getNumParameters())<this.p_74.getNumParameters()?this.p_74.getParameterId(e):(e-=this.p_74.getNumParameters())<this.p_75.getNumParameters()?this.p_75.getParameterId(e):(e-=this.p_75.getNumParameters())<this.p_76.getNumParameters()?this.p_76.getParameterId(e):(e-=this.p_76.getNumParameters())<this.p_77.getNumParameters()?this.p_77.getParameterId(e):(e-=this.p_77.getNumParameters())<this.p_78.getNumParameters()?this.p_78.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_62.getNumParameters()&&this.p_62.getParameterInfo(e,t),(e-=this.p_62.getNumParameters())<this.p_63.getNumParameters()&&this.p_63.getParameterInfo(e,t),(e-=this.p_63.getNumParameters())<this.p_64.getNumParameters()&&this.p_64.getParameterInfo(e,t),(e-=this.p_64.getNumParameters())<this.p_65.getNumParameters()&&this.p_65.getParameterInfo(e,t),(e-=this.p_65.getNumParameters())<this.p_66.getNumParameters()&&this.p_66.getParameterInfo(e,t),(e-=this.p_66.getNumParameters())<this.p_67.getNumParameters()&&this.p_67.getParameterInfo(e,t),(e-=this.p_67.getNumParameters())<this.p_68.getNumParameters()&&this.p_68.getParameterInfo(e,t),(e-=this.p_68.getNumParameters())<this.p_69.getNumParameters()&&this.p_69.getParameterInfo(e,t),(e-=this.p_69.getNumParameters())<this.p_70.getNumParameters()&&this.p_70.getParameterInfo(e,t),(e-=this.p_70.getNumParameters())<this.p_71.getNumParameters()&&this.p_71.getParameterInfo(e,t),(e-=this.p_71.getNumParameters())<this.p_72.getNumParameters()&&this.p_72.getParameterInfo(e,t),(e-=this.p_72.getNumParameters())<this.p_73.getNumParameters()&&this.p_73.getParameterInfo(e,t),(e-=this.p_73.getNumParameters())<this.p_74.getNumParameters()&&this.p_74.getParameterInfo(e,t),(e-=this.p_74.getNumParameters())<this.p_75.getNumParameters()&&this.p_75.getParameterInfo(e,t),(e-=this.p_75.getNumParameters())<this.p_76.getNumParameters()&&this.p_76.getParameterInfo(e,t),(e-=this.p_76.getNumParameters())<this.p_77.getNumParameters()&&this.p_77.getParameterInfo(e,t),(e-=this.p_77.getNumParameters())<this.p_78.getNumParameters()&&this.p_78.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return e==this.p_62?0:e==this.p_63?0+this.p_62.getNumParameters():e==this.p_64?0+this.p_62.getNumParameters()+this.p_63.getNumParameters():e==this.p_65?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters():e==this.p_66?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters():e==this.p_67?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters():e==this.p_68?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters():e==this.p_69?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters():e==this.p_70?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters()+this.p_69.getNumParameters():e==this.p_71?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters()+this.p_69.getNumParameters()+this.p_70.getNumParameters():e==this.p_72?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters()+this.p_69.getNumParameters()+this.p_70.getNumParameters()+this.p_71.getNumParameters():e==this.p_73?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters()+this.p_69.getNumParameters()+this.p_70.getNumParameters()+this.p_71.getNumParameters()+this.p_72.getNumParameters():e==this.p_74?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters()+this.p_69.getNumParameters()+this.p_70.getNumParameters()+this.p_71.getNumParameters()+this.p_72.getNumParameters()+this.p_73.getNumParameters():e==this.p_75?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters()+this.p_69.getNumParameters()+this.p_70.getNumParameters()+this.p_71.getNumParameters()+this.p_72.getNumParameters()+this.p_73.getNumParameters()+this.p_74.getNumParameters():e==this.p_76?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters()+this.p_69.getNumParameters()+this.p_70.getNumParameters()+this.p_71.getNumParameters()+this.p_72.getNumParameters()+this.p_73.getNumParameters()+this.p_74.getNumParameters()+this.p_75.getNumParameters():e==this.p_77?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters()+this.p_69.getNumParameters()+this.p_70.getNumParameters()+this.p_71.getNumParameters()+this.p_72.getNumParameters()+this.p_73.getNumParameters()+this.p_74.getNumParameters()+this.p_75.getNumParameters()+this.p_76.getNumParameters():e==this.p_78?0+this.p_62.getNumParameters()+this.p_63.getNumParameters()+this.p_64.getNumParameters()+this.p_65.getNumParameters()+this.p_66.getNumParameters()+this.p_67.getNumParameters()+this.p_68.getNumParameters()+this.p_69.getNumParameters()+this.p_70.getNumParameters()+this.p_71.getNumParameters()+this.p_72.getNumParameters()+this.p_73.getNumParameters()+this.p_74.getNumParameters()+this.p_75.getNumParameters()+this.p_76.getNumParameters()+this.p_77.getNumParameters():0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_62.getNumParameters()?this.p_62.convertToNormalizedParameterValue(e,t):(e-=this.p_62.getNumParameters())<this.p_63.getNumParameters()?this.p_63.convertToNormalizedParameterValue(e,t):(e-=this.p_63.getNumParameters())<this.p_64.getNumParameters()?this.p_64.convertToNormalizedParameterValue(e,t):(e-=this.p_64.getNumParameters())<this.p_65.getNumParameters()?this.p_65.convertToNormalizedParameterValue(e,t):(e-=this.p_65.getNumParameters())<this.p_66.getNumParameters()?this.p_66.convertToNormalizedParameterValue(e,t):(e-=this.p_66.getNumParameters())<this.p_67.getNumParameters()?this.p_67.convertToNormalizedParameterValue(e,t):(e-=this.p_67.getNumParameters())<this.p_68.getNumParameters()?this.p_68.convertToNormalizedParameterValue(e,t):(e-=this.p_68.getNumParameters())<this.p_69.getNumParameters()?this.p_69.convertToNormalizedParameterValue(e,t):(e-=this.p_69.getNumParameters())<this.p_70.getNumParameters()?this.p_70.convertToNormalizedParameterValue(e,t):(e-=this.p_70.getNumParameters())<this.p_71.getNumParameters()?this.p_71.convertToNormalizedParameterValue(e,t):(e-=this.p_71.getNumParameters())<this.p_72.getNumParameters()?this.p_72.convertToNormalizedParameterValue(e,t):(e-=this.p_72.getNumParameters())<this.p_73.getNumParameters()?this.p_73.convertToNormalizedParameterValue(e,t):(e-=this.p_73.getNumParameters())<this.p_74.getNumParameters()?this.p_74.convertToNormalizedParameterValue(e,t):(e-=this.p_74.getNumParameters())<this.p_75.getNumParameters()?this.p_75.convertToNormalizedParameterValue(e,t):(e-=this.p_75.getNumParameters())<this.p_76.getNumParameters()?this.p_76.convertToNormalizedParameterValue(e,t):(e-=this.p_76.getNumParameters())<this.p_77.getNumParameters()?this.p_77.convertToNormalizedParameterValue(e,t):(e-=this.p_77.getNumParameters())<this.p_78.getNumParameters()?this.p_78.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_62.getNumParameters()?this.p_62.convertFromNormalizedParameterValue(e,t):(e-=this.p_62.getNumParameters())<this.p_63.getNumParameters()?this.p_63.convertFromNormalizedParameterValue(e,t):(e-=this.p_63.getNumParameters())<this.p_64.getNumParameters()?this.p_64.convertFromNormalizedParameterValue(e,t):(e-=this.p_64.getNumParameters())<this.p_65.getNumParameters()?this.p_65.convertFromNormalizedParameterValue(e,t):(e-=this.p_65.getNumParameters())<this.p_66.getNumParameters()?this.p_66.convertFromNormalizedParameterValue(e,t):(e-=this.p_66.getNumParameters())<this.p_67.getNumParameters()?this.p_67.convertFromNormalizedParameterValue(e,t):(e-=this.p_67.getNumParameters())<this.p_68.getNumParameters()?this.p_68.convertFromNormalizedParameterValue(e,t):(e-=this.p_68.getNumParameters())<this.p_69.getNumParameters()?this.p_69.convertFromNormalizedParameterValue(e,t):(e-=this.p_69.getNumParameters())<this.p_70.getNumParameters()?this.p_70.convertFromNormalizedParameterValue(e,t):(e-=this.p_70.getNumParameters())<this.p_71.getNumParameters()?this.p_71.convertFromNormalizedParameterValue(e,t):(e-=this.p_71.getNumParameters())<this.p_72.getNumParameters()?this.p_72.convertFromNormalizedParameterValue(e,t):(e-=this.p_72.getNumParameters())<this.p_73.getNumParameters()?this.p_73.convertFromNormalizedParameterValue(e,t):(e-=this.p_73.getNumParameters())<this.p_74.getNumParameters()?this.p_74.convertFromNormalizedParameterValue(e,t):(e-=this.p_74.getNumParameters())<this.p_75.getNumParameters()?this.p_75.convertFromNormalizedParameterValue(e,t):(e-=this.p_75.getNumParameters())<this.p_76.getNumParameters()?this.p_76.convertFromNormalizedParameterValue(e,t):(e-=this.p_76.getNumParameters())<this.p_77.getNumParameters()?this.p_77.convertFromNormalizedParameterValue(e,t):(e-=this.p_77.getNumParameters())<this.p_78.getNumParameters()?this.p_78.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_62.getNumParameters()?this.p_62.constrainParameterValue(e,t):(e-=this.p_62.getNumParameters())<this.p_63.getNumParameters()?this.p_63.constrainParameterValue(e,t):(e-=this.p_63.getNumParameters())<this.p_64.getNumParameters()?this.p_64.constrainParameterValue(e,t):(e-=this.p_64.getNumParameters())<this.p_65.getNumParameters()?this.p_65.constrainParameterValue(e,t):(e-=this.p_65.getNumParameters())<this.p_66.getNumParameters()?this.p_66.constrainParameterValue(e,t):(e-=this.p_66.getNumParameters())<this.p_67.getNumParameters()?this.p_67.constrainParameterValue(e,t):(e-=this.p_67.getNumParameters())<this.p_68.getNumParameters()?this.p_68.constrainParameterValue(e,t):(e-=this.p_68.getNumParameters())<this.p_69.getNumParameters()?this.p_69.constrainParameterValue(e,t):(e-=this.p_69.getNumParameters())<this.p_70.getNumParameters()?this.p_70.constrainParameterValue(e,t):(e-=this.p_70.getNumParameters())<this.p_71.getNumParameters()?this.p_71.constrainParameterValue(e,t):(e-=this.p_71.getNumParameters())<this.p_72.getNumParameters()?this.p_72.constrainParameterValue(e,t):(e-=this.p_72.getNumParameters())<this.p_73.getNumParameters()?this.p_73.constrainParameterValue(e,t):(e-=this.p_73.getNumParameters())<this.p_74.getNumParameters()?this.p_74.constrainParameterValue(e,t):(e-=this.p_74.getNumParameters())<this.p_75.getNumParameters()?this.p_75.constrainParameterValue(e,t):(e-=this.p_75.getNumParameters())<this.p_76.getNumParameters()?this.p_76.constrainParameterValue(e,t):(e-=this.p_76.getNumParameters())<this.p_77.getNumParameters()?this.p_77.constrainParameterValue(e,t):(e-=this.p_77.getNumParameters())<this.p_78.getNumParameters()?this.p_78.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm2_r_freq\"):this.inport_46_value_number_set(a);break;case TAG(\"fm2_r_c1ratio\"):this.inport_47_value_number_set(a);break;case TAG(\"fm2_r_c2ratio\"):this.inport_48_value_number_set(a);break;case TAG(\"fm2_r_c3ratio\"):this.inport_49_value_number_set(a);break;case TAG(\"fm2_r_3to1\"):this.inport_50_value_number_set(a);break;case TAG(\"fm2_r_2to1\"):this.inport_51_value_number_set(a);break;case TAG(\"fm2_r_3to2\"):this.inport_52_value_number_set(a);break;case TAG(\"fm2_r_c1release\"):this.inport_53_value_number_set(a);break;case TAG(\"fm2_listener\"):this.inport_54_value_number_set(a);break;case TAG(\"fm2_r_c2release\"):this.inport_55_value_number_set(a);break;case TAG(\"fm2_r_c3release\"):this.inport_56_value_number_set(a);break;case TAG(\"fm2_r_op1gain\"):this.inport_57_value_number_set(a);break;case TAG(\"fm2_r_op2gain\"):this.inport_58_value_number_set(a);break;case TAG(\"fm2_r_op3gain\"):this.inport_59_value_number_set(a);break;case TAG(\"fm2_r_gain\"):this.inport_60_value_number_set(a)}this.p_62.processNumMessage(e,t,s,a),this.p_63.processNumMessage(e,t,s,a),this.p_64.processNumMessage(e,t,s,a),this.p_65.processNumMessage(e,t,s,a),this.p_66.processNumMessage(e,t,s,a),this.p_67.processNumMessage(e,t,s,a),this.p_68.processNumMessage(e,t,s,a),this.p_69.processNumMessage(e,t,s,a),this.p_70.processNumMessage(e,t,s,a),this.p_71.processNumMessage(e,t,s,a),this.p_72.processNumMessage(e,t,s,a),this.p_73.processNumMessage(e,t,s,a),this.p_74.processNumMessage(e,t,s,a),this.p_75.processNumMessage(e,t,s,a),this.p_76.processNumMessage(e,t,s,a),this.p_77.processNumMessage(e,t,s,a),this.p_78.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm2_r_freq\"):this.inport_46_value_list_set(a);break;case TAG(\"fm2_r_c1ratio\"):this.inport_47_value_list_set(a);break;case TAG(\"fm2_r_c2ratio\"):this.inport_48_value_list_set(a);break;case TAG(\"fm2_r_c3ratio\"):this.inport_49_value_list_set(a);break;case TAG(\"fm2_r_3to1\"):this.inport_50_value_list_set(a);break;case TAG(\"fm2_r_2to1\"):this.inport_51_value_list_set(a);break;case TAG(\"fm2_r_3to2\"):this.inport_52_value_list_set(a);break;case TAG(\"fm2_r_c1release\"):this.inport_53_value_list_set(a);break;case TAG(\"fm2_listener\"):this.inport_54_value_list_set(a);break;case TAG(\"fm2_r_c2release\"):this.inport_55_value_list_set(a);break;case TAG(\"fm2_r_c3release\"):this.inport_56_value_list_set(a);break;case TAG(\"fm2_r_op1gain\"):this.inport_57_value_list_set(a);break;case TAG(\"fm2_r_op2gain\"):this.inport_58_value_list_set(a);break;case TAG(\"fm2_r_op3gain\"):this.inport_59_value_list_set(a);break;case TAG(\"fm2_r_gain\"):this.inport_60_value_list_set(a)}this.p_62.processListMessage(e,t,s,a),this.p_63.processListMessage(e,t,s,a),this.p_64.processListMessage(e,t,s,a),this.p_65.processListMessage(e,t,s,a),this.p_66.processListMessage(e,t,s,a),this.p_67.processListMessage(e,t,s,a),this.p_68.processListMessage(e,t,s,a),this.p_69.processListMessage(e,t,s,a),this.p_70.processListMessage(e,t,s,a),this.p_71.processListMessage(e,t,s,a),this.p_72.processListMessage(e,t,s,a),this.p_73.processListMessage(e,t,s,a),this.p_74.processListMessage(e,t,s,a),this.p_75.processListMessage(e,t,s,a),this.p_76.processListMessage(e,t,s,a),this.p_77.processListMessage(e,t,s,a),this.p_78.processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"fm2_r_freq\"):this.inport_46_value_bang_bang();break;case TAG(\"fm2_r_c1ratio\"):this.inport_47_value_bang_bang();break;case TAG(\"fm2_r_c2ratio\"):this.inport_48_value_bang_bang();break;case TAG(\"fm2_r_c3ratio\"):this.inport_49_value_bang_bang();break;case TAG(\"fm2_r_3to1\"):this.inport_50_value_bang_bang();break;case TAG(\"fm2_r_2to1\"):this.inport_51_value_bang_bang();break;case TAG(\"fm2_r_3to2\"):this.inport_52_value_bang_bang();break;case TAG(\"fm2_r_c1release\"):this.inport_53_value_bang_bang();break;case TAG(\"fm2_listener\"):this.inport_54_value_bang_bang();break;case TAG(\"fm2_r_c2release\"):this.inport_55_value_bang_bang();break;case TAG(\"fm2_r_c3release\"):this.inport_56_value_bang_bang();break;case TAG(\"fm2_r_op1gain\"):this.inport_57_value_bang_bang();break;case TAG(\"fm2_r_op2gain\"):this.inport_58_value_bang_bang();break;case TAG(\"fm2_r_op3gain\"):this.inport_59_value_bang_bang();break;case TAG(\"fm2_r_gain\"):this.inport_60_value_bang_bang()}this.p_62.processBangMessage(e,t,s),this.p_63.processBangMessage(e,t,s),this.p_64.processBangMessage(e,t,s),this.p_65.processBangMessage(e,t,s),this.p_66.processBangMessage(e,t,s),this.p_67.processBangMessage(e,t,s),this.p_68.processBangMessage(e,t,s),this.p_69.processBangMessage(e,t,s),this.p_70.processBangMessage(e,t,s),this.p_71.processBangMessage(e,t,s),this.p_72.processBangMessage(e,t,s),this.p_73.processBangMessage(e,t,s),this.p_74.processBangMessage(e,t,s),this.p_75.processBangMessage(e,t,s),this.p_76.processBangMessage(e,t,s),this.p_77.processBangMessage(e,t,s),this.p_78.processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"fm2_r_freq\"):return\"fm2_r_freq\";case TAG(\"\"):return\"\";case TAG(\"fm2_r_c1ratio\"):return\"fm2_r_c1ratio\";case TAG(\"fm2_r_c2ratio\"):return\"fm2_r_c2ratio\";case TAG(\"fm2_r_c3ratio\"):return\"fm2_r_c3ratio\";case TAG(\"fm2_r_3to1\"):return\"fm2_r_3to1\";case TAG(\"fm2_r_2to1\"):return\"fm2_r_2to1\";case TAG(\"fm2_r_3to2\"):return\"fm2_r_3to2\";case TAG(\"fm2_r_c1release\"):return\"fm2_r_c1release\";case TAG(\"fm2_listener\"):return\"fm2_listener\";case TAG(\"fm2_r_c2release\"):return\"fm2_r_c2release\";case TAG(\"fm2_r_c3release\"):return\"fm2_r_c3release\";case TAG(\"fm2_r_op1gain\"):return\"fm2_r_op1gain\";case TAG(\"fm2_r_op2gain\"):return\"fm2_r_op2gain\";case TAG(\"fm2_r_op3gain\"):return\"fm2_r_op3gain\";case TAG(\"fm2_r_gain\"):return\"fm2_r_gain\"}var t=this.p_62.resolveTag(e);if(t)return t;var s=this.p_63.resolveTag(e);if(s)return s;var a=this.p_64.resolveTag(e);if(a)return a;var r=this.p_65.resolveTag(e);if(r)return r;var _=this.p_66.resolveTag(e);if(_)return _;var i=this.p_67.resolveTag(e);if(i)return i;var n=this.p_68.resolveTag(e);if(n)return n;var u=this.p_69.resolveTag(e);if(u)return u;var o=this.p_70.resolveTag(e);if(o)return o;var p=this.p_71.resolveTag(e);if(p)return p;var m=this.p_72.resolveTag(e);if(m)return m;var h=this.p_73.resolveTag(e);if(h)return h;var l=this.p_74.resolveTag(e);if(l)return l;var c=this.p_75.resolveTag(e);if(c)return c;var g=this.p_76.resolveTag(e);if(g)return g;var d=this.p_77.resolveTag(e);if(d)return d;var f=this.p_78.resolveTag(e);return f||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),0==e&&(this.mtof_05_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_06_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_07_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_08_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256)),this.p_62.processDataViewUpdate(e,t),this.p_63.processDataViewUpdate(e,t),this.p_64.processDataViewUpdate(e,t),this.p_65.processDataViewUpdate(e,t),this.p_66.processDataViewUpdate(e,t),this.p_67.processDataViewUpdate(e,t),this.p_68.processDataViewUpdate(e,t),this.p_69.processDataViewUpdate(e,t),this.p_70.processDataViewUpdate(e,t),this.p_71.processDataViewUpdate(e,t),this.p_72.processDataViewUpdate(e,t),this.p_73.processDataViewUpdate(e,t),this.p_74.processDataViewUpdate(e,t),this.p_75.processDataViewUpdate(e,t),this.p_76.processDataViewUpdate(e,t),this.p_77.processDataViewUpdate(e,t),this.p_78.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e),this.mtof_05_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_06_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_07_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256),this.mtof_08_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_488{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.select_a1_s01_test1)&&(this.select_04_test1=e.select_a1_s01_test1),containsValue(e.select_a1_s01_test2)&&(this.select_04_test2=e.select_a1_s01_test2),containsValue(e.expr_s01_in1)&&(this.expr_285_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_285_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_285_out1=e.expr_s01_out1),containsValue(e.listchange_a1_s01_input)&&(this.listchange_02_input=e.listchange_a1_s01_input),containsValue(e.listchange_a1_s01_compare)&&(this.listchange_02_compare=e.listchange_a1_s01_compare),containsValue(e.p_s04_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s04_audioProcessSampleCount),containsValue(e.p_s04_zeroBuffer)&&(this.zeroBuffer=e.p_s04_zeroBuffer),containsValue(e.p_s04_dummyBuffer)&&(this.dummyBuffer=e.p_s04_dummyBuffer),containsValue(e.p_s04_vs)&&(this.vs=e.p_s04_vs),containsValue(e.p_s04_maxvs)&&(this.maxvs=e.p_s04_maxvs),containsValue(e.p_s04_sr)&&(this.sr=e.p_s04_sr),containsValue(e.p_s04_invsr)&&(this.invsr=e.p_s04_invsr),containsValue(e.p_s04_noteNumber)&&(this.noteNumber=e.p_s04_noteNumber),containsValue(e.p_s04_isMuted)&&(this.isMuted=e.p_s04_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_489{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.switchobj_a1_s01_onoff)&&(this.switchobj_09_onoff=e.switchobj_a1_s01_onoff),containsValue(e.listreg_a1_s03_in1)&&(this.listreg_01_in1=e.listreg_a1_s03_in1),containsValue(e.listreg_a1_s03_in2)&&(this.listreg_01_in2=e.listreg_a1_s03_in2),containsValue(e.receive_a1_s06_output_number)&&(this.receive_21_output_number=e.receive_a1_s06_output_number),containsValue(e.receive_a1_s06_output_list)&&(this.receive_21_output_list=e.receive_a1_s06_output_list),containsValue(e.receive_a1_s03_output_number)&&(this.receive_22_output_number=e.receive_a1_s03_output_number),containsValue(e.receive_a1_s03_output_list)&&(this.receive_22_output_list=e.receive_a1_s03_output_list),containsValue(e.listreg_a1_s02_in1)&&(this.listreg_02_in1=e.listreg_a1_s02_in1),containsValue(e.listreg_a1_s02_in2)&&(this.listreg_02_in2=e.listreg_a1_s02_in2),containsValue(e.receive_a1_s05_output_number)&&(this.receive_23_output_number=e.receive_a1_s05_output_number),containsValue(e.receive_a1_s05_output_list)&&(this.receive_23_output_list=e.receive_a1_s05_output_list),containsValue(e.receive_a1_s02_output_number)&&(this.receive_24_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_24_output_list=e.receive_a1_s02_output_list),containsValue(e.listreg_a1_s01_in1)&&(this.listreg_03_in1=e.listreg_a1_s01_in1),containsValue(e.listreg_a1_s01_in2)&&(this.listreg_03_in2=e.listreg_a1_s01_in2),containsValue(e.select_a1_s01_test1)&&(this.select_05_test1=e.select_a1_s01_test1),containsValue(e.receive_a1_s04_output_number)&&(this.receive_25_output_number=e.receive_a1_s04_output_number),containsValue(e.receive_a1_s04_output_list)&&(this.receive_25_output_list=e.receive_a1_s04_output_list),containsValue(e.receive_a1_s01_output_number)&&(this.receive_26_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_26_output_list=e.receive_a1_s01_output_list),containsValue(e.p_s05_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s05_audioProcessSampleCount),containsValue(e.p_s05_zeroBuffer)&&(this.zeroBuffer=e.p_s05_zeroBuffer),containsValue(e.p_s05_dummyBuffer)&&(this.dummyBuffer=e.p_s05_dummyBuffer),containsValue(e.p_s05_vs)&&(this.vs=e.p_s05_vs),containsValue(e.p_s05_maxvs)&&(this.maxvs=e.p_s05_maxvs),containsValue(e.p_s05_sr)&&(this.sr=e.p_s05_sr),containsValue(e.p_s05_invsr)&&(this.invsr=e.p_s05_invsr),containsValue(e.listreg_a1_s03_stored)&&(this.listreg_01_stored=e.listreg_a1_s03_stored),containsValue(e.listreg_a1_s02_stored)&&(this.listreg_02_stored=e.listreg_a1_s02_stored),containsValue(e.listreg_a1_s01_stored)&&(this.listreg_03_stored=e.listreg_a1_s01_stored),containsValue(e.p_s05_noteNumber)&&(this.noteNumber=e.p_s05_noteNumber),containsValue(e.p_s05_isMuted)&&(this.isMuted=e.p_s05_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_473{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(4),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.groove_01_buffer=0,this.groove_01_setupDone=!1,this.onepole_tilde_07_needsUpdate=!1,this.onepole_tilde_07_setupDone=!1,this.data_01_buffer=0,this.data_01_setupDone=!1,this.data_02_buffer=0,this.data_02_setupDone=!1,this.data_03_buffer=0,this.data_03_setupDone=!1,this.data_04_buffer=0,this.data_04_setupDone=!1,this.data_05_buffer=0,this.data_05_setupDone=!1,this.data_06_buffer=0,this.data_06_setupDone=!1,this.data_07_buffer=0,this.data_07_setupDone=!1,this.data_08_buffer=0,this.data_08_setupDone=!1,this.data_09_buffer=0,this.data_09_setupDone=!1,this.data_10_buffer=0,this.data_10_setupDone=!1,this.data_11_buffer=0,this.data_11_setupDone=!1,this.data_12_buffer=0,this.data_12_setupDone=!1,this.data_13_buffer=0,this.data_13_setupDone=!1,this.data_14_buffer=0,this.data_14_setupDone=!1,this.data_15_buffer=0,this.data_15_setupDone=!1,this.data_16_buffer=0,this.data_16_setupDone=!1,this.data_17_buffer=0,this.data_17_setupDone=!1,this.data_18_buffer=0,this.data_18_setupDone=!1,this.data_19_buffer=0,this.data_19_setupDone=!1,this.data_20_buffer=0,this.data_20_setupDone=!1,this.data_21_buffer=0,this.data_21_setupDone=!1,this.data_22_buffer=0,this.data_22_setupDone=!1,this.data_23_buffer=0,this.data_23_setupDone=!1,this.data_24_buffer=0,this.data_24_setupDone=!1,this.data_25_buffer=0,this.data_25_setupDone=!1,this.data_26_buffer=0,this.data_26_setupDone=!1,this.data_27_buffer=0,this.data_27_setupDone=!1,this.data_28_buffer=0,this.data_28_setupDone=!1,this.data_29_buffer=0,this.data_29_setupDone=!1,this.data_30_buffer=0,this.data_30_setupDone=!1,this.data_31_buffer=0,this.data_31_setupDone=!1,this.data_32_buffer=0,this.data_32_setupDone=!1,this.data_33_buffer=0,this.data_33_setupDone=!1,this.data_34_buffer=0,this.data_34_setupDone=!1,this.data_35_buffer=0,this.data_35_setupDone=!1,this.data_36_buffer=0,this.data_36_setupDone=!1,this.data_37_buffer=0,this.data_37_setupDone=!1,this.data_38_buffer=0,this.data_38_setupDone=!1,this.data_39_buffer=0,this.data_39_setupDone=!1,this.data_40_buffer=0,this.data_40_setupDone=!1,this.data_41_buffer=0,this.data_41_setupDone=!1,this.data_42_buffer=0,this.data_42_setupDone=!1,this.data_43_buffer=0,this.data_43_setupDone=!1,this.data_44_buffer=0,this.data_44_setupDone=!1,this.data_45_buffer=0,this.data_45_setupDone=!1,this.data_46_buffer=0,this.data_46_setupDone=!1,this.data_47_buffer=0,this.data_47_setupDone=!1,this.data_48_buffer=0,this.data_48_setupDone=!1,this.data_49_buffer=0,this.data_49_setupDone=!1,this.data_50_buffer=0,this.data_50_setupDone=!1,this.groove_01_bufferobj=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 1}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}setVoiceIndex(e){this.voiceIndex=e}setNoteNumber(e){this.noteNumber=e}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.dspexpr_a1_s01_in1)&&(this.dspexpr_47_in1=e.dspexpr_a1_s01_in1),containsValue(e.dspexpr_a1_s01_in2)&&(this.dspexpr_47_in2=e.dspexpr_a1_s01_in2),containsValue(e.dspexpr_a1_s02_in1)&&(this.dspexpr_48_in1=e.dspexpr_a1_s02_in1),containsValue(e.dspexpr_a1_s02_in2)&&(this.dspexpr_48_in2=e.dspexpr_a1_s02_in2),containsValue(e.groove_a1_s01_rate_auto)&&(this.groove_01_rate_auto=e.groove_a1_s01_rate_auto),containsValue(e.groove_a1_s01_begin)&&(this.groove_01_begin=e.groove_a1_s01_begin),containsValue(e.groove_a1_s01_end)&&(this.groove_01_end=e.groove_a1_s01_end),containsValue(e.groove_a1_s01_loop)&&(this.groove_01_loop=e.groove_a1_s01_loop),containsValue(e.groove_a1_s01_crossfade)&&(this.groove_01_crossfade=e.groove_a1_s01_crossfade),containsValue(e.line_a1_s01_segments)&&(this.line_11_segments=e.line_a1_s01_segments),containsValue(e.line_a1_s01_time)&&(this.line_11_time=e.line_a1_s01_time),containsValue(e.listindex_a1_s01_input)&&(this.listindex_33_input=e.listindex_a1_s01_input),containsValue(e.listindex_a1_s01_index)&&(this.listindex_33_index=e.listindex_a1_s01_index),containsValue(e.unpack_s01_out1)&&(this.unpack_25_out1=e.unpack_s01_out1),containsValue(e.unpack_s01_out2)&&(this.unpack_25_out2=e.unpack_s01_out2),containsValue(e.unpack_s01_out3)&&(this.unpack_25_out3=e.unpack_s01_out3),containsValue(e.unpack_s01_out4)&&(this.unpack_25_out4=e.unpack_s01_out4),containsValue(e.expr_s02_in1)&&(this.expr_286_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_286_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_286_out1=e.expr_s02_out1),containsValue(e.onepole_s01_x)&&(this.onepole_tilde_07_x=e.onepole_s01_x),containsValue(e.onepole_s01_freqInHz)&&(this.onepole_tilde_07_freqInHz=e.onepole_s01_freqInHz),containsValue(e.trapezoid_s01_phase)&&(this.trapezoid_tilde_01_phase=e.trapezoid_s01_phase),containsValue(e.trapezoid_s01_rampUp)&&(this.trapezoid_tilde_01_rampUp=e.trapezoid_s01_rampUp),containsValue(e.trapezoid_s01_rampDown)&&(this.trapezoid_tilde_01_rampDown=e.trapezoid_s01_rampDown),containsValue(e.voice_s01_mute_number)&&(this.voice_03_mute_number=e.voice_s01_mute_number),containsValue(e.expr_s04_in1)&&(this.expr_287_in1=e.expr_s04_in1),containsValue(e.expr_s04_out1)&&(this.expr_287_out1=e.expr_s04_out1),containsValue(e.loadmess_s01_message)&&(this.loadmess_05_message=e.loadmess_s01_message),containsValue(e.expr_s01_in1)&&(this.expr_288_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_288_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_288_out1=e.expr_s01_out1),containsValue(e.line_a1_s02_segments)&&(this.line_12_segments=e.line_a1_s02_segments),containsValue(e.line_a1_s02_time)&&(this.line_12_time=e.line_a1_s02_time),containsValue(e.data_a2_s41_sizeout)&&(this.data_01_sizeout=e.data_a2_s41_sizeout),containsValue(e.data_a2_s41_size)&&(this.data_01_size=e.data_a2_s41_size),containsValue(e.data_a2_s41_sizems)&&(this.data_01_sizems=e.data_a2_s41_sizems),containsValue(e.data_a2_s41_channels)&&(this.data_01_channels=e.data_a2_s41_channels),containsValue(e.data_a2_s42_sizeout)&&(this.data_02_sizeout=e.data_a2_s42_sizeout),containsValue(e.data_a2_s42_size)&&(this.data_02_size=e.data_a2_s42_size),containsValue(e.data_a2_s42_sizems)&&(this.data_02_sizems=e.data_a2_s42_sizems),containsValue(e.data_a2_s42_channels)&&(this.data_02_channels=e.data_a2_s42_channels),containsValue(e.data_a2_s43_sizeout)&&(this.data_03_sizeout=e.data_a2_s43_sizeout),containsValue(e.data_a2_s43_size)&&(this.data_03_size=e.data_a2_s43_size),containsValue(e.data_a2_s43_sizems)&&(this.data_03_sizems=e.data_a2_s43_sizems),containsValue(e.data_a2_s43_channels)&&(this.data_03_channels=e.data_a2_s43_channels),containsValue(e.data_a2_s44_sizeout)&&(this.data_04_sizeout=e.data_a2_s44_sizeout),containsValue(e.data_a2_s44_size)&&(this.data_04_size=e.data_a2_s44_size),containsValue(e.data_a2_s44_sizems)&&(this.data_04_sizems=e.data_a2_s44_sizems),containsValue(e.data_a2_s44_channels)&&(this.data_04_channels=e.data_a2_s44_channels),containsValue(e.data_a2_s45_sizeout)&&(this.data_05_sizeout=e.data_a2_s45_sizeout),containsValue(e.data_a2_s45_size)&&(this.data_05_size=e.data_a2_s45_size),containsValue(e.data_a2_s45_sizems)&&(this.data_05_sizems=e.data_a2_s45_sizems),containsValue(e.data_a2_s45_channels)&&(this.data_05_channels=e.data_a2_s45_channels),containsValue(e.data_a2_s46_sizeout)&&(this.data_06_sizeout=e.data_a2_s46_sizeout),containsValue(e.data_a2_s46_size)&&(this.data_06_size=e.data_a2_s46_size),containsValue(e.data_a2_s46_sizems)&&(this.data_06_sizems=e.data_a2_s46_sizems),containsValue(e.data_a2_s46_channels)&&(this.data_06_channels=e.data_a2_s46_channels),containsValue(e.data_a2_s47_sizeout)&&(this.data_07_sizeout=e.data_a2_s47_sizeout),containsValue(e.data_a2_s47_size)&&(this.data_07_size=e.data_a2_s47_size),containsValue(e.data_a2_s47_sizems)&&(this.data_07_sizems=e.data_a2_s47_sizems),containsValue(e.data_a2_s47_channels)&&(this.data_07_channels=e.data_a2_s47_channels),containsValue(e.data_a2_s48_sizeout)&&(this.data_08_sizeout=e.data_a2_s48_sizeout),containsValue(e.data_a2_s48_size)&&(this.data_08_size=e.data_a2_s48_size),containsValue(e.data_a2_s48_sizems)&&(this.data_08_sizems=e.data_a2_s48_sizems),containsValue(e.data_a2_s48_channels)&&(this.data_08_channels=e.data_a2_s48_channels),containsValue(e.data_a2_s49_sizeout)&&(this.data_09_sizeout=e.data_a2_s49_sizeout),containsValue(e.data_a2_s49_size)&&(this.data_09_size=e.data_a2_s49_size),containsValue(e.data_a2_s49_sizems)&&(this.data_09_sizems=e.data_a2_s49_sizems),containsValue(e.data_a2_s49_channels)&&(this.data_09_channels=e.data_a2_s49_channels),containsValue(e.data_a2_s50_sizeout)&&(this.data_10_sizeout=e.data_a2_s50_sizeout),containsValue(e.data_a2_s50_size)&&(this.data_10_size=e.data_a2_s50_size),containsValue(e.data_a2_s50_sizems)&&(this.data_10_sizems=e.data_a2_s50_sizems),containsValue(e.data_a2_s50_channels)&&(this.data_10_channels=e.data_a2_s50_channels),containsValue(e.expr_s03_in1)&&(this.expr_289_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_289_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_289_out1=e.expr_s03_out1),containsValue(e.data_a2_s31_sizeout)&&(this.data_11_sizeout=e.data_a2_s31_sizeout),containsValue(e.data_a2_s31_size)&&(this.data_11_size=e.data_a2_s31_size),containsValue(e.data_a2_s31_sizems)&&(this.data_11_sizems=e.data_a2_s31_sizems),containsValue(e.data_a2_s31_channels)&&(this.data_11_channels=e.data_a2_s31_channels),containsValue(e.data_a2_s32_sizeout)&&(this.data_12_sizeout=e.data_a2_s32_sizeout),containsValue(e.data_a2_s32_size)&&(this.data_12_size=e.data_a2_s32_size),containsValue(e.data_a2_s32_sizems)&&(this.data_12_sizems=e.data_a2_s32_sizems),containsValue(e.data_a2_s32_channels)&&(this.data_12_channels=e.data_a2_s32_channels),containsValue(e.data_a2_s33_sizeout)&&(this.data_13_sizeout=e.data_a2_s33_sizeout),containsValue(e.data_a2_s33_size)&&(this.data_13_size=e.data_a2_s33_size),containsValue(e.data_a2_s33_sizems)&&(this.data_13_sizems=e.data_a2_s33_sizems),containsValue(e.data_a2_s33_channels)&&(this.data_13_channels=e.data_a2_s33_channels),containsValue(e.data_a2_s34_sizeout)&&(this.data_14_sizeout=e.data_a2_s34_sizeout),containsValue(e.data_a2_s34_size)&&(this.data_14_size=e.data_a2_s34_size),containsValue(e.data_a2_s34_sizems)&&(this.data_14_sizems=e.data_a2_s34_sizems),containsValue(e.data_a2_s34_channels)&&(this.data_14_channels=e.data_a2_s34_channels),containsValue(e.data_a2_s35_sizeout)&&(this.data_15_sizeout=e.data_a2_s35_sizeout),containsValue(e.data_a2_s35_size)&&(this.data_15_size=e.data_a2_s35_size),containsValue(e.data_a2_s35_sizems)&&(this.data_15_sizems=e.data_a2_s35_sizems),containsValue(e.data_a2_s35_channels)&&(this.data_15_channels=e.data_a2_s35_channels),containsValue(e.data_a2_s36_sizeout)&&(this.data_16_sizeout=e.data_a2_s36_sizeout),containsValue(e.data_a2_s36_size)&&(this.data_16_size=e.data_a2_s36_size),containsValue(e.data_a2_s36_sizems)&&(this.data_16_sizems=e.data_a2_s36_sizems),containsValue(e.data_a2_s36_channels)&&(this.data_16_channels=e.data_a2_s36_channels),containsValue(e.data_a2_s37_sizeout)&&(this.data_17_sizeout=e.data_a2_s37_sizeout),containsValue(e.data_a2_s37_size)&&(this.data_17_size=e.data_a2_s37_size),containsValue(e.data_a2_s37_sizems)&&(this.data_17_sizems=e.data_a2_s37_sizems),containsValue(e.data_a2_s37_channels)&&(this.data_17_channels=e.data_a2_s37_channels),containsValue(e.data_a2_s38_sizeout)&&(this.data_18_sizeout=e.data_a2_s38_sizeout),containsValue(e.data_a2_s38_size)&&(this.data_18_size=e.data_a2_s38_size),containsValue(e.data_a2_s38_sizems)&&(this.data_18_sizems=e.data_a2_s38_sizems),containsValue(e.data_a2_s38_channels)&&(this.data_18_channels=e.data_a2_s38_channels),containsValue(e.data_a2_s39_sizeout)&&(this.data_19_sizeout=e.data_a2_s39_sizeout),containsValue(e.data_a2_s39_size)&&(this.data_19_size=e.data_a2_s39_size),containsValue(e.data_a2_s39_sizems)&&(this.data_19_sizems=e.data_a2_s39_sizems),containsValue(e.data_a2_s39_channels)&&(this.data_19_channels=e.data_a2_s39_channels),containsValue(e.data_a2_s40_sizeout)&&(this.data_20_sizeout=e.data_a2_s40_sizeout),containsValue(e.data_a2_s40_size)&&(this.data_20_size=e.data_a2_s40_size),containsValue(e.data_a2_s40_sizems)&&(this.data_20_sizems=e.data_a2_s40_sizems),containsValue(e.data_a2_s40_channels)&&(this.data_20_channels=e.data_a2_s40_channels),containsValue(e.data_a2_s21_sizeout)&&(this.data_21_sizeout=e.data_a2_s21_sizeout),containsValue(e.data_a2_s21_size)&&(this.data_21_size=e.data_a2_s21_size),containsValue(e.data_a2_s21_sizems)&&(this.data_21_sizems=e.data_a2_s21_sizems),containsValue(e.data_a2_s21_channels)&&(this.data_21_channels=e.data_a2_s21_channels),containsValue(e.data_a2_s22_sizeout)&&(this.data_22_sizeout=e.data_a2_s22_sizeout),containsValue(e.data_a2_s22_size)&&(this.data_22_size=e.data_a2_s22_size),containsValue(e.data_a2_s22_sizems)&&(this.data_22_sizems=e.data_a2_s22_sizems),containsValue(e.data_a2_s22_channels)&&(this.data_22_channels=e.data_a2_s22_channels),containsValue(e.data_a2_s23_sizeout)&&(this.data_23_sizeout=e.data_a2_s23_sizeout),containsValue(e.data_a2_s23_size)&&(this.data_23_size=e.data_a2_s23_size),containsValue(e.data_a2_s23_sizems)&&(this.data_23_sizems=e.data_a2_s23_sizems),containsValue(e.data_a2_s23_channels)&&(this.data_23_channels=e.data_a2_s23_channels),containsValue(e.data_a2_s24_sizeout)&&(this.data_24_sizeout=e.data_a2_s24_sizeout),containsValue(e.data_a2_s24_size)&&(this.data_24_size=e.data_a2_s24_size),containsValue(e.data_a2_s24_sizems)&&(this.data_24_sizems=e.data_a2_s24_sizems),containsValue(e.data_a2_s24_channels)&&(this.data_24_channels=e.data_a2_s24_channels),containsValue(e.data_a2_s25_sizeout)&&(this.data_25_sizeout=e.data_a2_s25_sizeout),containsValue(e.data_a2_s25_size)&&(this.data_25_size=e.data_a2_s25_size),containsValue(e.data_a2_s25_sizems)&&(this.data_25_sizems=e.data_a2_s25_sizems),containsValue(e.data_a2_s25_channels)&&(this.data_25_channels=e.data_a2_s25_channels),containsValue(e.data_a2_s26_sizeout)&&(this.data_26_sizeout=e.data_a2_s26_sizeout),containsValue(e.data_a2_s26_size)&&(this.data_26_size=e.data_a2_s26_size),containsValue(e.data_a2_s26_sizems)&&(this.data_26_sizems=e.data_a2_s26_sizems),containsValue(e.data_a2_s26_channels)&&(this.data_26_channels=e.data_a2_s26_channels),containsValue(e.data_a2_s27_sizeout)&&(this.data_27_sizeout=e.data_a2_s27_sizeout),containsValue(e.data_a2_s27_size)&&(this.data_27_size=e.data_a2_s27_size),containsValue(e.data_a2_s27_sizems)&&(this.data_27_sizems=e.data_a2_s27_sizems),containsValue(e.data_a2_s27_channels)&&(this.data_27_channels=e.data_a2_s27_channels),containsValue(e.data_a2_s28_sizeout)&&(this.data_28_sizeout=e.data_a2_s28_sizeout),containsValue(e.data_a2_s28_size)&&(this.data_28_size=e.data_a2_s28_size),containsValue(e.data_a2_s28_sizems)&&(this.data_28_sizems=e.data_a2_s28_sizems),containsValue(e.data_a2_s28_channels)&&(this.data_28_channels=e.data_a2_s28_channels),containsValue(e.data_a2_s29_sizeout)&&(this.data_29_sizeout=e.data_a2_s29_sizeout),containsValue(e.data_a2_s29_size)&&(this.data_29_size=e.data_a2_s29_size),containsValue(e.data_a2_s29_sizems)&&(this.data_29_sizems=e.data_a2_s29_sizems),containsValue(e.data_a2_s29_channels)&&(this.data_29_channels=e.data_a2_s29_channels),containsValue(e.data_a2_s30_sizeout)&&(this.data_30_sizeout=e.data_a2_s30_sizeout),containsValue(e.data_a2_s30_size)&&(this.data_30_size=e.data_a2_s30_size),containsValue(e.data_a2_s30_sizems)&&(this.data_30_sizems=e.data_a2_s30_sizems),containsValue(e.data_a2_s30_channels)&&(this.data_30_channels=e.data_a2_s30_channels),containsValue(e.data_a2_s11_sizeout)&&(this.data_31_sizeout=e.data_a2_s11_sizeout),containsValue(e.data_a2_s11_size)&&(this.data_31_size=e.data_a2_s11_size),containsValue(e.data_a2_s11_sizems)&&(this.data_31_sizems=e.data_a2_s11_sizems),containsValue(e.data_a2_s11_channels)&&(this.data_31_channels=e.data_a2_s11_channels),containsValue(e.data_a2_s12_sizeout)&&(this.data_32_sizeout=e.data_a2_s12_sizeout),containsValue(e.data_a2_s12_size)&&(this.data_32_size=e.data_a2_s12_size),containsValue(e.data_a2_s12_sizems)&&(this.data_32_sizems=e.data_a2_s12_sizems),containsValue(e.data_a2_s12_channels)&&(this.data_32_channels=e.data_a2_s12_channels),containsValue(e.data_a2_s13_sizeout)&&(this.data_33_sizeout=e.data_a2_s13_sizeout),containsValue(e.data_a2_s13_size)&&(this.data_33_size=e.data_a2_s13_size),containsValue(e.data_a2_s13_sizems)&&(this.data_33_sizems=e.data_a2_s13_sizems),containsValue(e.data_a2_s13_channels)&&(this.data_33_channels=e.data_a2_s13_channels),containsValue(e.data_a2_s14_sizeout)&&(this.data_34_sizeout=e.data_a2_s14_sizeout),containsValue(e.data_a2_s14_size)&&(this.data_34_size=e.data_a2_s14_size),containsValue(e.data_a2_s14_sizems)&&(this.data_34_sizems=e.data_a2_s14_sizems),containsValue(e.data_a2_s14_channels)&&(this.data_34_channels=e.data_a2_s14_channels),containsValue(e.data_a2_s15_sizeout)&&(this.data_35_sizeout=e.data_a2_s15_sizeout),containsValue(e.data_a2_s15_size)&&(this.data_35_size=e.data_a2_s15_size),containsValue(e.data_a2_s15_sizems)&&(this.data_35_sizems=e.data_a2_s15_sizems),containsValue(e.data_a2_s15_channels)&&(this.data_35_channels=e.data_a2_s15_channels),containsValue(e.data_a2_s16_sizeout)&&(this.data_36_sizeout=e.data_a2_s16_sizeout),containsValue(e.data_a2_s16_size)&&(this.data_36_size=e.data_a2_s16_size),containsValue(e.data_a2_s16_sizems)&&(this.data_36_sizems=e.data_a2_s16_sizems),containsValue(e.data_a2_s16_channels)&&(this.data_36_channels=e.data_a2_s16_channels),containsValue(e.data_a2_s17_sizeout)&&(this.data_37_sizeout=e.data_a2_s17_sizeout),containsValue(e.data_a2_s17_size)&&(this.data_37_size=e.data_a2_s17_size),containsValue(e.data_a2_s17_sizems)&&(this.data_37_sizems=e.data_a2_s17_sizems),containsValue(e.data_a2_s17_channels)&&(this.data_37_channels=e.data_a2_s17_channels),containsValue(e.data_a2_s18_sizeout)&&(this.data_38_sizeout=e.data_a2_s18_sizeout),containsValue(e.data_a2_s18_size)&&(this.data_38_size=e.data_a2_s18_size),containsValue(e.data_a2_s18_sizems)&&(this.data_38_sizems=e.data_a2_s18_sizems),containsValue(e.data_a2_s18_channels)&&(this.data_38_channels=e.data_a2_s18_channels),containsValue(e.data_a2_s19_sizeout)&&(this.data_39_sizeout=e.data_a2_s19_sizeout),containsValue(e.data_a2_s19_size)&&(this.data_39_size=e.data_a2_s19_size),containsValue(e.data_a2_s19_sizems)&&(this.data_39_sizems=e.data_a2_s19_sizems),containsValue(e.data_a2_s19_channels)&&(this.data_39_channels=e.data_a2_s19_channels),containsValue(e.data_a2_s20_sizeout)&&(this.data_40_sizeout=e.data_a2_s20_sizeout),containsValue(e.data_a2_s20_size)&&(this.data_40_size=e.data_a2_s20_size),containsValue(e.data_a2_s20_sizems)&&(this.data_40_sizems=e.data_a2_s20_sizems),containsValue(e.data_a2_s20_channels)&&(this.data_40_channels=e.data_a2_s20_channels),containsValue(e.data_a2_s01_sizeout)&&(this.data_41_sizeout=e.data_a2_s01_sizeout),containsValue(e.data_a2_s01_size)&&(this.data_41_size=e.data_a2_s01_size),containsValue(e.data_a2_s01_sizems)&&(this.data_41_sizems=e.data_a2_s01_sizems),containsValue(e.data_a2_s01_channels)&&(this.data_41_channels=e.data_a2_s01_channels),containsValue(e.data_a2_s02_sizeout)&&(this.data_42_sizeout=e.data_a2_s02_sizeout),containsValue(e.data_a2_s02_size)&&(this.data_42_size=e.data_a2_s02_size),containsValue(e.data_a2_s02_sizems)&&(this.data_42_sizems=e.data_a2_s02_sizems),containsValue(e.data_a2_s02_channels)&&(this.data_42_channels=e.data_a2_s02_channels),containsValue(e.data_a2_s03_sizeout)&&(this.data_43_sizeout=e.data_a2_s03_sizeout),containsValue(e.data_a2_s03_size)&&(this.data_43_size=e.data_a2_s03_size),containsValue(e.data_a2_s03_sizems)&&(this.data_43_sizems=e.data_a2_s03_sizems),containsValue(e.data_a2_s03_channels)&&(this.data_43_channels=e.data_a2_s03_channels),containsValue(e.data_a2_s04_sizeout)&&(this.data_44_sizeout=e.data_a2_s04_sizeout),containsValue(e.data_a2_s04_size)&&(this.data_44_size=e.data_a2_s04_size),containsValue(e.data_a2_s04_sizems)&&(this.data_44_sizems=e.data_a2_s04_sizems),containsValue(e.data_a2_s04_channels)&&(this.data_44_channels=e.data_a2_s04_channels),containsValue(e.data_a2_s05_sizeout)&&(this.data_45_sizeout=e.data_a2_s05_sizeout),containsValue(e.data_a2_s05_size)&&(this.data_45_size=e.data_a2_s05_size),containsValue(e.data_a2_s05_sizems)&&(this.data_45_sizems=e.data_a2_s05_sizems),containsValue(e.data_a2_s05_channels)&&(this.data_45_channels=e.data_a2_s05_channels),containsValue(e.data_a2_s06_sizeout)&&(this.data_46_sizeout=e.data_a2_s06_sizeout),containsValue(e.data_a2_s06_size)&&(this.data_46_size=e.data_a2_s06_size),containsValue(e.data_a2_s06_sizems)&&(this.data_46_sizems=e.data_a2_s06_sizems),containsValue(e.data_a2_s06_channels)&&(this.data_46_channels=e.data_a2_s06_channels),containsValue(e.data_a2_s07_sizeout)&&(this.data_47_sizeout=e.data_a2_s07_sizeout),containsValue(e.data_a2_s07_size)&&(this.data_47_size=e.data_a2_s07_size),containsValue(e.data_a2_s07_sizems)&&(this.data_47_sizems=e.data_a2_s07_sizems),containsValue(e.data_a2_s07_channels)&&(this.data_47_channels=e.data_a2_s07_channels),containsValue(e.data_a2_s08_sizeout)&&(this.data_48_sizeout=e.data_a2_s08_sizeout),containsValue(e.data_a2_s08_size)&&(this.data_48_size=e.data_a2_s08_size),containsValue(e.data_a2_s08_sizems)&&(this.data_48_sizems=e.data_a2_s08_sizems),containsValue(e.data_a2_s08_channels)&&(this.data_48_channels=e.data_a2_s08_channels),containsValue(e.data_a2_s09_sizeout)&&(this.data_49_sizeout=e.data_a2_s09_sizeout),containsValue(e.data_a2_s09_size)&&(this.data_49_size=e.data_a2_s09_size),containsValue(e.data_a2_s09_sizems)&&(this.data_49_sizems=e.data_a2_s09_sizems),containsValue(e.data_a2_s09_channels)&&(this.data_49_channels=e.data_a2_s09_channels),containsValue(e.data_a2_s10_sizeout)&&(this.data_50_sizeout=e.data_a2_s10_sizeout),containsValue(e.data_a2_s10_size)&&(this.data_50_size=e.data_a2_s10_size),containsValue(e.data_a2_s10_sizems)&&(this.data_50_sizems=e.data_a2_s10_sizems),containsValue(e.data_a2_s10_channels)&&(this.data_50_channels=e.data_a2_s10_channels),containsValue(e.p_s01p_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01p_audioProcessSampleCount),containsValue(e.p_s01p_zeroBuffer)&&(this.zeroBuffer=e.p_s01p_zeroBuffer),containsValue(e.p_s01p_dummyBuffer)&&(this.dummyBuffer=e.p_s01p_dummyBuffer),containsValue(e.p_s01p_vs)&&(this.vs=e.p_s01p_vs),containsValue(e.p_s01p_maxvs)&&(this.maxvs=e.p_s01p_maxvs),containsValue(e.p_s01p_sr)&&(this.sr=e.p_s01p_sr),containsValue(e.p_s01p_invsr)&&(this.invsr=e.p_s01p_invsr),containsValue(e.groove_a1_s01_readIndex)&&(this.groove_01_readIndex=e.groove_a1_s01_readIndex),containsValue(e.groove_a1_s01_playStatus)&&(this.groove_01_playStatus=e.groove_a1_s01_playStatus),containsValue(e.groove_a1_s01_changeIncomingInSamples)&&(this.groove_01_changeIncomingInSamples=e.groove_a1_s01_changeIncomingInSamples),containsValue(e.groove_a1_s01_incomingChange)&&(this.groove_01_incomingChange=e.groove_a1_s01_incomingChange),containsValue(e.groove_a1_s01_crossfadeInSamples)&&(this.groove_01_crossfadeInSamples=e.groove_a1_s01_crossfadeInSamples),containsValue(e.groove_a1_s01_setupDone)&&(this.groove_01_setupDone=e.groove_a1_s01_setupDone),containsValue(e.line_a1_s01_activeRamps)&&(this.line_11_activeRamps=e.line_a1_s01_activeRamps),containsValue(e.line_a1_s01_currentValue)&&(this.line_11_currentValue=e.line_a1_s01_currentValue),containsValue(e.onepole_s01_freq)&&(this.onepole_tilde_07_freq=e.onepole_s01_freq),containsValue(e.onepole_s01_needsUpdate)&&(this.onepole_tilde_07_needsUpdate=e.onepole_s01_needsUpdate),containsValue(e.onepole_s01_lastY)&&(this.onepole_tilde_07_lastY=e.onepole_s01_lastY),containsValue(e.onepole_s01_a0)&&(this.onepole_tilde_07_a0=e.onepole_s01_a0),containsValue(e.onepole_s01_b1)&&(this.onepole_tilde_07_b1=e.onepole_s01_b1),containsValue(e.onepole_s01_setupDone)&&(this.onepole_tilde_07_setupDone=e.onepole_s01_setupDone),containsValue(e.line_a1_s02_activeRamps)&&(this.line_12_activeRamps=e.line_a1_s02_activeRamps),containsValue(e.line_a1_s02_currentValue)&&(this.line_12_currentValue=e.line_a1_s02_currentValue),containsValue(e.data_a2_s41_sizemode)&&(this.data_01_sizemode=e.data_a2_s41_sizemode),containsValue(e.data_a2_s41_setupDone)&&(this.data_01_setupDone=e.data_a2_s41_setupDone),containsValue(e.data_a2_s42_sizemode)&&(this.data_02_sizemode=e.data_a2_s42_sizemode),containsValue(e.data_a2_s42_setupDone)&&(this.data_02_setupDone=e.data_a2_s42_setupDone),containsValue(e.data_a2_s43_sizemode)&&(this.data_03_sizemode=e.data_a2_s43_sizemode),containsValue(e.data_a2_s43_setupDone)&&(this.data_03_setupDone=e.data_a2_s43_setupDone),containsValue(e.data_a2_s44_sizemode)&&(this.data_04_sizemode=e.data_a2_s44_sizemode),containsValue(e.data_a2_s44_setupDone)&&(this.data_04_setupDone=e.data_a2_s44_setupDone),containsValue(e.data_a2_s45_sizemode)&&(this.data_05_sizemode=e.data_a2_s45_sizemode),containsValue(e.data_a2_s45_setupDone)&&(this.data_05_setupDone=e.data_a2_s45_setupDone),containsValue(e.data_a2_s46_sizemode)&&(this.data_06_sizemode=e.data_a2_s46_sizemode),containsValue(e.data_a2_s46_setupDone)&&(this.data_06_setupDone=e.data_a2_s46_setupDone),containsValue(e.data_a2_s47_sizemode)&&(this.data_07_sizemode=e.data_a2_s47_sizemode),containsValue(e.data_a2_s47_setupDone)&&(this.data_07_setupDone=e.data_a2_s47_setupDone),containsValue(e.data_a2_s48_sizemode)&&(this.data_08_sizemode=e.data_a2_s48_sizemode),containsValue(e.data_a2_s48_setupDone)&&(this.data_08_setupDone=e.data_a2_s48_setupDone),containsValue(e.data_a2_s49_sizemode)&&(this.data_09_sizemode=e.data_a2_s49_sizemode),containsValue(e.data_a2_s49_setupDone)&&(this.data_09_setupDone=e.data_a2_s49_setupDone),containsValue(e.data_a2_s50_sizemode)&&(this.data_10_sizemode=e.data_a2_s50_sizemode),containsValue(e.data_a2_s50_setupDone)&&(this.data_10_setupDone=e.data_a2_s50_setupDone),containsValue(e.data_a2_s31_sizemode)&&(this.data_11_sizemode=e.data_a2_s31_sizemode),containsValue(e.data_a2_s31_setupDone)&&(this.data_11_setupDone=e.data_a2_s31_setupDone),containsValue(e.data_a2_s32_sizemode)&&(this.data_12_sizemode=e.data_a2_s32_sizemode),containsValue(e.data_a2_s32_setupDone)&&(this.data_12_setupDone=e.data_a2_s32_setupDone),containsValue(e.data_a2_s33_sizemode)&&(this.data_13_sizemode=e.data_a2_s33_sizemode),containsValue(e.data_a2_s33_setupDone)&&(this.data_13_setupDone=e.data_a2_s33_setupDone),containsValue(e.data_a2_s34_sizemode)&&(this.data_14_sizemode=e.data_a2_s34_sizemode),containsValue(e.data_a2_s34_setupDone)&&(this.data_14_setupDone=e.data_a2_s34_setupDone),containsValue(e.data_a2_s35_sizemode)&&(this.data_15_sizemode=e.data_a2_s35_sizemode),containsValue(e.data_a2_s35_setupDone)&&(this.data_15_setupDone=e.data_a2_s35_setupDone),containsValue(e.data_a2_s36_sizemode)&&(this.data_16_sizemode=e.data_a2_s36_sizemode),containsValue(e.data_a2_s36_setupDone)&&(this.data_16_setupDone=e.data_a2_s36_setupDone),containsValue(e.data_a2_s37_sizemode)&&(this.data_17_sizemode=e.data_a2_s37_sizemode),containsValue(e.data_a2_s37_setupDone)&&(this.data_17_setupDone=e.data_a2_s37_setupDone),containsValue(e.data_a2_s38_sizemode)&&(this.data_18_sizemode=e.data_a2_s38_sizemode),containsValue(e.data_a2_s38_setupDone)&&(this.data_18_setupDone=e.data_a2_s38_setupDone),containsValue(e.data_a2_s39_sizemode)&&(this.data_19_sizemode=e.data_a2_s39_sizemode),containsValue(e.data_a2_s39_setupDone)&&(this.data_19_setupDone=e.data_a2_s39_setupDone),containsValue(e.data_a2_s40_sizemode)&&(this.data_20_sizemode=e.data_a2_s40_sizemode),containsValue(e.data_a2_s40_setupDone)&&(this.data_20_setupDone=e.data_a2_s40_setupDone),containsValue(e.data_a2_s21_sizemode)&&(this.data_21_sizemode=e.data_a2_s21_sizemode),containsValue(e.data_a2_s21_setupDone)&&(this.data_21_setupDone=e.data_a2_s21_setupDone),containsValue(e.data_a2_s22_sizemode)&&(this.data_22_sizemode=e.data_a2_s22_sizemode),containsValue(e.data_a2_s22_setupDone)&&(this.data_22_setupDone=e.data_a2_s22_setupDone),containsValue(e.data_a2_s23_sizemode)&&(this.data_23_sizemode=e.data_a2_s23_sizemode),containsValue(e.data_a2_s23_setupDone)&&(this.data_23_setupDone=e.data_a2_s23_setupDone),containsValue(e.data_a2_s24_sizemode)&&(this.data_24_sizemode=e.data_a2_s24_sizemode),containsValue(e.data_a2_s24_setupDone)&&(this.data_24_setupDone=e.data_a2_s24_setupDone),containsValue(e.data_a2_s25_sizemode)&&(this.data_25_sizemode=e.data_a2_s25_sizemode),containsValue(e.data_a2_s25_setupDone)&&(this.data_25_setupDone=e.data_a2_s25_setupDone),containsValue(e.data_a2_s26_sizemode)&&(this.data_26_sizemode=e.data_a2_s26_sizemode),containsValue(e.data_a2_s26_setupDone)&&(this.data_26_setupDone=e.data_a2_s26_setupDone),containsValue(e.data_a2_s27_sizemode)&&(this.data_27_sizemode=e.data_a2_s27_sizemode),containsValue(e.data_a2_s27_setupDone)&&(this.data_27_setupDone=e.data_a2_s27_setupDone),containsValue(e.data_a2_s28_sizemode)&&(this.data_28_sizemode=e.data_a2_s28_sizemode),containsValue(e.data_a2_s28_setupDone)&&(this.data_28_setupDone=e.data_a2_s28_setupDone),containsValue(e.data_a2_s29_sizemode)&&(this.data_29_sizemode=e.data_a2_s29_sizemode),containsValue(e.data_a2_s29_setupDone)&&(this.data_29_setupDone=e.data_a2_s29_setupDone),containsValue(e.data_a2_s30_sizemode)&&(this.data_30_sizemode=e.data_a2_s30_sizemode),containsValue(e.data_a2_s30_setupDone)&&(this.data_30_setupDone=e.data_a2_s30_setupDone),containsValue(e.data_a2_s11_sizemode)&&(this.data_31_sizemode=e.data_a2_s11_sizemode),containsValue(e.data_a2_s11_setupDone)&&(this.data_31_setupDone=e.data_a2_s11_setupDone),containsValue(e.data_a2_s12_sizemode)&&(this.data_32_sizemode=e.data_a2_s12_sizemode),containsValue(e.data_a2_s12_setupDone)&&(this.data_32_setupDone=e.data_a2_s12_setupDone),containsValue(e.data_a2_s13_sizemode)&&(this.data_33_sizemode=e.data_a2_s13_sizemode),containsValue(e.data_a2_s13_setupDone)&&(this.data_33_setupDone=e.data_a2_s13_setupDone),containsValue(e.data_a2_s14_sizemode)&&(this.data_34_sizemode=e.data_a2_s14_sizemode),containsValue(e.data_a2_s14_setupDone)&&(this.data_34_setupDone=e.data_a2_s14_setupDone),containsValue(e.data_a2_s15_sizemode)&&(this.data_35_sizemode=e.data_a2_s15_sizemode),containsValue(e.data_a2_s15_setupDone)&&(this.data_35_setupDone=e.data_a2_s15_setupDone),containsValue(e.data_a2_s16_sizemode)&&(this.data_36_sizemode=e.data_a2_s16_sizemode),containsValue(e.data_a2_s16_setupDone)&&(this.data_36_setupDone=e.data_a2_s16_setupDone),containsValue(e.data_a2_s17_sizemode)&&(this.data_37_sizemode=e.data_a2_s17_sizemode),containsValue(e.data_a2_s17_setupDone)&&(this.data_37_setupDone=e.data_a2_s17_setupDone),containsValue(e.data_a2_s18_sizemode)&&(this.data_38_sizemode=e.data_a2_s18_sizemode),containsValue(e.data_a2_s18_setupDone)&&(this.data_38_setupDone=e.data_a2_s18_setupDone),containsValue(e.data_a2_s19_sizemode)&&(this.data_39_sizemode=e.data_a2_s19_sizemode),containsValue(e.data_a2_s19_setupDone)&&(this.data_39_setupDone=e.data_a2_s19_setupDone),containsValue(e.data_a2_s20_sizemode)&&(this.data_40_sizemode=e.data_a2_s20_sizemode),containsValue(e.data_a2_s20_setupDone)&&(this.data_40_setupDone=e.data_a2_s20_setupDone),containsValue(e.data_a2_s01_sizemode)&&(this.data_41_sizemode=e.data_a2_s01_sizemode),containsValue(e.data_a2_s01_setupDone)&&(this.data_41_setupDone=e.data_a2_s01_setupDone),containsValue(e.data_a2_s02_sizemode)&&(this.data_42_sizemode=e.data_a2_s02_sizemode),containsValue(e.data_a2_s02_setupDone)&&(this.data_42_setupDone=e.data_a2_s02_setupDone),containsValue(e.data_a2_s03_sizemode)&&(this.data_43_sizemode=e.data_a2_s03_sizemode),containsValue(e.data_a2_s03_setupDone)&&(this.data_43_setupDone=e.data_a2_s03_setupDone),containsValue(e.data_a2_s04_sizemode)&&(this.data_44_sizemode=e.data_a2_s04_sizemode),containsValue(e.data_a2_s04_setupDone)&&(this.data_44_setupDone=e.data_a2_s04_setupDone),containsValue(e.data_a2_s05_sizemode)&&(this.data_45_sizemode=e.data_a2_s05_sizemode),containsValue(e.data_a2_s05_setupDone)&&(this.data_45_setupDone=e.data_a2_s05_setupDone),containsValue(e.data_a2_s06_sizemode)&&(this.data_46_sizemode=e.data_a2_s06_sizemode),containsValue(e.data_a2_s06_setupDone)&&(this.data_46_setupDone=e.data_a2_s06_setupDone),containsValue(e.data_a2_s07_sizemode)&&(this.data_47_sizemode=e.data_a2_s07_sizemode),containsValue(e.data_a2_s07_setupDone)&&(this.data_47_setupDone=e.data_a2_s07_setupDone),containsValue(e.data_a2_s08_sizemode)&&(this.data_48_sizemode=e.data_a2_s08_sizemode),containsValue(e.data_a2_s08_setupDone)&&(this.data_48_setupDone=e.data_a2_s08_setupDone),containsValue(e.data_a2_s09_sizemode)&&(this.data_49_sizemode=e.data_a2_s09_sizemode),containsValue(e.data_a2_s09_setupDone)&&(this.data_49_setupDone=e.data_a2_s09_setupDone),containsValue(e.data_a2_s10_sizemode)&&(this.data_50_sizemode=e.data_a2_s10_sizemode),containsValue(e.data_a2_s10_setupDone)&&(this.data_50_setupDone=e.data_a2_s10_setupDone),containsValue(e.p1_p_s15_p_s01p_groove_a1_s01_buffer)&&(this.groove_01_bufferobj=e.p1_p_s15_p_s01p_groove_a1_s01_buffer),containsValue(e.p_s01p_noteNumber)&&(this.noteNumber=e.p_s01p_noteNumber),containsValue(e.p_s01p_isMuted)&&(this.isMuted=e.p_s01p_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getPolyParameterValue(e,t){return e[0].getParameterValue(t)}setPolyParameterValue(e,t,s,a){for(var r=0;r<120;r++)e[r].setParameterValue(t,s,a)}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){1==this.voiceIndex&&this.getPatcher().sendParameter(e+this.parameterOffset)}sendPolyParameter(e,t){this.getPatcher().sendParameter(e+this.parameterOffset+t-1)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 892732297:this.loadmess_05_startupbang_bang();break;case 760652352:this.line_11_target_bang();break;case-798469121:this.line_12_target_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"startupbang\"):TAG(\"groovy/p_obj-1/loadmess_obj-75\")==t&&this.loadmess_05_startupbang_bang()}}resolveTag(e){switch(e){case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"groovy/p_obj-1/loadmess_obj-75\"):return\"groovy/p_obj-1/loadmess_obj-75\"}return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}zeroDataRef(e){e.setZero()}processDataViewUpdate(e,t){this.updateTime(t),-1!=e&&10!=e&&9!=e&&8!=e&&7!=e&&6!=e&&5!=e&&4!=e&&3!=e&&2!=e&&1!=e&&20!=e&&19!=e&&18!=e&&17!=e&&16!=e&&15!=e&&14!=e&&13!=e&&12!=e&&11!=e&&30!=e&&29!=e&&28!=e&&27!=e&&26!=e&&25!=e&&24!=e&&24!=e&&23!=e&&22!=e&&21!=e&&40!=e&&39!=e&&38!=e&&37!=e&&36!=e&&35!=e&&34!=e&&33!=e&&32!=e&&31!=e&&50!=e&&49!=e&&48!=e&&47!=e&&46!=e&&45!=e&&44!=e&&43!=e&&42!=e&&41!=e||(this.groove_01_buffer=new Float32MultiBuffer(this.groove_01_bufferobj)),1==e&&(this.data_01_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf9),this.data_01_bufferUpdated()),2==e&&(this.data_02_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf8),this.data_02_bufferUpdated()),3==e&&(this.data_03_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf7),this.data_03_bufferUpdated()),4==e&&(this.data_04_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf6),this.data_04_bufferUpdated()),5==e&&(this.data_05_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf5),this.data_05_bufferUpdated()),6==e&&(this.data_06_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf4),this.data_06_bufferUpdated()),7==e&&(this.data_07_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf3),this.data_07_bufferUpdated()),8==e&&(this.data_08_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf2),this.data_08_bufferUpdated()),9==e&&(this.data_09_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf1),this.data_09_bufferUpdated()),10==e&&(this.data_10_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf0),this.data_10_bufferUpdated()),11==e&&(this.data_11_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf19),this.data_11_bufferUpdated()),12==e&&(this.data_12_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf18),this.data_12_bufferUpdated()),13==e&&(this.data_13_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf17),this.data_13_bufferUpdated()),14==e&&(this.data_14_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf16),this.data_14_bufferUpdated()),15==e&&(this.data_15_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf15),this.data_15_bufferUpdated()),16==e&&(this.data_16_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf14),this.data_16_bufferUpdated()),17==e&&(this.data_17_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf13),this.data_17_bufferUpdated()),18==e&&(this.data_18_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf12),this.data_18_bufferUpdated()),19==e&&(this.data_19_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf11),this.data_19_bufferUpdated()),20==e&&(this.data_20_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf10),this.data_20_bufferUpdated()),21==e&&(this.data_21_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf29),this.data_21_bufferUpdated()),22==e&&(this.data_22_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf28),this.data_22_bufferUpdated()),23==e&&(this.data_23_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf27),this.data_23_bufferUpdated()),24==e&&(this.data_24_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf26),this.data_24_bufferUpdated()),25==e&&(this.data_25_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf25),this.data_25_bufferUpdated()),26==e&&(this.data_26_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf24),this.data_26_bufferUpdated()),27==e&&(this.data_27_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf23),this.data_27_bufferUpdated()),28==e&&(this.data_28_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf22),this.data_28_bufferUpdated()),29==e&&(this.data_29_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf21),this.data_29_bufferUpdated()),30==e&&(this.data_30_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf20),this.data_30_bufferUpdated()),31==e&&(this.data_31_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf39),this.data_31_bufferUpdated()),32==e&&(this.data_32_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf38),this.data_32_bufferUpdated()),33==e&&(this.data_33_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf37),this.data_33_bufferUpdated()),34==e&&(this.data_34_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf36),this.data_34_bufferUpdated()),35==e&&(this.data_35_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf35),this.data_35_bufferUpdated()),36==e&&(this.data_36_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf34),this.data_36_bufferUpdated()),37==e&&(this.data_37_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf33),this.data_37_bufferUpdated()),38==e&&(this.data_38_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf32),this.data_38_bufferUpdated()),39==e&&(this.data_39_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf31),this.data_39_bufferUpdated()),40==e&&(this.data_40_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf30),this.data_40_bufferUpdated()),41==e&&(this.data_41_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf49),this.data_41_bufferUpdated()),42==e&&(this.data_42_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf48),this.data_42_bufferUpdated()),43==e&&(this.data_43_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf47),this.data_43_bufferUpdated()),44==e&&(this.data_44_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf46),this.data_44_bufferUpdated()),45==e&&(this.data_45_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf45),this.data_45_bufferUpdated()),46==e&&(this.data_46_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf44),this.data_46_bufferUpdated()),47==e&&(this.data_47_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf43),this.data_47_bufferUpdated()),48==e&&(this.data_48_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf42),this.data_48_bufferUpdated()),49==e&&(this.data_49_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf41),this.data_49_bufferUpdated()),50==e&&(this.data_50_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf40),this.data_50_bufferUpdated())}initialize(e){this.groove_01_bufferobj=initMultiRef(this.getPatcher().getPatcher().buf0,this.getPatcher().getPatcher().buf1,this.getPatcher().getPatcher().buf2,this.getPatcher().getPatcher().buf3,this.getPatcher().getPatcher().buf4,this.getPatcher().getPatcher().buf5,this.getPatcher().getPatcher().buf6,this.getPatcher().getPatcher().buf7,this.getPatcher().getPatcher().buf8,this.getPatcher().getPatcher().buf9,this.getPatcher().getPatcher().buf10,this.getPatcher().getPatcher().buf11,this.getPatcher().getPatcher().buf12,this.getPatcher().getPatcher().buf13,this.getPatcher().getPatcher().buf14,this.getPatcher().getPatcher().buf15,this.getPatcher().getPatcher().buf16,this.getPatcher().getPatcher().buf17,this.getPatcher().getPatcher().buf18,this.getPatcher().getPatcher().buf19,this.getPatcher().getPatcher().buf20,this.getPatcher().getPatcher().buf21,this.getPatcher().getPatcher().buf22,this.getPatcher().getPatcher().buf23,this.getPatcher().getPatcher().buf24,this.getPatcher().getPatcher().buf25,this.getPatcher().getPatcher().buf26,this.getPatcher().getPatcher().buf26,this.getPatcher().getPatcher().buf27,this.getPatcher().getPatcher().buf28,this.getPatcher().getPatcher().buf29,this.getPatcher().getPatcher().buf30,this.getPatcher().getPatcher().buf31,this.getPatcher().getPatcher().buf32,this.getPatcher().getPatcher().buf33,this.getPatcher().getPatcher().buf34,this.getPatcher().getPatcher().buf35,this.getPatcher().getPatcher().buf36,this.getPatcher().getPatcher().buf37,this.getPatcher().getPatcher().buf38,this.getPatcher().getPatcher().buf39,this.getPatcher().getPatcher().buf40,this.getPatcher().getPatcher().buf41,this.getPatcher().getPatcher().buf42,this.getPatcher().getPatcher().buf43,this.getPatcher().getPatcher().buf44,this.getPatcher().getPatcher().buf45,this.getPatcher().getPatcher().buf46,this.getPatcher().getPatcher().buf47,this.getPatcher().getPatcher().buf48,this.getPatcher().getPatcher().buf49),this.assign_defaults(),this.setState(e),this.groove_01_bufferobj.setIndex(-1),this.groove_01_buffer=new Float32MultiBuffer(this.groove_01_bufferobj),this.data_01_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf9),this.data_02_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf8),this.data_03_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf7),this.data_04_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf6),this.data_05_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf5),this.data_06_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf4),this.data_07_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf3),this.data_08_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf2),this.data_09_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf1),this.data_10_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf0),this.data_11_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf19),this.data_12_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf18),this.data_13_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf17),this.data_14_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf16),this.data_15_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf15),this.data_16_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf14),this.data_17_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf13),this.data_18_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf12),this.data_19_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf11),this.data_20_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf10),this.data_21_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf29),this.data_22_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf28),this.data_23_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf27),this.data_24_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf26),this.data_25_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf25),this.data_26_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf24),this.data_27_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf23),this.data_28_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf22),this.data_29_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf21),this.data_30_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf20),this.data_31_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf39),this.data_32_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf38),this.data_33_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf37),this.data_34_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf36),this.data_35_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf35),this.data_36_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf34),this.data_37_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf33),this.data_38_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf32),this.data_39_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf31),this.data_40_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf30),this.data_41_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf49),this.data_42_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf48),this.data_43_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf47),this.data_44_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf46),this.data_45_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf45),this.data_46_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf44),this.data_47_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf43),this.data_48_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf42),this.data_49_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf41),this.data_50_buffer=new Float32Buffer(this.getPatcher().getPatcher().buf40)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_490{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_33_phase=!0,this.voiceIndex=0,this.parameterOffset=0,this.p_79=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 1}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.p_s01_target)&&(this.p_79_target=e.p_s01_target),containsValue(e.counter_s01_carryflag)&&(this.counter_33_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_33_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_33_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_33_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_33_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_33_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_33_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_33_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_33_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_33_minimum=e.counter_s01_minimum),containsValue(e.loadmess_s01_message)&&(this.loadmess_06_message=e.loadmess_s01_message),containsValue(e.p_s15_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s15_audioProcessSampleCount),containsValue(e.p_s15_zeroBuffer)&&(this.zeroBuffer=e.p_s15_zeroBuffer),containsValue(e.p_s15_dummyBuffer)&&(this.dummyBuffer=e.p_s15_dummyBuffer),containsValue(e.p_s15_vs)&&(this.vs=e.p_s15_vs),containsValue(e.p_s15_maxvs)&&(this.maxvs=e.p_s15_maxvs),containsValue(e.p_s15_sr)&&(this.sr=e.p_s15_sr),containsValue(e.p_s15_invsr)&&(this.invsr=e.p_s15_invsr),containsValue(e.counter_s01_count)&&(this.counter_33_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_33_phase=e.counter_s01_phase),containsValue(e.p_s15_noteNumber)&&(this.noteNumber=e.p_s15_noteNumber),containsValue(e.p_s15_isMuted)&&(this.isMuted=e.p_s15_isMuted));for(var t=0;t<120;t++)this.p_79[t]=new RNBOSubpatcher_473,this.p_79[t].setEngineAndPatcher(this.getEngine(),this),this.p_79[t].initialize(getSubStateAt(e,\"p_s01p\",t)),this.p_79[t].setParameterOffset(this.getParameterOffset(this.p_79[0])),this.p_79[t].setVoiceIndex(t+1)}getPreset(e){for(var t=0;t<120;t++)this.p_79[t].getPreset(getSubStateAt(getSubState(e,\"__sps\"),\"p_obj-1\",t))}processTempoEvent(e,t){this.updateTime(e);for(var s=0;s<120;s++)this.p_79[s].processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e);for(var s=0;s<120;s++)this.p_79[s].processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e);for(var s=0;s<120;s++)this.p_79[s].processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e);for(var a=0;a<120;a++)this.p_79[a].processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_79[0].getNumParameters()&&this.p_79[0].setPolyParameterValue(this.p_79,e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_79[0].getNumParameters()?this.p_79[0].getPolyParameterValue(this.p_79,e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_79[0].getNumParameters()}getParameterName(e){if((e-=0)<this.p_79[0].getNumParameters())for(var t=0;t<120;t++)return this.p_79[t].getParameterName(e);return\"bogus\"}getParameterId(e){if((e-=0)<this.p_79[0].getNumParameters())for(var t=0;t<120;t++)return this.p_79[t].getParameterId(e);return\"bogus\"}getParameterInfo(e,t){if((e-=0)<this.p_79[0].getNumParameters())for(var s=0;s<120;s++)this.p_79[s].getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return this.p_79[0],0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){if((e-=0)<this.p_79[0].getNumParameters())for(var s=0;s<120;s++)return this.p_79[s].convertToNormalizedParameterValue(e,t);return t}convertFromNormalizedParameterValue(e,t){if(t=t<0?0:t>1?1:t,(e-=0)<this.p_79[0].getNumParameters())for(var s=0;s<120;s++)return this.p_79[s].convertFromNormalizedParameterValue(e,t);return t}constrainParameterValue(e,t){if((e-=0)<this.p_79[0].getNumParameters())for(var s=0;s<120;s++)return this.p_79[s].constrainParameterValue(e,t);return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 892732297:this.loadmess_06_startupbang_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s);for(var r=0;r<120;r++)this.p_79[r].processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){this.updateTime(s);for(var r=0;r<120;r++)this.p_79[r].processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"startupbang\"):TAG(\"groovy/loadmess_obj-7\")==t&&this.loadmess_06_startupbang_bang()}for(var a=0;a<120;a++)this.p_79[a].processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"groovy/loadmess_obj-7\"):return\"groovy/loadmess_obj-7\"}var t=this.p_79[0].resolveTag(e);return t||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t);for(var s=0;s<120;s++)this.p_79[s].processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_474{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_34_phase=!0,this.random_85_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_290_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_290_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_290_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_290_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_291_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_291_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_291_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_31_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_31_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_31_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_31_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_31_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_31_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_31_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_31_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_31_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_34_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_34_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_34_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_34_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_34_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_34_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_34_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_34_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_34_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_34_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_57_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_57_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_292_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_292_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_85_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_85_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_293_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_293_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_293_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_29_input=e.listlen_a1_s01_input),containsValue(e.p_s03_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s03_audioProcessSampleCount),containsValue(e.p_s03_zeroBuffer)&&(this.zeroBuffer=e.p_s03_zeroBuffer),containsValue(e.p_s03_dummyBuffer)&&(this.dummyBuffer=e.p_s03_dummyBuffer),containsValue(e.p_s03_vs)&&(this.vs=e.p_s03_vs),containsValue(e.p_s03_maxvs)&&(this.maxvs=e.p_s03_maxvs),containsValue(e.p_s03_sr)&&(this.sr=e.p_s03_sr),containsValue(e.p_s03_invsr)&&(this.invsr=e.p_s03_invsr),containsValue(e.counter_s01_count)&&(this.counter_34_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_34_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_85_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_85_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s03_noteNumber)&&(this.noteNumber=e.p_s03_noteNumber),containsValue(e.p_s03_isMuted)&&(this.isMuted=e.p_s03_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_475{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_35_phase=!0,this.random_86_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_294_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_294_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_294_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_294_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_295_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_295_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_295_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_32_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_32_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_32_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_32_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_32_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_32_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_32_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_32_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_32_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_35_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_35_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_35_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_35_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_35_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_35_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_35_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_35_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_35_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_35_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_58_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_58_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_296_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_296_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_86_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_86_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_297_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_297_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_297_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_30_input=e.listlen_a1_s01_input),containsValue(e.p_s02_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s02_audioProcessSampleCount),containsValue(e.p_s02_zeroBuffer)&&(this.zeroBuffer=e.p_s02_zeroBuffer),containsValue(e.p_s02_dummyBuffer)&&(this.dummyBuffer=e.p_s02_dummyBuffer),containsValue(e.p_s02_vs)&&(this.vs=e.p_s02_vs),containsValue(e.p_s02_maxvs)&&(this.maxvs=e.p_s02_maxvs),containsValue(e.p_s02_sr)&&(this.sr=e.p_s02_sr),containsValue(e.p_s02_invsr)&&(this.invsr=e.p_s02_invsr),containsValue(e.counter_s01_count)&&(this.counter_35_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_35_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_86_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_86_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s02_noteNumber)&&(this.noteNumber=e.p_s02_noteNumber),containsValue(e.p_s02_isMuted)&&(this.isMuted=e.p_s02_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_476{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_36_phase=!0,this.random_87_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_298_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_298_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_298_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_298_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_299_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_299_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_299_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_33_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_33_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_33_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_33_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_33_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_33_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_33_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_33_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_33_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_36_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_36_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_36_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_36_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_36_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_36_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_36_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_36_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_36_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_36_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_59_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_59_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_300_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_300_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_87_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_87_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_301_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_301_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_301_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_31_input=e.listlen_a1_s01_input),containsValue(e.p_s01_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s01_audioProcessSampleCount),containsValue(e.p_s01_zeroBuffer)&&(this.zeroBuffer=e.p_s01_zeroBuffer),containsValue(e.p_s01_dummyBuffer)&&(this.dummyBuffer=e.p_s01_dummyBuffer),containsValue(e.p_s01_vs)&&(this.vs=e.p_s01_vs),containsValue(e.p_s01_maxvs)&&(this.maxvs=e.p_s01_maxvs),containsValue(e.p_s01_sr)&&(this.sr=e.p_s01_sr),containsValue(e.p_s01_invsr)&&(this.invsr=e.p_s01_invsr),containsValue(e.counter_s01_count)&&(this.counter_36_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_36_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_87_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_87_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s01_noteNumber)&&(this.noteNumber=e.p_s01_noteNumber),containsValue(e.p_s01_isMuted)&&(this.isMuted=e.p_s01_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_491{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0,this.p_80=new Array,this.p_81=new Array,this.p_82=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.listindex_a2_s01_input)&&(this.listindex_34_input=e.listindex_a2_s01_input),containsValue(e.listindex_a2_s01_index)&&(this.listindex_34_index=e.listindex_a2_s01_index),containsValue(e.listreg_a1_s01_in1)&&(this.listreg_04_in1=e.listreg_a1_s01_in1),containsValue(e.listreg_a1_s01_in2)&&(this.listreg_04_in2=e.listreg_a1_s01_in2),containsValue(e.listrot_a1_s01_input)&&(this.listrot_01_input=e.listrot_a1_s01_input),containsValue(e.listrot_a1_s01_shift)&&(this.listrot_01_shift=e.listrot_a1_s01_shift),containsValue(e.join_s01_in0)&&(this.join_05_in0=e.join_s01_in0),containsValue(e.join_s01_in1)&&(this.join_05_in1=e.join_s01_in1),containsValue(e.join_s01_in2)&&(this.join_05_in2=e.join_s01_in2),containsValue(e.join_s01_in3)&&(this.join_05_in3=e.join_s01_in3),containsValue(e.expr_s01_in1)&&(this.expr_302_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_302_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_302_out1=e.expr_s01_out1),containsValue(e.p_s03_target)&&(this.p_80_target=e.p_s03_target),containsValue(e.loadmess_s01_message)&&(this.loadmess_07_message=e.loadmess_s01_message),containsValue(e.p_s02_target)&&(this.p_81_target=e.p_s02_target),containsValue(e.p_s01_target)&&(this.p_82_target=e.p_s01_target),containsValue(e.p_s14_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s14_audioProcessSampleCount),containsValue(e.p_s14_zeroBuffer)&&(this.zeroBuffer=e.p_s14_zeroBuffer),containsValue(e.p_s14_dummyBuffer)&&(this.dummyBuffer=e.p_s14_dummyBuffer),containsValue(e.p_s14_vs)&&(this.vs=e.p_s14_vs),containsValue(e.p_s14_maxvs)&&(this.maxvs=e.p_s14_maxvs),containsValue(e.p_s14_sr)&&(this.sr=e.p_s14_sr),containsValue(e.p_s14_invsr)&&(this.invsr=e.p_s14_invsr),containsValue(e.listreg_a1_s01_stored)&&(this.listreg_04_stored=e.listreg_a1_s01_stored),containsValue(e.p_s14_noteNumber)&&(this.noteNumber=e.p_s14_noteNumber),containsValue(e.p_s14_isMuted)&&(this.isMuted=e.p_s14_isMuted)),this.p_80=new RNBOSubpatcher_474,this.p_80.setEngineAndPatcher(this.getEngine(),this),this.p_80.initialize(getSubState(e,\"p_s03\")),this.p_80.setParameterOffset(this.getParameterOffset(this.p_80)),this.p_81=new RNBOSubpatcher_475,this.p_81.setEngineAndPatcher(this.getEngine(),this),this.p_81.initialize(getSubState(e,\"p_s02\")),this.p_81.setParameterOffset(this.getParameterOffset(this.p_81)),this.p_82=new RNBOSubpatcher_476,this.p_82.setEngineAndPatcher(this.getEngine(),this),this.p_82.initialize(getSubState(e,\"p_s01\")),this.p_82.setParameterOffset(this.getParameterOffset(this.p_82))}getPreset(e){this.p_80.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-3\")),this.p_81.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-6\")),this.p_82.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-9\"))}processTempoEvent(e,t){this.updateTime(e),this.p_80.processTempoEvent(e,t),this.p_81.processTempoEvent(e,t),this.p_82.processTempoEvent(e,t)}processTransportEvent(e,t){this.updateTime(e),this.p_80.processTransportEvent(e,t),this.p_81.processTransportEvent(e,t),this.p_82.processTransportEvent(e,t)}processBeatTimeEvent(e,t){this.updateTime(e),this.p_80.processBeatTimeEvent(e,t),this.p_81.processBeatTimeEvent(e,t),this.p_82.processBeatTimeEvent(e,t)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.p_80.processTimeSignatureEvent(e,t,s),this.p_81.processTimeSignatureEvent(e,t,s),this.p_82.processTimeSignatureEvent(e,t,s)}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_80.getNumParameters()&&this.p_80.setParameterValue(e,t,s),(e-=this.p_80.getNumParameters())<this.p_81.getNumParameters()&&this.p_81.setParameterValue(e,t,s),(e-=this.p_81.getNumParameters())<this.p_82.getNumParameters()&&this.p_82.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_80.getNumParameters()?this.p_80.getParameterValue(e):(e-=this.p_80.getNumParameters())<this.p_81.getNumParameters()?this.p_81.getParameterValue(e):(e-=this.p_81.getNumParameters())<this.p_82.getNumParameters()?this.p_82.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_80.getNumParameters()+this.p_81.getNumParameters()+this.p_82.getNumParameters()}getParameterName(e){return(e-=0)<this.p_80.getNumParameters()?this.p_80.getParameterName(e):(e-=this.p_80.getNumParameters())<this.p_81.getNumParameters()?this.p_81.getParameterName(e):(e-=this.p_81.getNumParameters())<this.p_82.getNumParameters()?this.p_82.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_80.getNumParameters()?this.p_80.getParameterId(e):(e-=this.p_80.getNumParameters())<this.p_81.getNumParameters()?this.p_81.getParameterId(e):(e-=this.p_81.getNumParameters())<this.p_82.getNumParameters()?this.p_82.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_80.getNumParameters()&&this.p_80.getParameterInfo(e,t),(e-=this.p_80.getNumParameters())<this.p_81.getNumParameters()&&this.p_81.getParameterInfo(e,t),(e-=this.p_81.getNumParameters())<this.p_82.getNumParameters()&&this.p_82.getParameterInfo(e,t)}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}getParameterOffset(e){return e==this.p_80?0:e==this.p_81?0+this.p_80.getNumParameters():e==this.p_82?0+this.p_80.getNumParameters()+this.p_81.getNumParameters():0}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_80.getNumParameters()?this.p_80.convertToNormalizedParameterValue(e,t):(e-=this.p_80.getNumParameters())<this.p_81.getNumParameters()?this.p_81.convertToNormalizedParameterValue(e,t):(e-=this.p_81.getNumParameters())<this.p_82.getNumParameters()?this.p_82.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_80.getNumParameters()?this.p_80.convertFromNormalizedParameterValue(e,t):(e-=this.p_80.getNumParameters())<this.p_81.getNumParameters()?this.p_81.convertFromNormalizedParameterValue(e,t):(e-=this.p_81.getNumParameters())<this.p_82.getNumParameters()?this.p_82.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_80.getNumParameters()?this.p_80.constrainParameterValue(e,t):(e-=this.p_80.getNumParameters())<this.p_81.getNumParameters()?this.p_81.constrainParameterValue(e,t):(e-=this.p_81.getNumParameters())<this.p_82.getNumParameters()?this.p_82.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 892732297:this.loadmess_07_startupbang_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"perc_sound\"):this.inport_61_value_number_set(a);break;case TAG(\"perc_transpose\"):this.inport_62_value_number_set(a);break;case TAG(\"perc_velocity\"):this.inport_63_value_number_set(a);break;case TAG(\"perc_duration\"):this.inport_64_value_number_set(a)}this.p_80.processNumMessage(e,t,s,a),this.p_81.processNumMessage(e,t,s,a),this.p_82.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"perc_sound\"):this.inport_61_value_list_set(a);break;case TAG(\"perc_transpose\"):this.inport_62_value_list_set(a);break;case TAG(\"perc_velocity\"):this.inport_63_value_list_set(a);break;case TAG(\"perc_duration\"):this.inport_64_value_list_set(a)}this.p_80.processListMessage(e,t,s,a),this.p_81.processListMessage(e,t,s,a),this.p_82.processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"perc_sound\"):this.inport_61_value_bang_bang();break;case TAG(\"startupbang\"):TAG(\"perc_params/loadmess_obj-4\")==t&&this.loadmess_07_startupbang_bang();break;case TAG(\"perc_transpose\"):this.inport_62_value_bang_bang();break;case TAG(\"perc_velocity\"):this.inport_63_value_bang_bang();break;case TAG(\"perc_duration\"):this.inport_64_value_bang_bang()}this.p_80.processBangMessage(e,t,s),this.p_81.processBangMessage(e,t,s),this.p_82.processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"perc_sound\"):return\"perc_sound\";case TAG(\"\"):return\"\";case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"perc_params/loadmess_obj-4\"):return\"perc_params/loadmess_obj-4\";case TAG(\"perc_transpose\"):return\"perc_transpose\";case TAG(\"perc_velocity\"):return\"perc_velocity\";case TAG(\"perc_duration\"):return\"perc_duration\"}var t=this.p_80.resolveTag(e);if(t)return t;var s=this.p_81.resolveTag(e);if(s)return s;var a=this.p_82.resolveTag(e);return a||0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t),this.p_80.processDataViewUpdate(e,t),this.p_81.processDataViewUpdate(e,t),this.p_82.processDataViewUpdate(e,t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_492{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_37_phase=!0,this.random_88_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_303_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_303_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_303_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_303_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_304_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_304_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_304_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_34_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_34_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_34_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_34_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_34_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_34_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_34_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_34_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_34_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_37_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_37_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_37_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_37_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_37_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_37_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_37_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_37_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_37_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_37_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_60_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_60_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_305_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_305_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_88_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_88_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_306_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_306_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_306_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_32_input=e.listlen_a1_s01_input),containsValue(e.p_s19_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s19_audioProcessSampleCount),containsValue(e.p_s19_zeroBuffer)&&(this.zeroBuffer=e.p_s19_zeroBuffer),containsValue(e.p_s19_dummyBuffer)&&(this.dummyBuffer=e.p_s19_dummyBuffer),containsValue(e.p_s19_vs)&&(this.vs=e.p_s19_vs),containsValue(e.p_s19_maxvs)&&(this.maxvs=e.p_s19_maxvs),containsValue(e.p_s19_sr)&&(this.sr=e.p_s19_sr),containsValue(e.p_s19_invsr)&&(this.invsr=e.p_s19_invsr),containsValue(e.counter_s01_count)&&(this.counter_37_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_37_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_88_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_88_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s19_noteNumber)&&(this.noteNumber=e.p_s19_noteNumber),containsValue(e.p_s19_isMuted)&&(this.isMuted=e.p_s19_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_493{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.switchobj_a1_s01_onoff)&&(this.switchobj_10_onoff=e.switchobj_a1_s01_onoff),containsValue(e.receive_a1_s03_output_number)&&(this.receive_27_output_number=e.receive_a1_s03_output_number),containsValue(e.receive_a1_s03_output_list)&&(this.receive_27_output_list=e.receive_a1_s03_output_list),containsValue(e.receive_a1_s02_output_number)&&(this.receive_28_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_28_output_list=e.receive_a1_s02_output_list),containsValue(e.receive_a1_s01_output_number)&&(this.receive_29_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_29_output_list=e.receive_a1_s01_output_list),containsValue(e.p_s16_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s16_audioProcessSampleCount),containsValue(e.p_s16_zeroBuffer)&&(this.zeroBuffer=e.p_s16_zeroBuffer),containsValue(e.p_s16_dummyBuffer)&&(this.dummyBuffer=e.p_s16_dummyBuffer),containsValue(e.p_s16_vs)&&(this.vs=e.p_s16_vs),containsValue(e.p_s16_maxvs)&&(this.maxvs=e.p_s16_maxvs),containsValue(e.p_s16_sr)&&(this.sr=e.p_s16_sr),containsValue(e.p_s16_invsr)&&(this.invsr=e.p_s16_invsr),containsValue(e.p_s16_noteNumber)&&(this.noteNumber=e.p_s16_noteNumber),containsValue(e.p_s16_isMuted)&&(this.isMuted=e.p_s16_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_494{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_38_phase=!0,this.random_89_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_307_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_307_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_307_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_307_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_308_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_308_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_308_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_35_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_35_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_35_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_35_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_35_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_35_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_35_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_35_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_35_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_38_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_38_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_38_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_38_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_38_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_38_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_38_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_38_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_38_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_38_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_61_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_61_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_309_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_309_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_89_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_89_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_310_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_310_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_310_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_33_input=e.listlen_a1_s01_input),containsValue(e.p_s17_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s17_audioProcessSampleCount),containsValue(e.p_s17_zeroBuffer)&&(this.zeroBuffer=e.p_s17_zeroBuffer),containsValue(e.p_s17_dummyBuffer)&&(this.dummyBuffer=e.p_s17_dummyBuffer),containsValue(e.p_s17_vs)&&(this.vs=e.p_s17_vs),containsValue(e.p_s17_maxvs)&&(this.maxvs=e.p_s17_maxvs),containsValue(e.p_s17_sr)&&(this.sr=e.p_s17_sr),containsValue(e.p_s17_invsr)&&(this.invsr=e.p_s17_invsr),containsValue(e.counter_s01_count)&&(this.counter_38_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_38_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_89_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_89_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s17_noteNumber)&&(this.noteNumber=e.p_s17_noteNumber),containsValue(e.p_s17_isMuted)&&(this.isMuted=e.p_s17_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_495{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.counter_39_phase=!0,this.random_90_nz_last=0,this.voiceIndex=0,this.parameterOffset=0}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){this.updateTime(e)}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 0}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.expr_s02_in1)&&(this.expr_311_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_311_in2=e.expr_s02_in2),containsValue(e.expr_s02_in3)&&(this.expr_311_in3=e.expr_s02_in3),containsValue(e.expr_s02_out1)&&(this.expr_311_out1=e.expr_s02_out1),containsValue(e.expr_s03_in1)&&(this.expr_312_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_312_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_312_out1=e.expr_s03_out1),containsValue(e.gate_s01_onoff)&&(this.gate_36_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_36_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_36_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_36_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_36_out2_list=e.gate_s01_out2_list),containsValue(e.gate_s01_out3_number)&&(this.gate_36_out3_number=e.gate_s01_out3_number),containsValue(e.gate_s01_out3_list)&&(this.gate_36_out3_list=e.gate_s01_out3_list),containsValue(e.gate_s01_out4_number)&&(this.gate_36_out4_number=e.gate_s01_out4_number),containsValue(e.gate_s01_out4_list)&&(this.gate_36_out4_list=e.gate_s01_out4_list),containsValue(e.counter_s01_carryflag)&&(this.counter_39_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_39_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_39_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_39_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_39_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_39_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_39_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_39_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_39_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_39_minimum=e.counter_s01_minimum),containsValue(e.listlookup_a1_s01_input)&&(this.listlookup_62_input=e.listlookup_a1_s01_input),containsValue(e.listlookup_a1_s01_lookup)&&(this.listlookup_62_lookup=e.listlookup_a1_s01_lookup),containsValue(e.expr_s01_in1)&&(this.expr_313_in1=e.expr_s01_in1),containsValue(e.expr_s01_out1)&&(this.expr_313_out1=e.expr_s01_out1),containsValue(e.random_s01_limit)&&(this.random_90_limit=e.random_s01_limit),containsValue(e.random_s01_seed)&&(this.random_90_seed=e.random_s01_seed),containsValue(e.expr_s04_in1)&&(this.expr_314_in1=e.expr_s04_in1),containsValue(e.expr_s04_in2)&&(this.expr_314_in2=e.expr_s04_in2),containsValue(e.expr_s04_out1)&&(this.expr_314_out1=e.expr_s04_out1),containsValue(e.listlen_a1_s01_input)&&(this.listlen_34_input=e.listlen_a1_s01_input),containsValue(e.p_s18_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p_s18_audioProcessSampleCount),containsValue(e.p_s18_zeroBuffer)&&(this.zeroBuffer=e.p_s18_zeroBuffer),containsValue(e.p_s18_dummyBuffer)&&(this.dummyBuffer=e.p_s18_dummyBuffer),containsValue(e.p_s18_vs)&&(this.vs=e.p_s18_vs),containsValue(e.p_s18_maxvs)&&(this.maxvs=e.p_s18_maxvs),containsValue(e.p_s18_sr)&&(this.sr=e.p_s18_sr),containsValue(e.p_s18_invsr)&&(this.invsr=e.p_s18_invsr),containsValue(e.counter_s01_count)&&(this.counter_39_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_39_phase=e.counter_s01_phase),containsValue(e.random_s01_nz_last)&&(this.random_90_nz_last=e.random_s01_nz_last),containsValue(e.random_s01_nz_recip)&&(this.random_90_nz_recip=e.random_s01_nz_recip),containsValue(e.p_s18_noteNumber)&&(this.noteNumber=e.p_s18_noteNumber),containsValue(e.p_s18_isMuted)&&(this.isMuted=e.p_s18_isMuted))}getPreset(e){}processTempoEvent(e,t){this.updateTime(e)}processTransportEvent(e,t){this.updateTime(e)}processBeatTimeEvent(e,t){this.updateTime(e)}onSampleRateChanged(e){}processTimeSignatureEvent(e,t,s){this.updateTime(e)}setParameterValue(e,t,s){this.updateTime(s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(e){return\"bogus\"}getParameterId(e){return\"bogus\"}getParameterInfo(e,t){e}sendParameter(e){this.getPatcher().sendParameter(e+this.parameterOffset)}setParameterOffset(e){this.parameterOffset=e}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t}constrainParameterValue(e,t){return t}scheduleParamInit(e,t){this.getPatcher().scheduleParamInit(e+this.parameterOffset,t)}processClockEvent(e,t,s,a){this.updateTime(e)}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){this.updateTime(s)}processListMessage(e,t,s,a){this.updateTime(s)}processBangMessage(e,t,s){this.updateTime(s)}resolveTag(e){return 0}getDataRef(e){return null}getNumDataRefs(){return 0}fillDataRef(e,t){e}processDataViewUpdate(e,t){this.updateTime(t)}initialize(e){this.assign_defaults(),this.setState(e)}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOPatcher{constructor(){this.currentTime=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(4),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.uzi_01_pausecount=0,this.uzi_02_pausecount=0,this.gen_01_rate_9_currentPhase=0,this.gen_01_rate_9_diff=0,this.gen_01_rate_9_prev=0,this.gen_01_rate_9_mult=1,this.gen_01_rate_9_invmult=1,this.gen_01_setupDone=!1,this.edge_01_setupDone=!1,this.edge_02_setupDone=!1,this.counter_40_phase=!0,this.counter_41_phase=!0,this.globaltransport_tempo=0,this.globaltransport_tempoNeedsReset=!1,this.globaltransport_state=0,this.globaltransport_stateNeedsReset=!1,this.globaltransport_notify=!1,this.globaltransport_setupDone=!1,this.RNBODefaultMtofLookupTable256=0,this.buf9=0,this.buf8=0,this.buf7=0,this.buf6=0,this.buf5=0,this.buf4=0,this.buf3=0,this.buf2=0,this.buf1=0,this.buf0=0,this.buf19=0,this.buf18=0,this.buf17=0,this.buf16=0,this.buf15=0,this.buf14=0,this.buf13=0,this.buf12=0,this.buf11=0,this.buf10=0,this.buf29=0,this.buf28=0,this.buf27=0,this.buf26=0,this.buf25=0,this.buf24=0,this.buf23=0,this.buf22=0,this.buf21=0,this.buf20=0,this.buf39=0,this.buf38=0,this.buf37=0,this.buf36=0,this.buf35=0,this.buf34=0,this.buf33=0,this.buf32=0,this.buf31=0,this.buf30=0,this.buf49=0,this.buf48=0,this.buf47=0,this.buf46=0,this.buf45=0,this.buf44=0,this.buf43=0,this.buf42=0,this.buf41=0,this.buf40=0,this.voiceIndex=0,this.paramInitIndices=[],this.paramInitOrder=[],this.p_83=new Array,this.p_84=new Array,this.p_85=new Array,this.p_86=new Array,this.p_87=new Array,this.p_88=new Array,this.p_89=new Array,this.p_90=new Array,this.p_91=new Array,this.p_92=new Array,this.p_93=new Array,this.p_94=new Array,this.p_95=new Array,this.p_96=new Array,this.p_97=new Array,this.p_98=new Array,this.p_99=new Array,this.p_100=new Array,this.p_101=new Array}getParameterIndexForID(e){return-1}getNumMidiInputPorts(){return 0}processMidiEvent(e,t,s,a){}getNumMidiOutputPorts(){return 0}msToSamps(e,t){return e*t*.001}sampsToMs(e){return e*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 1}setProbingTarget(e){this.setProbingIndex(-1)}setProbingIndex(e){}getProbingChannels(e){return 0}getDataRef(e){switch(e){case 0:return addressOf(this.RNBODefaultMtofLookupTable256);case 1:return addressOf(this.buf9);case 2:return addressOf(this.buf8);case 3:return addressOf(this.buf7);case 4:return addressOf(this.buf6);case 5:return addressOf(this.buf5);case 6:return addressOf(this.buf4);case 7:return addressOf(this.buf3);case 8:return addressOf(this.buf2);case 9:return addressOf(this.buf1);case 10:return addressOf(this.buf0);case 11:return addressOf(this.buf19);case 12:return addressOf(this.buf18);case 13:return addressOf(this.buf17);case 14:return addressOf(this.buf16);case 15:return addressOf(this.buf15);case 16:return addressOf(this.buf14);case 17:return addressOf(this.buf13);case 18:return addressOf(this.buf12);case 19:return addressOf(this.buf11);case 20:return addressOf(this.buf10);case 21:return addressOf(this.buf29);case 22:return addressOf(this.buf28);case 23:return addressOf(this.buf27);case 24:return addressOf(this.buf26);case 25:return addressOf(this.buf25);case 26:return addressOf(this.buf24);case 27:return addressOf(this.buf23);case 28:return addressOf(this.buf22);case 29:return addressOf(this.buf21);case 30:return addressOf(this.buf20);case 31:return addressOf(this.buf39);case 32:return addressOf(this.buf38);case 33:return addressOf(this.buf37);case 34:return addressOf(this.buf36);case 35:return addressOf(this.buf35);case 36:return addressOf(this.buf34);case 37:return addressOf(this.buf33);case 38:return addressOf(this.buf32);case 39:return addressOf(this.buf31);case 40:return addressOf(this.buf30);case 41:return addressOf(this.buf49);case 42:return addressOf(this.buf48);case 43:return addressOf(this.buf47);case 44:return addressOf(this.buf46);case 45:return addressOf(this.buf45);case 46:return addressOf(this.buf44);case 47:return addressOf(this.buf43);case 48:return addressOf(this.buf42);case 49:return addressOf(this.buf41);case 50:return addressOf(this.buf40);default:return null}}getNumDataRefs(){return 51}fillRNBODefaultMtofLookupTable256(e){var t;let s=(t=new Float64Buffer(e)).getSize();for(let e=0;e<s;e++){let a=512/(s-1)*e-256;t[e]=rnbo_exp(.057762265*(a-69))}}fillDataRef(e,t){switch(e){case 0:this.fillRNBODefaultMtofLookupTable256(t)}}zeroDataRef(e){e.setZero()}processDataViewUpdate(e,t){this.updateTime(t),this.p_83.processDataViewUpdate(e,t),this.p_84.processDataViewUpdate(e,t),this.p_85.processDataViewUpdate(e,t),this.p_86.processDataViewUpdate(e,t),this.p_87.processDataViewUpdate(e,t),this.p_88.processDataViewUpdate(e,t),this.p_89.processDataViewUpdate(e,t),this.p_90.processDataViewUpdate(e,t),this.p_91.processDataViewUpdate(e,t),this.p_92.processDataViewUpdate(e,t),this.p_93.processDataViewUpdate(e,t),this.p_94.processDataViewUpdate(e,t),this.p_95.processDataViewUpdate(e,t),this.p_96.processDataViewUpdate(e,t),this.p_97.processDataViewUpdate(e,t),this.p_98.processDataViewUpdate(e,t),this.p_99.processDataViewUpdate(e,t),this.p_100.processDataViewUpdate(e,t),this.p_101.processDataViewUpdate(e,t)}initialize(e){this.RNBODefaultMtofLookupTable256=initDataRef(\"RNBODefaultMtofLookupTable256\",!0,0),this.buf9=initDataRef(\"buf9\",!1,0),this.buf8=initDataRef(\"buf8\",!1,0),this.buf7=initDataRef(\"buf7\",!1,0),this.buf6=initDataRef(\"buf6\",!1,0),this.buf5=initDataRef(\"buf5\",!1,0),this.buf4=initDataRef(\"buf4\",!1,0),this.buf3=initDataRef(\"buf3\",!1,0),this.buf2=initDataRef(\"buf2\",!1,0),this.buf1=initDataRef(\"buf1\",!1,0),this.buf0=initDataRef(\"buf0\",!1,0),this.buf19=initDataRef(\"buf19\",!1,0),this.buf18=initDataRef(\"buf18\",!1,0),this.buf17=initDataRef(\"buf17\",!1,0),this.buf16=initDataRef(\"buf16\",!1,0),this.buf15=initDataRef(\"buf15\",!1,0),this.buf14=initDataRef(\"buf14\",!1,0),this.buf13=initDataRef(\"buf13\",!1,0),this.buf12=initDataRef(\"buf12\",!1,0),this.buf11=initDataRef(\"buf11\",!1,0),this.buf10=initDataRef(\"buf10\",!1,0),this.buf29=initDataRef(\"buf29\",!1,0),this.buf28=initDataRef(\"buf28\",!1,0),this.buf27=initDataRef(\"buf27\",!1,0),this.buf26=initDataRef(\"buf26\",!1,0),this.buf25=initDataRef(\"buf25\",!1,0),this.buf24=initDataRef(\"buf24\",!1,0),this.buf23=initDataRef(\"buf23\",!1,0),this.buf22=initDataRef(\"buf22\",!1,0),this.buf21=initDataRef(\"buf21\",!1,0),this.buf20=initDataRef(\"buf20\",!1,0),this.buf39=initDataRef(\"buf39\",!1,0),this.buf38=initDataRef(\"buf38\",!1,0),this.buf37=initDataRef(\"buf37\",!1,0),this.buf36=initDataRef(\"buf36\",!1,0),this.buf35=initDataRef(\"buf35\",!1,0),this.buf34=initDataRef(\"buf34\",!1,0),this.buf33=initDataRef(\"buf33\",!1,0),this.buf32=initDataRef(\"buf32\",!1,0),this.buf31=initDataRef(\"buf31\",!1,0),this.buf30=initDataRef(\"buf30\",!1,0),this.buf49=initDataRef(\"buf49\",!1,0),this.buf48=initDataRef(\"buf48\",!1,0),this.buf47=initDataRef(\"buf47\",!1,0),this.buf46=initDataRef(\"buf46\",!1,0),this.buf45=initDataRef(\"buf45\",!1,0),this.buf44=initDataRef(\"buf44\",!1,0),this.buf43=initDataRef(\"buf43\",!1,0),this.buf42=initDataRef(\"buf42\",!1,0),this.buf41=initDataRef(\"buf41\",!1,0),this.buf40=initDataRef(\"buf40\",!1,0),this.assign_defaults(),this.setState(e),this.RNBODefaultMtofLookupTable256.setIndex(0),this.buf9.setIndex(1),this.buf8.setIndex(2),this.buf7.setIndex(3),this.buf6.setIndex(4),this.buf5.setIndex(5),this.buf4.setIndex(6),this.buf3.setIndex(7),this.buf2.setIndex(8),this.buf1.setIndex(9),this.buf0.setIndex(10),this.buf19.setIndex(11),this.buf18.setIndex(12),this.buf17.setIndex(13),this.buf16.setIndex(14),this.buf15.setIndex(15),this.buf14.setIndex(16),this.buf13.setIndex(17),this.buf12.setIndex(18),this.buf11.setIndex(19),this.buf10.setIndex(20),this.buf29.setIndex(21),this.buf28.setIndex(22),this.buf27.setIndex(23),this.buf26.setIndex(24),this.buf25.setIndex(25),this.buf24.setIndex(26),this.buf23.setIndex(27),this.buf22.setIndex(28),this.buf21.setIndex(29),this.buf20.setIndex(30),this.buf39.setIndex(31),this.buf38.setIndex(32),this.buf37.setIndex(33),this.buf36.setIndex(34),this.buf35.setIndex(35),this.buf34.setIndex(36),this.buf33.setIndex(37),this.buf32.setIndex(38),this.buf31.setIndex(39),this.buf30.setIndex(40),this.buf49.setIndex(41),this.buf48.setIndex(42),this.buf47.setIndex(43),this.buf46.setIndex(44),this.buf45.setIndex(45),this.buf44.setIndex(46),this.buf43.setIndex(47),this.buf42.setIndex(48),this.buf41.setIndex(49),this.buf40.setIndex(50),this.initializeObjects(e),this.allocateDataRefs(),this.startup(e)}getIsMuted(){return this.isMuted}setIsMuted(e){this.isMuted=e}getPatcherSerial(){return 1}setState(e){e[patcherSerialKey]==this.getPatcherSerial()&&(containsValue(e[eventTargetKey])&&this.getEngine().updatePatcherEventTarget(e[eventTargetKey],this),containsValue(e.dspexpr_a1_s02_in1)&&(this.dspexpr_49_in1=e.dspexpr_a1_s02_in1),containsValue(e.dspexpr_a1_s02_in2)&&(this.dspexpr_49_in2=e.dspexpr_a1_s02_in2),containsValue(e.p_s01_target)&&(this.p_83_target=e.p_s01_target),containsValue(e.listreg_a1_s04_in1)&&(this.listreg_05_in1=e.listreg_a1_s04_in1),containsValue(e.listreg_a1_s04_in2)&&(this.listreg_05_in2=e.listreg_a1_s04_in2),containsValue(e.p_s12_target)&&(this.p_84_target=e.p_s12_target),containsValue(e.p_s13_target)&&(this.p_85_target=e.p_s13_target),containsValue(e.listreg_a1_s02_in1)&&(this.listreg_06_in1=e.listreg_a1_s02_in1),containsValue(e.listreg_a1_s02_in2)&&(this.listreg_06_in2=e.listreg_a1_s02_in2),containsValue(e.uzi_s02_start_number)&&(this.uzi_01_start_number=e.uzi_s02_start_number),containsValue(e.uzi_s02_count)&&(this.uzi_01_count=e.uzi_s02_count),containsValue(e.uzi_s02_base)&&(this.uzi_01_base=e.uzi_s02_base),containsValue(e.p_s10_target)&&(this.p_86_target=e.p_s10_target),containsValue(e.p_s11_target)&&(this.p_87_target=e.p_s11_target),containsValue(e.p_s03_target)&&(this.p_88_target=e.p_s03_target),containsValue(e.loadmess_s06_message)&&(this.loadmess_08_message=e.loadmess_s06_message),containsValue(e.gate_s01_onoff)&&(this.gate_37_onoff=e.gate_s01_onoff),containsValue(e.gate_s01_out1_number)&&(this.gate_37_out1_number=e.gate_s01_out1_number),containsValue(e.gate_s01_out1_list)&&(this.gate_37_out1_list=e.gate_s01_out1_list),containsValue(e.gate_s01_out2_number)&&(this.gate_37_out2_number=e.gate_s01_out2_number),containsValue(e.gate_s01_out2_list)&&(this.gate_37_out2_list=e.gate_s01_out2_list),containsValue(e.intnum_a1_s01_input_number)&&(this.intnum_01_input_number=e.intnum_a1_s01_input_number),containsValue(e.intnum_a1_s01_value)&&(this.intnum_01_value=e.intnum_a1_s01_value),containsValue(e.p_s02_target)&&(this.p_89_target=e.p_s02_target),containsValue(e.dspexpr_a1_s03_in1)&&(this.dspexpr_50_in1=e.dspexpr_a1_s03_in1),containsValue(e.dspexpr_a1_s03_in2)&&(this.dspexpr_50_in2=e.dspexpr_a1_s03_in2),containsValue(e.listreg_a1_s03_in1)&&(this.listreg_07_in1=e.listreg_a1_s03_in1),containsValue(e.listreg_a1_s03_in2)&&(this.listreg_07_in2=e.listreg_a1_s03_in2),containsValue(e.p_s08_target)&&(this.p_90_target=e.p_s08_target),containsValue(e.p_s09_target)&&(this.p_91_target=e.p_s09_target),containsValue(e.listreg_a1_s01_in1)&&(this.listreg_08_in1=e.listreg_a1_s01_in1),containsValue(e.listreg_a1_s01_in2)&&(this.listreg_08_in2=e.listreg_a1_s01_in2),containsValue(e.uzi_s01_start_number)&&(this.uzi_02_start_number=e.uzi_s01_start_number),containsValue(e.uzi_s01_count)&&(this.uzi_02_count=e.uzi_s01_count),containsValue(e.uzi_s01_base)&&(this.uzi_02_base=e.uzi_s01_base),containsValue(e.p_s06_target)&&(this.p_92_target=e.p_s06_target),containsValue(e.p_s07_target)&&(this.p_93_target=e.p_s07_target),containsValue(e.p_s04_target)&&(this.p_94_target=e.p_s04_target),containsValue(e.loadmess_s05_message)&&(this.loadmess_09_message=e.loadmess_s05_message),containsValue(e.gate_s02_onoff)&&(this.gate_38_onoff=e.gate_s02_onoff),containsValue(e.gate_s02_out1_number)&&(this.gate_38_out1_number=e.gate_s02_out1_number),containsValue(e.gate_s02_out1_list)&&(this.gate_38_out1_list=e.gate_s02_out1_list),containsValue(e.gate_s02_out2_number)&&(this.gate_38_out2_number=e.gate_s02_out2_number),containsValue(e.gate_s02_out2_list)&&(this.gate_38_out2_list=e.gate_s02_out2_list),containsValue(e.intnum_a1_s02_input_number)&&(this.intnum_02_input_number=e.intnum_a1_s02_input_number),containsValue(e.intnum_a1_s02_value)&&(this.intnum_02_value=e.intnum_a1_s02_value),containsValue(e.p_s05_target)&&(this.p_95_target=e.p_s05_target),containsValue(e.listreg_a1_s05_in1)&&(this.listreg_09_in1=e.listreg_a1_s05_in1),containsValue(e.listreg_a1_s05_in2)&&(this.listreg_09_in2=e.listreg_a1_s05_in2),containsValue(e.p_s15_target)&&(this.p_96_target=e.p_s15_target),containsValue(e.dspexpr_a1_s01_in1)&&(this.dspexpr_51_in1=e.dspexpr_a1_s01_in1),containsValue(e.dspexpr_a1_s01_in2)&&(this.dspexpr_51_in2=e.dspexpr_a1_s01_in2),containsValue(e.p_s14_target)&&(this.p_97_target=e.p_s14_target),containsValue(e.loadmess_s04_message)&&(this.loadmess_10_message=e.loadmess_s04_message),containsValue(e.receive_a1_s06_output_number)&&(this.receive_30_output_number=e.receive_a1_s06_output_number),containsValue(e.receive_a1_s06_output_list)&&(this.receive_30_output_list=e.receive_a1_s06_output_list),containsValue(e.pack_a1_s01_in1)&&(this.pack_19_in1=e.pack_a1_s01_in1),containsValue(e.pack_a1_s01_in2)&&(this.pack_19_in2=e.pack_a1_s01_in2),containsValue(e.pack_a1_s01_in3)&&(this.pack_19_in3=e.pack_a1_s01_in3),containsValue(e.send_a1_s12_input_number)&&(this.send_01_input_number=e.send_a1_s12_input_number),containsValue(e.send_a1_s12_input_list)&&(this.send_01_input_list=e.send_a1_s12_input_list),containsValue(e.receive_a1_s08_output_number)&&(this.receive_31_output_number=e.receive_a1_s08_output_number),containsValue(e.receive_a1_s08_output_list)&&(this.receive_31_output_list=e.receive_a1_s08_output_list),containsValue(e.loadmess_s09_message)&&(this.loadmess_11_message=e.loadmess_s09_message),containsValue(e.receive_a1_s07_output_number)&&(this.receive_32_output_number=e.receive_a1_s07_output_number),containsValue(e.receive_a1_s07_output_list)&&(this.receive_32_output_list=e.receive_a1_s07_output_list),containsValue(e.receive_a1_s03_output_number)&&(this.receive_33_output_number=e.receive_a1_s03_output_number),containsValue(e.receive_a1_s03_output_list)&&(this.receive_33_output_list=e.receive_a1_s03_output_list),containsValue(e.receive_a1_s04_output_number)&&(this.receive_34_output_number=e.receive_a1_s04_output_number),containsValue(e.receive_a1_s04_output_list)&&(this.receive_34_output_list=e.receive_a1_s04_output_list),containsValue(e.receive_a1_s05_output_number)&&(this.receive_35_output_number=e.receive_a1_s05_output_number),containsValue(e.receive_a1_s05_output_list)&&(this.receive_35_output_list=e.receive_a1_s05_output_list),containsValue(e.translate_s01_value)&&(this.translate_01_value=e.translate_s01_value),containsValue(e.send_a1_s08_input_number)&&(this.send_02_input_number=e.send_a1_s08_input_number),containsValue(e.send_a1_s08_input_list)&&(this.send_02_input_list=e.send_a1_s08_input_list),containsValue(e.receive_a1_s12_output_number)&&(this.receive_36_output_number=e.receive_a1_s12_output_number),containsValue(e.receive_a1_s12_output_list)&&(this.receive_36_output_list=e.receive_a1_s12_output_list),containsValue(e.p_s19_target)&&(this.p_98_target=e.p_s19_target),containsValue(e.unpack_s01_out1)&&(this.unpack_26_out1=e.unpack_s01_out1),containsValue(e.unpack_s01_out2)&&(this.unpack_26_out2=e.unpack_s01_out2),containsValue(e.expr_s03_in1)&&(this.expr_315_in1=e.expr_s03_in1),containsValue(e.expr_s03_in2)&&(this.expr_315_in2=e.expr_s03_in2),containsValue(e.expr_s03_out1)&&(this.expr_315_out1=e.expr_s03_out1),containsValue(e.pack_a1_s02_in1)&&(this.pack_20_in1=e.pack_a1_s02_in1),containsValue(e.pack_a1_s02_in2)&&(this.pack_20_in2=e.pack_a1_s02_in2),containsValue(e.listindex_a1_s01_input)&&(this.listindex_35_input=e.listindex_a1_s01_input),containsValue(e.listindex_a1_s01_index)&&(this.listindex_35_index=e.listindex_a1_s01_index),containsValue(e.receive_a1_s10_output_number)&&(this.receive_37_output_number=e.receive_a1_s10_output_number),containsValue(e.receive_a1_s10_output_list)&&(this.receive_37_output_list=e.receive_a1_s10_output_list),containsValue(e.send_a1_s11_input_number)&&(this.send_03_input_number=e.send_a1_s11_input_number),containsValue(e.send_a1_s11_input_list)&&(this.send_03_input_list=e.send_a1_s11_input_list),containsValue(e.gen_a1_s01_in1)&&(this.gen_01_in1=e.gen_a1_s01_in1),containsValue(e.gen_a1_s01_in2)&&(this.gen_01_in2=e.gen_a1_s01_in2),containsValue(e.gen_a1_s01_in3)&&(this.gen_01_in3=e.gen_a1_s01_in3),containsValue(e.receive_a1_s09_output_number)&&(this.receive_38_output_number=e.receive_a1_s09_output_number),containsValue(e.receive_a1_s09_output_list)&&(this.receive_38_output_list=e.receive_a1_s09_output_list),containsValue(e.send_a1_s10_input_number)&&(this.send_04_input_number=e.send_a1_s10_input_number),containsValue(e.send_a1_s10_input_list)&&(this.send_04_input_list=e.send_a1_s10_input_list),containsValue(e.receive_a1_s13_output_number)&&(this.receive_39_output_number=e.receive_a1_s13_output_number),containsValue(e.receive_a1_s13_output_list)&&(this.receive_39_output_list=e.receive_a1_s13_output_list),containsValue(e.send_a1_s04_input_number)&&(this.send_05_input_number=e.send_a1_s04_input_number),containsValue(e.send_a1_s04_input_list)&&(this.send_05_input_list=e.send_a1_s04_input_list),containsValue(e.send_a1_s01_input_number)&&(this.send_06_input_number=e.send_a1_s01_input_number),containsValue(e.send_a1_s01_input_list)&&(this.send_06_input_list=e.send_a1_s01_input_list),containsValue(e.loadmess_s07_message)&&(this.loadmess_12_message=e.loadmess_s07_message),containsValue(e.loadmess_s10_message)&&(this.loadmess_13_message=e.loadmess_s10_message),containsValue(e.loadmess_s13_message)&&(this.loadmess_14_message=e.loadmess_s13_message),containsValue(e.send_a1_s07_input_number)&&(this.send_07_input_number=e.send_a1_s07_input_number),containsValue(e.send_a1_s07_input_list)&&(this.send_07_input_list=e.send_a1_s07_input_list),containsValue(e.p_s16_target)&&(this.p_99_target=e.p_s16_target),containsValue(e.send_a1_s09_input_number)&&(this.send_08_input_number=e.send_a1_s09_input_number),containsValue(e.send_a1_s09_input_list)&&(this.send_08_input_list=e.send_a1_s09_input_list),containsValue(e.p_s17_target)&&(this.p_100_target=e.p_s17_target),containsValue(e.receive_a1_s11_output_number)&&(this.receive_40_output_number=e.receive_a1_s11_output_number),containsValue(e.receive_a1_s11_output_list)&&(this.receive_40_output_list=e.receive_a1_s11_output_list),containsValue(e.select_a1_s01_test1)&&(this.select_06_test1=e.select_a1_s01_test1),containsValue(e.counter_s02_carryflag)&&(this.counter_40_carryflag=e.counter_s02_carryflag),containsValue(e.counter_s02_direction)&&(this.counter_40_direction=e.counter_s02_direction),containsValue(e.counter_s02_resetnext)&&(this.counter_40_resetnext=e.counter_s02_resetnext),containsValue(e.counter_s02_resetnow)&&(this.counter_40_resetnow=e.counter_s02_resetnow),containsValue(e.counter_s02_maximum)&&(this.counter_40_maximum=e.counter_s02_maximum),containsValue(e.counter_s02_output)&&(this.counter_40_output=e.counter_s02_output),containsValue(e.counter_s02_underflow_number)&&(this.counter_40_underflow_number=e.counter_s02_underflow_number),containsValue(e.counter_s02_overflow_number)&&(this.counter_40_overflow_number=e.counter_s02_overflow_number),containsValue(e.counter_s02_carry)&&(this.counter_40_carry=e.counter_s02_carry),containsValue(e.counter_s02_minimum)&&(this.counter_40_minimum=e.counter_s02_minimum),containsValue(e.loadmess_s11_message)&&(this.loadmess_15_message=e.loadmess_s11_message),containsValue(e.receive_a1_s02_output_number)&&(this.receive_41_output_number=e.receive_a1_s02_output_number),containsValue(e.receive_a1_s02_output_list)&&(this.receive_41_output_list=e.receive_a1_s02_output_list),containsValue(e.p_s18_target)&&(this.p_101_target=e.p_s18_target),containsValue(e.expr_s02_in1)&&(this.expr_316_in1=e.expr_s02_in1),containsValue(e.expr_s02_in2)&&(this.expr_316_in2=e.expr_s02_in2),containsValue(e.expr_s02_out1)&&(this.expr_316_out1=e.expr_s02_out1),containsValue(e.listindex_a1_s02_input)&&(this.listindex_36_input=e.listindex_a1_s02_input),containsValue(e.listindex_a1_s02_index)&&(this.listindex_36_index=e.listindex_a1_s02_index),containsValue(e.send_a1_s05_input_number)&&(this.send_09_input_number=e.send_a1_s05_input_number),containsValue(e.send_a1_s05_input_list)&&(this.send_09_input_list=e.send_a1_s05_input_list),containsValue(e.loadmess_s02_message)&&(this.loadmess_16_message=e.loadmess_s02_message),containsValue(e.counter_s01_carryflag)&&(this.counter_41_carryflag=e.counter_s01_carryflag),containsValue(e.counter_s01_direction)&&(this.counter_41_direction=e.counter_s01_direction),containsValue(e.counter_s01_resetnext)&&(this.counter_41_resetnext=e.counter_s01_resetnext),containsValue(e.counter_s01_resetnow)&&(this.counter_41_resetnow=e.counter_s01_resetnow),containsValue(e.counter_s01_maximum)&&(this.counter_41_maximum=e.counter_s01_maximum),containsValue(e.counter_s01_output)&&(this.counter_41_output=e.counter_s01_output),containsValue(e.counter_s01_underflow_number)&&(this.counter_41_underflow_number=e.counter_s01_underflow_number),containsValue(e.counter_s01_overflow_number)&&(this.counter_41_overflow_number=e.counter_s01_overflow_number),containsValue(e.counter_s01_carry)&&(this.counter_41_carry=e.counter_s01_carry),containsValue(e.counter_s01_minimum)&&(this.counter_41_minimum=e.counter_s01_minimum),containsValue(e.receive_a1_s01_output_number)&&(this.receive_42_output_number=e.receive_a1_s01_output_number),containsValue(e.receive_a1_s01_output_list)&&(this.receive_42_output_list=e.receive_a1_s01_output_list),containsValue(e.send_a1_s06_input_number)&&(this.send_10_input_number=e.send_a1_s06_input_number),containsValue(e.send_a1_s06_input_list)&&(this.send_10_input_list=e.send_a1_s06_input_list),containsValue(e.loadmess_s03_message)&&(this.loadmess_17_message=e.loadmess_s03_message),containsValue(e.expr_s01_in1)&&(this.expr_317_in1=e.expr_s01_in1),containsValue(e.expr_s01_in2)&&(this.expr_317_in2=e.expr_s01_in2),containsValue(e.expr_s01_out1)&&(this.expr_317_out1=e.expr_s01_out1),containsValue(e.loadmess_s12_message)&&(this.loadmess_18_message=e.loadmess_s12_message),containsValue(e.send_a1_s03_input_number)&&(this.send_11_input_number=e.send_a1_s03_input_number),containsValue(e.send_a1_s03_input_list)&&(this.send_11_input_list=e.send_a1_s03_input_list),containsValue(e.loadmess_s08_message)&&(this.loadmess_19_message=e.loadmess_s08_message),containsValue(e.loadmess_s01_message)&&(this.loadmess_20_message=e.loadmess_s01_message),containsValue(e.send_a1_s02_input_number)&&(this.send_12_input_number=e.send_a1_s02_input_number),containsValue(e.send_a1_s02_input_list)&&(this.send_12_input_list=e.send_a1_s02_input_list),containsValue(e.p1_audioProcessSampleCount)&&(this.audioProcessSampleCount=e.p1_audioProcessSampleCount),containsValue(e.p1_zeroBuffer)&&(this.zeroBuffer=e.p1_zeroBuffer),containsValue(e.p1_dummyBuffer)&&(this.dummyBuffer=e.p1_dummyBuffer),containsValue(e.p1_vs)&&(this.vs=e.p1_vs),containsValue(e.p1_maxvs)&&(this.maxvs=e.p1_maxvs),containsValue(e.p1_sr)&&(this.sr=e.p1_sr),containsValue(e.p1_invsr)&&(this.invsr=e.p1_invsr),containsValue(e.listreg_a1_s04_stored)&&(this.listreg_05_stored=e.listreg_a1_s04_stored),containsValue(e.listreg_a1_s02_stored)&&(this.listreg_06_stored=e.listreg_a1_s02_stored),containsValue(e.uzi_s02_doPause)&&(this.uzi_01_doPause=e.uzi_s02_doPause),containsValue(e.uzi_s02_pausecount)&&(this.uzi_01_pausecount=e.uzi_s02_pausecount),containsValue(e.intnum_a1_s01_stored)&&(this.intnum_01_stored=e.intnum_a1_s01_stored),containsValue(e.listreg_a1_s03_stored)&&(this.listreg_07_stored=e.listreg_a1_s03_stored),containsValue(e.listreg_a1_s01_stored)&&(this.listreg_08_stored=e.listreg_a1_s01_stored),containsValue(e.uzi_s01_doPause)&&(this.uzi_02_doPause=e.uzi_s01_doPause),containsValue(e.uzi_s01_pausecount)&&(this.uzi_02_pausecount=e.uzi_s01_pausecount),containsValue(e.intnum_a1_s02_stored)&&(this.intnum_02_stored=e.intnum_a1_s02_stored),containsValue(e.listreg_a1_s05_stored)&&(this.listreg_09_stored=e.listreg_a1_s05_stored),containsValue(e.edge_a1_s01_currentState)&&(this.edge_01_currentState=e.edge_a1_s01_currentState),containsValue(e.edge_a1_s01_setupDone)&&(this.edge_01_setupDone=e.edge_a1_s01_setupDone),containsValue(e.edge_a1_s02_currentState)&&(this.edge_02_currentState=e.edge_a1_s02_currentState),containsValue(e.edge_a1_s02_setupDone)&&(this.edge_02_setupDone=e.edge_a1_s02_setupDone),containsValue(e.counter_s02_count)&&(this.counter_40_count=e.counter_s02_count),containsValue(e.counter_s02_phase)&&(this.counter_40_phase=e.counter_s02_phase),containsValue(e.counter_s01_count)&&(this.counter_41_count=e.counter_s01_count),containsValue(e.counter_s01_phase)&&(this.counter_41_phase=e.counter_s01_phase),containsValue(e.globaltransport_s01_tempo)&&(this.globaltransport_tempo=e.globaltransport_s01_tempo),containsValue(e.globaltransport_s01_tempoNeedsReset)&&(this.globaltransport_tempoNeedsReset=e.globaltransport_s01_tempoNeedsReset),containsValue(e.globaltransport_s01_lastTempo)&&(this.globaltransport_lastTempo=e.globaltransport_s01_lastTempo),containsValue(e.globaltransport_s01_state)&&(this.globaltransport_state=e.globaltransport_s01_state),containsValue(e.globaltransport_s01_stateNeedsReset)&&(this.globaltransport_stateNeedsReset=e.globaltransport_s01_stateNeedsReset),containsValue(e.globaltransport_s01_lastState)&&(this.globaltransport_lastState=e.globaltransport_s01_lastState),containsValue(e.globaltransport_s01_beatTimeChanges)&&(this.globaltransport_beatTimeChanges=e.globaltransport_s01_beatTimeChanges),containsValue(e.globaltransport_s01_timeSignatureChanges)&&(this.globaltransport_timeSignatureChanges=e.globaltransport_s01_timeSignatureChanges),containsValue(e.globaltransport_s01_notify)&&(this.globaltransport_notify=e.globaltransport_s01_notify),containsValue(e.globaltransport_s01_setupDone)&&(this.globaltransport_setupDone=e.globaltransport_s01_setupDone),containsValue(e.p1_RNBODefaultMtofLookupTable256)&&(this.RNBODefaultMtofLookupTable256=e.p1_RNBODefaultMtofLookupTable256),containsValue(e.p1_buf9)&&(this.buf9=e.p1_buf9),containsValue(e.p1_buf8)&&(this.buf8=e.p1_buf8),containsValue(e.p1_buf7)&&(this.buf7=e.p1_buf7),containsValue(e.p1_buf6)&&(this.buf6=e.p1_buf6),containsValue(e.p1_buf5)&&(this.buf5=e.p1_buf5),containsValue(e.p1_buf4)&&(this.buf4=e.p1_buf4),containsValue(e.p1_buf3)&&(this.buf3=e.p1_buf3),containsValue(e.p1_buf2)&&(this.buf2=e.p1_buf2),containsValue(e.p1_buf1)&&(this.buf1=e.p1_buf1),containsValue(e.p1_buf0)&&(this.buf0=e.p1_buf0),containsValue(e.p1_buf19)&&(this.buf19=e.p1_buf19),containsValue(e.p1_buf18)&&(this.buf18=e.p1_buf18),containsValue(e.p1_buf17)&&(this.buf17=e.p1_buf17),containsValue(e.p1_buf16)&&(this.buf16=e.p1_buf16),containsValue(e.p1_buf15)&&(this.buf15=e.p1_buf15),containsValue(e.p1_buf14)&&(this.buf14=e.p1_buf14),containsValue(e.p1_buf13)&&(this.buf13=e.p1_buf13),containsValue(e.p1_buf12)&&(this.buf12=e.p1_buf12),containsValue(e.p1_buf11)&&(this.buf11=e.p1_buf11),containsValue(e.p1_buf10)&&(this.buf10=e.p1_buf10),containsValue(e.p1_buf29)&&(this.buf29=e.p1_buf29),containsValue(e.p1_buf28)&&(this.buf28=e.p1_buf28),containsValue(e.p1_buf27)&&(this.buf27=e.p1_buf27),containsValue(e.p1_buf26)&&(this.buf26=e.p1_buf26),containsValue(e.p1_buf25)&&(this.buf25=e.p1_buf25),containsValue(e.p1_buf24)&&(this.buf24=e.p1_buf24),containsValue(e.p1_buf23)&&(this.buf23=e.p1_buf23),containsValue(e.p1_buf22)&&(this.buf22=e.p1_buf22),containsValue(e.p1_buf21)&&(this.buf21=e.p1_buf21),containsValue(e.p1_buf20)&&(this.buf20=e.p1_buf20),containsValue(e.p1_buf39)&&(this.buf39=e.p1_buf39),containsValue(e.p1_buf38)&&(this.buf38=e.p1_buf38),containsValue(e.p1_buf37)&&(this.buf37=e.p1_buf37),containsValue(e.p1_buf36)&&(this.buf36=e.p1_buf36),containsValue(e.p1_buf35)&&(this.buf35=e.p1_buf35),containsValue(e.p1_buf34)&&(this.buf34=e.p1_buf34),containsValue(e.p1_buf33)&&(this.buf33=e.p1_buf33),containsValue(e.p1_buf32)&&(this.buf32=e.p1_buf32),containsValue(e.p1_buf31)&&(this.buf31=e.p1_buf31),containsValue(e.p1_buf30)&&(this.buf30=e.p1_buf30),containsValue(e.p1_buf49)&&(this.buf49=e.p1_buf49),containsValue(e.p1_buf48)&&(this.buf48=e.p1_buf48),containsValue(e.p1_buf47)&&(this.buf47=e.p1_buf47),containsValue(e.p1_buf46)&&(this.buf46=e.p1_buf46),containsValue(e.p1_buf45)&&(this.buf45=e.p1_buf45),containsValue(e.p1_buf44)&&(this.buf44=e.p1_buf44),containsValue(e.p1_buf43)&&(this.buf43=e.p1_buf43),containsValue(e.p1_buf42)&&(this.buf42=e.p1_buf42),containsValue(e.p1_buf41)&&(this.buf41=e.p1_buf41),containsValue(e.p1_buf40)&&(this.buf40=e.p1_buf40),containsValue(e.p1_noteNumber)&&(this.noteNumber=e.p1_noteNumber),containsValue(e.p1_isMuted)&&(this.isMuted=e.p1_isMuted)),this.p_83=new RNBOSubpatcher_477,this.p_83.setEngineAndPatcher(this.getEngine(),this),this.p_83.initialize(getSubState(e,\"p_s01\")),this.p_83.setParameterOffset(this.getParameterOffset(this.p_83)),this.p_84=new RNBOSubpatcher_478,this.p_84.setEngineAndPatcher(this.getEngine(),this),this.p_84.initialize(getSubState(e,\"p_s12\")),this.p_84.setParameterOffset(this.getParameterOffset(this.p_84)),this.p_85=new RNBOSubpatcher_479,this.p_85.setEngineAndPatcher(this.getEngine(),this),this.p_85.initialize(getSubState(e,\"p_s13\")),this.p_85.setParameterOffset(this.getParameterOffset(this.p_85)),this.p_86=new RNBOSubpatcher_480,this.p_86.setEngineAndPatcher(this.getEngine(),this),this.p_86.initialize(getSubState(e,\"p_s10\")),this.p_86.setParameterOffset(this.getParameterOffset(this.p_86)),this.p_87=new RNBOSubpatcher_481,this.p_87.setEngineAndPatcher(this.getEngine(),this),this.p_87.initialize(getSubState(e,\"p_s11\")),this.p_87.setParameterOffset(this.getParameterOffset(this.p_87)),this.p_88=new RNBOSubpatcher_482,this.p_88.setEngineAndPatcher(this.getEngine(),this),this.p_88.initialize(getSubState(e,\"p_s03\")),this.p_88.setParameterOffset(this.getParameterOffset(this.p_88)),this.p_89=new RNBOSubpatcher_483,this.p_89.setEngineAndPatcher(this.getEngine(),this),this.p_89.initialize(getSubState(e,\"p_s02\")),this.p_89.setParameterOffset(this.getParameterOffset(this.p_89)),this.p_90=new RNBOSubpatcher_484,this.p_90.setEngineAndPatcher(this.getEngine(),this),this.p_90.initialize(getSubState(e,\"p_s08\")),this.p_90.setParameterOffset(this.getParameterOffset(this.p_90)),this.p_91=new RNBOSubpatcher_485,this.p_91.setEngineAndPatcher(this.getEngine(),this),this.p_91.initialize(getSubState(e,\"p_s09\")),this.p_91.setParameterOffset(this.getParameterOffset(this.p_91)),this.p_92=new RNBOSubpatcher_486,this.p_92.setEngineAndPatcher(this.getEngine(),this),this.p_92.initialize(getSubState(e,\"p_s06\")),this.p_92.setParameterOffset(this.getParameterOffset(this.p_92)),this.p_93=new RNBOSubpatcher_487,this.p_93.setEngineAndPatcher(this.getEngine(),this),this.p_93.initialize(getSubState(e,\"p_s07\")),this.p_93.setParameterOffset(this.getParameterOffset(this.p_93)),this.p_94=new RNBOSubpatcher_488,this.p_94.setEngineAndPatcher(this.getEngine(),this),this.p_94.initialize(getSubState(e,\"p_s04\")),this.p_94.setParameterOffset(this.getParameterOffset(this.p_94)),this.p_95=new RNBOSubpatcher_489,this.p_95.setEngineAndPatcher(this.getEngine(),this),this.p_95.initialize(getSubState(e,\"p_s05\")),this.p_95.setParameterOffset(this.getParameterOffset(this.p_95)),this.p_96=new RNBOSubpatcher_490,this.p_96.setEngineAndPatcher(this.getEngine(),this),this.p_96.initialize(getSubState(e,\"p_s15\")),this.p_96.setParameterOffset(this.getParameterOffset(this.p_96)),this.p_97=new RNBOSubpatcher_491,this.p_97.setEngineAndPatcher(this.getEngine(),this),this.p_97.initialize(getSubState(e,\"p_s14\")),this.p_97.setParameterOffset(this.getParameterOffset(this.p_97)),this.p_98=new RNBOSubpatcher_492,this.p_98.setEngineAndPatcher(this.getEngine(),this),this.p_98.initialize(getSubState(e,\"p_s19\")),this.p_98.setParameterOffset(this.getParameterOffset(this.p_98)),this.p_99=new RNBOSubpatcher_493,this.p_99.setEngineAndPatcher(this.getEngine(),this),this.p_99.initialize(getSubState(e,\"p_s16\")),this.p_99.setParameterOffset(this.getParameterOffset(this.p_99)),this.p_100=new RNBOSubpatcher_494,this.p_100.setEngineAndPatcher(this.getEngine(),this),this.p_100.initialize(getSubState(e,\"p_s17\")),this.p_100.setParameterOffset(this.getParameterOffset(this.p_100)),this.p_101=new RNBOSubpatcher_495,this.p_101.setEngineAndPatcher(this.getEngine(),this),this.p_101.initialize(getSubState(e,\"p_s18\")),this.p_101.setParameterOffset(this.getParameterOffset(this.p_101))}getPreset(e){this.p_83.getPreset(getSubState(getSubState(e,\"__sps\"),\"event filter\")),this.p_84.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-146\")),this.p_85.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-148\")),this.p_86.getPreset(getSubState(getSubState(e,\"__sps\"),\"random[1]\")),this.p_87.getPreset(getSubState(getSubState(e,\"__sps\"),\"fm_params[1]\")),this.p_88.getPreset(getSubState(getSubState(e,\"__sps\"),\"voice capping\")),this.p_89.getPreset(getSubState(getSubState(e,\"__sps\"),\"event filter[1]\")),this.p_90.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-154\")),this.p_91.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-156\")),this.p_92.getPreset(getSubState(getSubState(e,\"__sps\"),\"fm_params\")),this.p_93.getPreset(getSubState(getSubState(e,\"__sps\"),\"random\")),this.p_94.getPreset(getSubState(getSubState(e,\"__sps\"),\"voice capping[1]\")),this.p_95.getPreset(getSubState(getSubState(e,\"__sps\"),\"drum_listener\")),this.p_96.getPreset(getSubState(getSubState(e,\"__sps\"),\"groovy\")),this.p_97.getPreset(getSubState(getSubState(e,\"__sps\"),\"perc_params\")),this.p_98.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-125\")),this.p_99.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-49\")),this.p_100.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-23\")),this.p_101.getPreset(getSubState(getSubState(e,\"__sps\"),\"p_obj-9\"))}setPreset(e,t){this.updateTime(e)}processTempoEvent(e,t){this.updateTime(e),this.globaltransport_setTempo(t,!1)&&(this.p_83.processTempoEvent(e,t),this.p_84.processTempoEvent(e,t),this.p_85.processTempoEvent(e,t),this.p_86.processTempoEvent(e,t),this.p_87.processTempoEvent(e,t),this.p_88.processTempoEvent(e,t),this.p_89.processTempoEvent(e,t),this.p_90.processTempoEvent(e,t),this.p_91.processTempoEvent(e,t),this.p_92.processTempoEvent(e,t),this.p_93.processTempoEvent(e,t),this.p_94.processTempoEvent(e,t),this.p_95.processTempoEvent(e,t),this.p_96.processTempoEvent(e,t),this.p_97.processTempoEvent(e,t),this.p_98.processTempoEvent(e,t),this.p_99.processTempoEvent(e,t),this.p_100.processTempoEvent(e,t),this.p_101.processTempoEvent(e,t),this.translate_01_onTempoChanged(t))}processTransportEvent(e,t){this.updateTime(e),this.globaltransport_setState(t,!1)&&(this.p_83.processTransportEvent(e,t),this.p_84.processTransportEvent(e,t),this.p_85.processTransportEvent(e,t),this.p_86.processTransportEvent(e,t),this.p_87.processTransportEvent(e,t),this.p_88.processTransportEvent(e,t),this.p_89.processTransportEvent(e,t),this.p_90.processTransportEvent(e,t),this.p_91.processTransportEvent(e,t),this.p_92.processTransportEvent(e,t),this.p_93.processTransportEvent(e,t),this.p_94.processTransportEvent(e,t),this.p_95.processTransportEvent(e,t),this.p_96.processTransportEvent(e,t),this.p_97.processTransportEvent(e,t),this.p_98.processTransportEvent(e,t),this.p_99.processTransportEvent(e,t),this.p_100.processTransportEvent(e,t),this.p_101.processTransportEvent(e,t))}processBeatTimeEvent(e,t){this.updateTime(e),this.globaltransport_setBeatTime(t,!1)&&(this.p_83.processBeatTimeEvent(e,t),this.p_84.processBeatTimeEvent(e,t),this.p_85.processBeatTimeEvent(e,t),this.p_86.processBeatTimeEvent(e,t),this.p_87.processBeatTimeEvent(e,t),this.p_88.processBeatTimeEvent(e,t),this.p_89.processBeatTimeEvent(e,t),this.p_90.processBeatTimeEvent(e,t),this.p_91.processBeatTimeEvent(e,t),this.p_92.processBeatTimeEvent(e,t),this.p_93.processBeatTimeEvent(e,t),this.p_94.processBeatTimeEvent(e,t),this.p_95.processBeatTimeEvent(e,t),this.p_96.processBeatTimeEvent(e,t),this.p_97.processBeatTimeEvent(e,t),this.p_98.processBeatTimeEvent(e,t),this.p_99.processBeatTimeEvent(e,t),this.p_100.processBeatTimeEvent(e,t),this.p_101.processBeatTimeEvent(e,t))}onSampleRateChanged(e){this.translate_01_onSampleRateChanged(e)}processTimeSignatureEvent(e,t,s){this.updateTime(e),this.globaltransport_setTimeSignature(t,s,!1)&&(this.p_83.processTimeSignatureEvent(e,t,s),this.p_84.processTimeSignatureEvent(e,t,s),this.p_85.processTimeSignatureEvent(e,t,s),this.p_86.processTimeSignatureEvent(e,t,s),this.p_87.processTimeSignatureEvent(e,t,s),this.p_88.processTimeSignatureEvent(e,t,s),this.p_89.processTimeSignatureEvent(e,t,s),this.p_90.processTimeSignatureEvent(e,t,s),this.p_91.processTimeSignatureEvent(e,t,s),this.p_92.processTimeSignatureEvent(e,t,s),this.p_93.processTimeSignatureEvent(e,t,s),this.p_94.processTimeSignatureEvent(e,t,s),this.p_95.processTimeSignatureEvent(e,t,s),this.p_96.processTimeSignatureEvent(e,t,s),this.p_97.processTimeSignatureEvent(e,t,s),this.p_98.processTimeSignatureEvent(e,t,s),this.p_99.processTimeSignatureEvent(e,t,s),this.p_100.processTimeSignatureEvent(e,t,s),this.p_101.processTimeSignatureEvent(e,t,s))}setParameterValue(e,t,s){this.updateTime(s),(e-=0)<this.p_83.getNumParameters()&&this.p_83.setParameterValue(e,t,s),(e-=this.p_83.getNumParameters())<this.p_84.getNumParameters()&&this.p_84.setParameterValue(e,t,s),(e-=this.p_84.getNumParameters())<this.p_85.getNumParameters()&&this.p_85.setParameterValue(e,t,s),(e-=this.p_85.getNumParameters())<this.p_86.getNumParameters()&&this.p_86.setParameterValue(e,t,s),(e-=this.p_86.getNumParameters())<this.p_87.getNumParameters()&&this.p_87.setParameterValue(e,t,s),(e-=this.p_87.getNumParameters())<this.p_88.getNumParameters()&&this.p_88.setParameterValue(e,t,s),(e-=this.p_88.getNumParameters())<this.p_89.getNumParameters()&&this.p_89.setParameterValue(e,t,s),(e-=this.p_89.getNumParameters())<this.p_90.getNumParameters()&&this.p_90.setParameterValue(e,t,s),(e-=this.p_90.getNumParameters())<this.p_91.getNumParameters()&&this.p_91.setParameterValue(e,t,s),(e-=this.p_91.getNumParameters())<this.p_92.getNumParameters()&&this.p_92.setParameterValue(e,t,s),(e-=this.p_92.getNumParameters())<this.p_93.getNumParameters()&&this.p_93.setParameterValue(e,t,s),(e-=this.p_93.getNumParameters())<this.p_94.getNumParameters()&&this.p_94.setParameterValue(e,t,s),(e-=this.p_94.getNumParameters())<this.p_95.getNumParameters()&&this.p_95.setParameterValue(e,t,s),(e-=this.p_95.getNumParameters())<this.p_96.getNumParameters()&&this.p_96.setParameterValue(e,t,s),(e-=this.p_96.getNumParameters())<this.p_97.getNumParameters()&&this.p_97.setParameterValue(e,t,s),(e-=this.p_97.getNumParameters())<this.p_98.getNumParameters()&&this.p_98.setParameterValue(e,t,s),(e-=this.p_98.getNumParameters())<this.p_99.getNumParameters()&&this.p_99.setParameterValue(e,t,s),(e-=this.p_99.getNumParameters())<this.p_100.getNumParameters()&&this.p_100.setParameterValue(e,t,s),(e-=this.p_100.getNumParameters())<this.p_101.getNumParameters()&&this.p_101.setParameterValue(e,t,s)}processParameterEvent(e,t,s){this.setParameterValue(e,t,s)}processNormalizedParameterEvent(e,t,s){this.setParameterValueNormalized(e,t,s)}getParameterValue(e){return(e-=0)<this.p_83.getNumParameters()?this.p_83.getParameterValue(e):(e-=this.p_83.getNumParameters())<this.p_84.getNumParameters()?this.p_84.getParameterValue(e):(e-=this.p_84.getNumParameters())<this.p_85.getNumParameters()?this.p_85.getParameterValue(e):(e-=this.p_85.getNumParameters())<this.p_86.getNumParameters()?this.p_86.getParameterValue(e):(e-=this.p_86.getNumParameters())<this.p_87.getNumParameters()?this.p_87.getParameterValue(e):(e-=this.p_87.getNumParameters())<this.p_88.getNumParameters()?this.p_88.getParameterValue(e):(e-=this.p_88.getNumParameters())<this.p_89.getNumParameters()?this.p_89.getParameterValue(e):(e-=this.p_89.getNumParameters())<this.p_90.getNumParameters()?this.p_90.getParameterValue(e):(e-=this.p_90.getNumParameters())<this.p_91.getNumParameters()?this.p_91.getParameterValue(e):(e-=this.p_91.getNumParameters())<this.p_92.getNumParameters()?this.p_92.getParameterValue(e):(e-=this.p_92.getNumParameters())<this.p_93.getNumParameters()?this.p_93.getParameterValue(e):(e-=this.p_93.getNumParameters())<this.p_94.getNumParameters()?this.p_94.getParameterValue(e):(e-=this.p_94.getNumParameters())<this.p_95.getNumParameters()?this.p_95.getParameterValue(e):(e-=this.p_95.getNumParameters())<this.p_96.getNumParameters()?this.p_96.getParameterValue(e):(e-=this.p_96.getNumParameters())<this.p_97.getNumParameters()?this.p_97.getParameterValue(e):(e-=this.p_97.getNumParameters())<this.p_98.getNumParameters()?this.p_98.getParameterValue(e):(e-=this.p_98.getNumParameters())<this.p_99.getNumParameters()?this.p_99.getParameterValue(e):(e-=this.p_99.getNumParameters())<this.p_100.getNumParameters()?this.p_100.getParameterValue(e):(e-=this.p_100.getNumParameters())<this.p_101.getNumParameters()?this.p_101.getParameterValue(e):0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters()+this.p_92.getNumParameters()+this.p_93.getNumParameters()+this.p_94.getNumParameters()+this.p_95.getNumParameters()+this.p_96.getNumParameters()+this.p_97.getNumParameters()+this.p_98.getNumParameters()+this.p_99.getNumParameters()+this.p_100.getNumParameters()+this.p_101.getNumParameters()}getParameterName(e){return(e-=0)<this.p_83.getNumParameters()?this.p_83.getParameterName(e):(e-=this.p_83.getNumParameters())<this.p_84.getNumParameters()?this.p_84.getParameterName(e):(e-=this.p_84.getNumParameters())<this.p_85.getNumParameters()?this.p_85.getParameterName(e):(e-=this.p_85.getNumParameters())<this.p_86.getNumParameters()?this.p_86.getParameterName(e):(e-=this.p_86.getNumParameters())<this.p_87.getNumParameters()?this.p_87.getParameterName(e):(e-=this.p_87.getNumParameters())<this.p_88.getNumParameters()?this.p_88.getParameterName(e):(e-=this.p_88.getNumParameters())<this.p_89.getNumParameters()?this.p_89.getParameterName(e):(e-=this.p_89.getNumParameters())<this.p_90.getNumParameters()?this.p_90.getParameterName(e):(e-=this.p_90.getNumParameters())<this.p_91.getNumParameters()?this.p_91.getParameterName(e):(e-=this.p_91.getNumParameters())<this.p_92.getNumParameters()?this.p_92.getParameterName(e):(e-=this.p_92.getNumParameters())<this.p_93.getNumParameters()?this.p_93.getParameterName(e):(e-=this.p_93.getNumParameters())<this.p_94.getNumParameters()?this.p_94.getParameterName(e):(e-=this.p_94.getNumParameters())<this.p_95.getNumParameters()?this.p_95.getParameterName(e):(e-=this.p_95.getNumParameters())<this.p_96.getNumParameters()?this.p_96.getParameterName(e):(e-=this.p_96.getNumParameters())<this.p_97.getNumParameters()?this.p_97.getParameterName(e):(e-=this.p_97.getNumParameters())<this.p_98.getNumParameters()?this.p_98.getParameterName(e):(e-=this.p_98.getNumParameters())<this.p_99.getNumParameters()?this.p_99.getParameterName(e):(e-=this.p_99.getNumParameters())<this.p_100.getNumParameters()?this.p_100.getParameterName(e):(e-=this.p_100.getNumParameters())<this.p_101.getNumParameters()?this.p_101.getParameterName(e):\"bogus\"}getParameterId(e){return(e-=0)<this.p_83.getNumParameters()?this.p_83.getParameterId(e):(e-=this.p_83.getNumParameters())<this.p_84.getNumParameters()?this.p_84.getParameterId(e):(e-=this.p_84.getNumParameters())<this.p_85.getNumParameters()?this.p_85.getParameterId(e):(e-=this.p_85.getNumParameters())<this.p_86.getNumParameters()?this.p_86.getParameterId(e):(e-=this.p_86.getNumParameters())<this.p_87.getNumParameters()?this.p_87.getParameterId(e):(e-=this.p_87.getNumParameters())<this.p_88.getNumParameters()?this.p_88.getParameterId(e):(e-=this.p_88.getNumParameters())<this.p_89.getNumParameters()?this.p_89.getParameterId(e):(e-=this.p_89.getNumParameters())<this.p_90.getNumParameters()?this.p_90.getParameterId(e):(e-=this.p_90.getNumParameters())<this.p_91.getNumParameters()?this.p_91.getParameterId(e):(e-=this.p_91.getNumParameters())<this.p_92.getNumParameters()?this.p_92.getParameterId(e):(e-=this.p_92.getNumParameters())<this.p_93.getNumParameters()?this.p_93.getParameterId(e):(e-=this.p_93.getNumParameters())<this.p_94.getNumParameters()?this.p_94.getParameterId(e):(e-=this.p_94.getNumParameters())<this.p_95.getNumParameters()?this.p_95.getParameterId(e):(e-=this.p_95.getNumParameters())<this.p_96.getNumParameters()?this.p_96.getParameterId(e):(e-=this.p_96.getNumParameters())<this.p_97.getNumParameters()?this.p_97.getParameterId(e):(e-=this.p_97.getNumParameters())<this.p_98.getNumParameters()?this.p_98.getParameterId(e):(e-=this.p_98.getNumParameters())<this.p_99.getNumParameters()?this.p_99.getParameterId(e):(e-=this.p_99.getNumParameters())<this.p_100.getNumParameters()?this.p_100.getParameterId(e):(e-=this.p_100.getNumParameters())<this.p_101.getNumParameters()?this.p_101.getParameterId(e):\"bogus\"}getParameterInfo(e,t){(e-=0)<this.p_83.getNumParameters()&&this.p_83.getParameterInfo(e,t),(e-=this.p_83.getNumParameters())<this.p_84.getNumParameters()&&this.p_84.getParameterInfo(e,t),(e-=this.p_84.getNumParameters())<this.p_85.getNumParameters()&&this.p_85.getParameterInfo(e,t),(e-=this.p_85.getNumParameters())<this.p_86.getNumParameters()&&this.p_86.getParameterInfo(e,t),(e-=this.p_86.getNumParameters())<this.p_87.getNumParameters()&&this.p_87.getParameterInfo(e,t),(e-=this.p_87.getNumParameters())<this.p_88.getNumParameters()&&this.p_88.getParameterInfo(e,t),(e-=this.p_88.getNumParameters())<this.p_89.getNumParameters()&&this.p_89.getParameterInfo(e,t),(e-=this.p_89.getNumParameters())<this.p_90.getNumParameters()&&this.p_90.getParameterInfo(e,t),(e-=this.p_90.getNumParameters())<this.p_91.getNumParameters()&&this.p_91.getParameterInfo(e,t),(e-=this.p_91.getNumParameters())<this.p_92.getNumParameters()&&this.p_92.getParameterInfo(e,t),(e-=this.p_92.getNumParameters())<this.p_93.getNumParameters()&&this.p_93.getParameterInfo(e,t),(e-=this.p_93.getNumParameters())<this.p_94.getNumParameters()&&this.p_94.getParameterInfo(e,t),(e-=this.p_94.getNumParameters())<this.p_95.getNumParameters()&&this.p_95.getParameterInfo(e,t),(e-=this.p_95.getNumParameters())<this.p_96.getNumParameters()&&this.p_96.getParameterInfo(e,t),(e-=this.p_96.getNumParameters())<this.p_97.getNumParameters()&&this.p_97.getParameterInfo(e,t),(e-=this.p_97.getNumParameters())<this.p_98.getNumParameters()&&this.p_98.getParameterInfo(e,t),(e-=this.p_98.getNumParameters())<this.p_99.getNumParameters()&&this.p_99.getParameterInfo(e,t),(e-=this.p_99.getNumParameters())<this.p_100.getNumParameters()&&this.p_100.getParameterInfo(e,t),(e-=this.p_100.getNumParameters())<this.p_101.getNumParameters()&&this.p_101.getParameterInfo(e,t)}sendParameter(e){this.getEngine().notifyParameterValueChanged(e,this.getParameterValue(e))}getParameterOffset(e){return e==this.p_83?0:e==this.p_84?0+this.p_83.getNumParameters():e==this.p_85?0+this.p_83.getNumParameters()+this.p_84.getNumParameters():e==this.p_86?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters():e==this.p_87?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters():e==this.p_88?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters():e==this.p_89?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters():e==this.p_90?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters():e==this.p_91?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters():e==this.p_92?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters():e==this.p_93?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters()+this.p_92.getNumParameters():e==this.p_94?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters()+this.p_92.getNumParameters()+this.p_93.getNumParameters():e==this.p_95?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters()+this.p_92.getNumParameters()+this.p_93.getNumParameters()+this.p_94.getNumParameters():e==this.p_96?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters()+this.p_92.getNumParameters()+this.p_93.getNumParameters()+this.p_94.getNumParameters()+this.p_95.getNumParameters():e==this.p_97?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters()+this.p_92.getNumParameters()+this.p_93.getNumParameters()+this.p_94.getNumParameters()+this.p_95.getNumParameters()+this.p_96.getNumParameters():e==this.p_98?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters()+this.p_92.getNumParameters()+this.p_93.getNumParameters()+this.p_94.getNumParameters()+this.p_95.getNumParameters()+this.p_96.getNumParameters()+this.p_97.getNumParameters():e==this.p_99?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters()+this.p_92.getNumParameters()+this.p_93.getNumParameters()+this.p_94.getNumParameters()+this.p_95.getNumParameters()+this.p_96.getNumParameters()+this.p_97.getNumParameters()+this.p_98.getNumParameters():e==this.p_100?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters()+this.p_92.getNumParameters()+this.p_93.getNumParameters()+this.p_94.getNumParameters()+this.p_95.getNumParameters()+this.p_96.getNumParameters()+this.p_97.getNumParameters()+this.p_98.getNumParameters()+this.p_99.getNumParameters():e==this.p_101?0+this.p_83.getNumParameters()+this.p_84.getNumParameters()+this.p_85.getNumParameters()+this.p_86.getNumParameters()+this.p_87.getNumParameters()+this.p_88.getNumParameters()+this.p_89.getNumParameters()+this.p_90.getNumParameters()+this.p_91.getNumParameters()+this.p_92.getNumParameters()+this.p_93.getNumParameters()+this.p_94.getNumParameters()+this.p_95.getNumParameters()+this.p_96.getNumParameters()+this.p_97.getNumParameters()+this.p_98.getNumParameters()+this.p_99.getNumParameters()+this.p_100.getNumParameters():0}applyStepsToNormalizedParameterValue(e,t){if(1==t)e>0&&(e=1);else{let s=1/(t-1);e=1*rnbo_fround(e/s*1/1)*s}return e}convertToNormalizedParameterValue(e,t){return(e-=0)<this.p_83.getNumParameters()?this.p_83.convertToNormalizedParameterValue(e,t):(e-=this.p_83.getNumParameters())<this.p_84.getNumParameters()?this.p_84.convertToNormalizedParameterValue(e,t):(e-=this.p_84.getNumParameters())<this.p_85.getNumParameters()?this.p_85.convertToNormalizedParameterValue(e,t):(e-=this.p_85.getNumParameters())<this.p_86.getNumParameters()?this.p_86.convertToNormalizedParameterValue(e,t):(e-=this.p_86.getNumParameters())<this.p_87.getNumParameters()?this.p_87.convertToNormalizedParameterValue(e,t):(e-=this.p_87.getNumParameters())<this.p_88.getNumParameters()?this.p_88.convertToNormalizedParameterValue(e,t):(e-=this.p_88.getNumParameters())<this.p_89.getNumParameters()?this.p_89.convertToNormalizedParameterValue(e,t):(e-=this.p_89.getNumParameters())<this.p_90.getNumParameters()?this.p_90.convertToNormalizedParameterValue(e,t):(e-=this.p_90.getNumParameters())<this.p_91.getNumParameters()?this.p_91.convertToNormalizedParameterValue(e,t):(e-=this.p_91.getNumParameters())<this.p_92.getNumParameters()?this.p_92.convertToNormalizedParameterValue(e,t):(e-=this.p_92.getNumParameters())<this.p_93.getNumParameters()?this.p_93.convertToNormalizedParameterValue(e,t):(e-=this.p_93.getNumParameters())<this.p_94.getNumParameters()?this.p_94.convertToNormalizedParameterValue(e,t):(e-=this.p_94.getNumParameters())<this.p_95.getNumParameters()?this.p_95.convertToNormalizedParameterValue(e,t):(e-=this.p_95.getNumParameters())<this.p_96.getNumParameters()?this.p_96.convertToNormalizedParameterValue(e,t):(e-=this.p_96.getNumParameters())<this.p_97.getNumParameters()?this.p_97.convertToNormalizedParameterValue(e,t):(e-=this.p_97.getNumParameters())<this.p_98.getNumParameters()?this.p_98.convertToNormalizedParameterValue(e,t):(e-=this.p_98.getNumParameters())<this.p_99.getNumParameters()?this.p_99.convertToNormalizedParameterValue(e,t):(e-=this.p_99.getNumParameters())<this.p_100.getNumParameters()?this.p_100.convertToNormalizedParameterValue(e,t):(e-=this.p_100.getNumParameters())<this.p_101.getNumParameters()?this.p_101.convertToNormalizedParameterValue(e,t):t}convertFromNormalizedParameterValue(e,t){return t=t<0?0:t>1?1:t,(e-=0)<this.p_83.getNumParameters()?this.p_83.convertFromNormalizedParameterValue(e,t):(e-=this.p_83.getNumParameters())<this.p_84.getNumParameters()?this.p_84.convertFromNormalizedParameterValue(e,t):(e-=this.p_84.getNumParameters())<this.p_85.getNumParameters()?this.p_85.convertFromNormalizedParameterValue(e,t):(e-=this.p_85.getNumParameters())<this.p_86.getNumParameters()?this.p_86.convertFromNormalizedParameterValue(e,t):(e-=this.p_86.getNumParameters())<this.p_87.getNumParameters()?this.p_87.convertFromNormalizedParameterValue(e,t):(e-=this.p_87.getNumParameters())<this.p_88.getNumParameters()?this.p_88.convertFromNormalizedParameterValue(e,t):(e-=this.p_88.getNumParameters())<this.p_89.getNumParameters()?this.p_89.convertFromNormalizedParameterValue(e,t):(e-=this.p_89.getNumParameters())<this.p_90.getNumParameters()?this.p_90.convertFromNormalizedParameterValue(e,t):(e-=this.p_90.getNumParameters())<this.p_91.getNumParameters()?this.p_91.convertFromNormalizedParameterValue(e,t):(e-=this.p_91.getNumParameters())<this.p_92.getNumParameters()?this.p_92.convertFromNormalizedParameterValue(e,t):(e-=this.p_92.getNumParameters())<this.p_93.getNumParameters()?this.p_93.convertFromNormalizedParameterValue(e,t):(e-=this.p_93.getNumParameters())<this.p_94.getNumParameters()?this.p_94.convertFromNormalizedParameterValue(e,t):(e-=this.p_94.getNumParameters())<this.p_95.getNumParameters()?this.p_95.convertFromNormalizedParameterValue(e,t):(e-=this.p_95.getNumParameters())<this.p_96.getNumParameters()?this.p_96.convertFromNormalizedParameterValue(e,t):(e-=this.p_96.getNumParameters())<this.p_97.getNumParameters()?this.p_97.convertFromNormalizedParameterValue(e,t):(e-=this.p_97.getNumParameters())<this.p_98.getNumParameters()?this.p_98.convertFromNormalizedParameterValue(e,t):(e-=this.p_98.getNumParameters())<this.p_99.getNumParameters()?this.p_99.convertFromNormalizedParameterValue(e,t):(e-=this.p_99.getNumParameters())<this.p_100.getNumParameters()?this.p_100.convertFromNormalizedParameterValue(e,t):(e-=this.p_100.getNumParameters())<this.p_101.getNumParameters()?this.p_101.convertFromNormalizedParameterValue(e,t):t}constrainParameterValue(e,t){return(e-=0)<this.p_83.getNumParameters()?this.p_83.constrainParameterValue(e,t):(e-=this.p_83.getNumParameters())<this.p_84.getNumParameters()?this.p_84.constrainParameterValue(e,t):(e-=this.p_84.getNumParameters())<this.p_85.getNumParameters()?this.p_85.constrainParameterValue(e,t):(e-=this.p_85.getNumParameters())<this.p_86.getNumParameters()?this.p_86.constrainParameterValue(e,t):(e-=this.p_86.getNumParameters())<this.p_87.getNumParameters()?this.p_87.constrainParameterValue(e,t):(e-=this.p_87.getNumParameters())<this.p_88.getNumParameters()?this.p_88.constrainParameterValue(e,t):(e-=this.p_88.getNumParameters())<this.p_89.getNumParameters()?this.p_89.constrainParameterValue(e,t):(e-=this.p_89.getNumParameters())<this.p_90.getNumParameters()?this.p_90.constrainParameterValue(e,t):(e-=this.p_90.getNumParameters())<this.p_91.getNumParameters()?this.p_91.constrainParameterValue(e,t):(e-=this.p_91.getNumParameters())<this.p_92.getNumParameters()?this.p_92.constrainParameterValue(e,t):(e-=this.p_92.getNumParameters())<this.p_93.getNumParameters()?this.p_93.constrainParameterValue(e,t):(e-=this.p_93.getNumParameters())<this.p_94.getNumParameters()?this.p_94.constrainParameterValue(e,t):(e-=this.p_94.getNumParameters())<this.p_95.getNumParameters()?this.p_95.constrainParameterValue(e,t):(e-=this.p_95.getNumParameters())<this.p_96.getNumParameters()?this.p_96.constrainParameterValue(e,t):(e-=this.p_96.getNumParameters())<this.p_97.getNumParameters()?this.p_97.constrainParameterValue(e,t):(e-=this.p_97.getNumParameters())<this.p_98.getNumParameters()?this.p_98.constrainParameterValue(e,t):(e-=this.p_98.getNumParameters())<this.p_99.getNumParameters()?this.p_99.constrainParameterValue(e,t):(e-=this.p_99.getNumParameters())<this.p_100.getNumParameters()?this.p_100.constrainParameterValue(e,t):(e-=this.p_100.getNumParameters())<this.p_101.getNumParameters()?this.p_101.constrainParameterValue(e,t):t}scheduleParamInit(e,t){this.paramInitIndices.push(e),this.paramInitOrder.push(t)}processParamInitEvents(){this.listquicksort(this.paramInitOrder,this.paramInitIndices,0,this.paramInitOrder.length-1,!0);for(var e=0;e<this.paramInitOrder.length;e++)this.getEngine().scheduleParameterChange(this.paramInitIndices[e],this.getParameterValue(this.paramInitIndices[e]),0)}processClockEvent(e,t,s,a){switch(this.updateTime(e),t){case 870225038:this.loadmess_08_startupbang_bang();break;case 1733719949:this.loadmess_09_startupbang_bang();break;case-1697752436:this.loadmess_10_startupbang_bang();break;case-1720259695:this.loadmess_11_startupbang_bang();break;case-611950441:this.edge_01_onout_bang();break;case-1584063977:this.edge_01_offout_bang();break;case-1313779944:this.edge_02_onout_bang();break;case 1151781846:this.edge_02_offout_bang();break;case 6730127:this.loadmess_12_startupbang_bang();break;case-617739833:this.loadmess_13_startupbang_bang();break;case 1086742730:this.loadmess_14_startupbang_bang();break;case-1481234744:this.loadmess_15_startupbang_bang();break;case 29237386:this.loadmess_16_startupbang_bang();break;case-834257525:this.loadmess_17_startupbang_bang();break;case 1950237641:this.loadmess_18_startupbang_bang();break;case-856764784:this.loadmess_19_startupbang_bang();break;case 892732297:this.loadmess_20_startupbang_bang()}}processOutletAtCurrentTime(e,t,s){}processOutletEvent(e,t,s,a){this.updateTime(a),this.processOutletAtCurrentTime(e,t,s)}sendOutlet(e,t){this.getEngine().sendOutlet(this,e,t)}processNumMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm1_listener\"):this.inport_65_value_number_set(a);break;case TAG(\"fm1_unision\"):this.inport_66_value_number_set(a);break;case TAG(\"fm2_listener\"):this.inport_67_value_number_set(a);break;case TAG(\"fm2_unision\"):this.inport_68_value_number_set(a);break;case TAG(\"perc_listener\"):this.inport_69_value_number_set(a);break;case TAG(\"speed\"):this.inport_70_value_number_set(a);break;case TAG(\"b_mode\"):this.inport_71_value_number_set(a);break;case TAG(\"state\"):this.inport_72_value_number_set(a);break;case TAG(\"b_steps\"):this.inport_73_value_number_set(a);break;case TAG(\"c_listener\"):this.inport_74_value_number_set(a);break;case TAG(\"c_mode\"):this.inport_75_value_number_set(a);break;case TAG(\"c_steps\"):this.inport_76_value_number_set(a);break;case TAG(\"a_mode\"):this.inport_77_value_number_set(a);break;case TAG(\"a_steps\"):this.inport_78_value_number_set(a)}this.p_83.processNumMessage(e,t,s,a),this.p_84.processNumMessage(e,t,s,a),this.p_85.processNumMessage(e,t,s,a),this.p_86.processNumMessage(e,t,s,a),this.p_87.processNumMessage(e,t,s,a),this.p_88.processNumMessage(e,t,s,a),this.p_89.processNumMessage(e,t,s,a),this.p_90.processNumMessage(e,t,s,a),this.p_91.processNumMessage(e,t,s,a),this.p_92.processNumMessage(e,t,s,a),this.p_93.processNumMessage(e,t,s,a),this.p_94.processNumMessage(e,t,s,a),this.p_95.processNumMessage(e,t,s,a),this.p_96.processNumMessage(e,t,s,a),this.p_97.processNumMessage(e,t,s,a),this.p_98.processNumMessage(e,t,s,a),this.p_99.processNumMessage(e,t,s,a),this.p_100.processNumMessage(e,t,s,a),this.p_101.processNumMessage(e,t,s,a)}processListMessage(e,t,s,a){switch(this.updateTime(s),e){case TAG(\"fm1_listener\"):this.inport_65_value_list_set(a);break;case TAG(\"fm1_unision\"):this.inport_66_value_list_set(a);break;case TAG(\"fm2_listener\"):this.inport_67_value_list_set(a);break;case TAG(\"fm2_unision\"):this.inport_68_value_list_set(a);break;case TAG(\"perc_listener\"):this.inport_69_value_list_set(a);break;case TAG(\"speed\"):this.inport_70_value_list_set(a);break;case TAG(\"b_mode\"):this.inport_71_value_list_set(a);break;case TAG(\"state\"):this.inport_72_value_list_set(a);break;case TAG(\"b_steps\"):this.inport_73_value_list_set(a);break;case TAG(\"c_listener\"):this.inport_74_value_list_set(a);break;case TAG(\"c_mode\"):this.inport_75_value_list_set(a);break;case TAG(\"c_steps\"):this.inport_76_value_list_set(a);break;case TAG(\"a_mode\"):this.inport_77_value_list_set(a);break;case TAG(\"a_steps\"):this.inport_78_value_list_set(a)}this.p_83.processListMessage(e,t,s,a),this.p_84.processListMessage(e,t,s,a),this.p_85.processListMessage(e,t,s,a),this.p_86.processListMessage(e,t,s,a),this.p_87.processListMessage(e,t,s,a),this.p_88.processListMessage(e,t,s,a),this.p_89.processListMessage(e,t,s,a),this.p_90.processListMessage(e,t,s,a),this.p_91.processListMessage(e,t,s,a),this.p_92.processListMessage(e,t,s,a),this.p_93.processListMessage(e,t,s,a),this.p_94.processListMessage(e,t,s,a),this.p_95.processListMessage(e,t,s,a),this.p_96.processListMessage(e,t,s,a),this.p_97.processListMessage(e,t,s,a),this.p_98.processListMessage(e,t,s,a),this.p_99.processListMessage(e,t,s,a),this.p_100.processListMessage(e,t,s,a),this.p_101.processListMessage(e,t,s,a)}processBangMessage(e,t,s){switch(this.updateTime(s),e){case TAG(\"fm1_listener\"):this.inport_65_value_bang_bang();break;case TAG(\"startupbang\"):TAG(\"loadmess_obj-33\")==t&&this.loadmess_08_startupbang_bang(),TAG(\"loadmess_obj-35\")==t&&this.loadmess_09_startupbang_bang(),TAG(\"loadmess_obj-38\")==t&&this.loadmess_10_startupbang_bang(),TAG(\"loadmess_obj-7\")==t&&this.loadmess_11_startupbang_bang(),TAG(\"loadmess_obj-32\")==t&&this.loadmess_12_startupbang_bang(),TAG(\"loadmess_obj-1\")==t&&this.loadmess_13_startupbang_bang(),TAG(\"loadmess_obj-51\")==t&&this.loadmess_14_startupbang_bang(),TAG(\"loadmess_obj-2\")==t&&this.loadmess_15_startupbang_bang(),TAG(\"loadmess_obj-45\")==t&&this.loadmess_16_startupbang_bang(),TAG(\"loadmess_obj-40\")==t&&this.loadmess_17_startupbang_bang(),TAG(\"loadmess_obj-26\")==t&&this.loadmess_18_startupbang_bang(),TAG(\"loadmess_obj-31\")==t&&this.loadmess_19_startupbang_bang(),TAG(\"loadmess_obj-56\")==t&&this.loadmess_20_startupbang_bang();break;case TAG(\"fm1_unision\"):this.inport_66_value_bang_bang();break;case TAG(\"fm2_listener\"):this.inport_67_value_bang_bang();break;case TAG(\"fm2_unision\"):this.inport_68_value_bang_bang();break;case TAG(\"perc_listener\"):this.inport_69_value_bang_bang();break;case TAG(\"speed\"):this.inport_70_value_bang_bang();break;case TAG(\"b_mode\"):this.inport_71_value_bang_bang();break;case TAG(\"state\"):this.inport_72_value_bang_bang();break;case TAG(\"b_steps\"):this.inport_73_value_bang_bang();break;case TAG(\"c_listener\"):this.inport_74_value_bang_bang();break;case TAG(\"c_mode\"):this.inport_75_value_bang_bang();break;case TAG(\"c_steps\"):this.inport_76_value_bang_bang();break;case TAG(\"a_mode\"):this.inport_77_value_bang_bang();break;case TAG(\"a_steps\"):this.inport_78_value_bang_bang()}this.p_83.processBangMessage(e,t,s),this.p_84.processBangMessage(e,t,s),this.p_85.processBangMessage(e,t,s),this.p_86.processBangMessage(e,t,s),this.p_87.processBangMessage(e,t,s),this.p_88.processBangMessage(e,t,s),this.p_89.processBangMessage(e,t,s),this.p_90.processBangMessage(e,t,s),this.p_91.processBangMessage(e,t,s),this.p_92.processBangMessage(e,t,s),this.p_93.processBangMessage(e,t,s),this.p_94.processBangMessage(e,t,s),this.p_95.processBangMessage(e,t,s),this.p_96.processBangMessage(e,t,s),this.p_97.processBangMessage(e,t,s),this.p_98.processBangMessage(e,t,s),this.p_99.processBangMessage(e,t,s),this.p_100.processBangMessage(e,t,s),this.p_101.processBangMessage(e,t,s)}resolveTag(e){switch(e){case TAG(\"pattern\"):return\"pattern\";case TAG(\"\"):return\"\";case TAG(\"c_event\"):return\"c_event\";case TAG(\"b_event\"):return\"b_event\";case TAG(\"a_event\"):return\"a_event\";case TAG(\"b_index\"):return\"b_index\";case TAG(\"c_index\"):return\"c_index\";case TAG(\"fm1_listener\"):return\"fm1_listener\";case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"loadmess_obj-33\"):return\"loadmess_obj-33\";case TAG(\"fm1_unision\"):return\"fm1_unision\";case TAG(\"fm2_listener\"):return\"fm2_listener\";case TAG(\"loadmess_obj-35\"):return\"loadmess_obj-35\";case TAG(\"fm2_unision\"):return\"fm2_unision\";case TAG(\"perc_listener\"):return\"perc_listener\";case TAG(\"loadmess_obj-38\"):return\"loadmess_obj-38\";case TAG(\"speed\"):return\"speed\";case TAG(\"loadmess_obj-7\"):return\"loadmess_obj-7\";case TAG(\"b_mode\"):return\"b_mode\";case TAG(\"state\"):return\"state\";case TAG(\"b_steps\"):return\"b_steps\";case TAG(\"loadmess_obj-32\"):return\"loadmess_obj-32\";case TAG(\"loadmess_obj-1\"):return\"loadmess_obj-1\";case TAG(\"loadmess_obj-51\"):return\"loadmess_obj-51\";case TAG(\"c_listener\"):return\"c_listener\";case TAG(\"loadmess_obj-2\"):return\"loadmess_obj-2\";case TAG(\"c_mode\"):return\"c_mode\";case TAG(\"c_steps\"):return\"c_steps\";case TAG(\"a_mode\"):return\"a_mode\";case TAG(\"loadmess_obj-45\"):return\"loadmess_obj-45\";case TAG(\"a_steps\"):return\"a_steps\";case TAG(\"loadmess_obj-40\"):return\"loadmess_obj-40\";case TAG(\"loadmess_obj-26\"):return\"loadmess_obj-26\";case TAG(\"loadmess_obj-31\"):return\"loadmess_obj-31\";case TAG(\"loadmess_obj-56\"):return\"loadmess_obj-56\"}var t=this.p_83.resolveTag(e);if(t)return t;var s=this.p_84.resolveTag(e);if(s)return s;var a=this.p_85.resolveTag(e);if(a)return a;var r=this.p_86.resolveTag(e);if(r)return r;var _=this.p_87.resolveTag(e);if(_)return _;var i=this.p_88.resolveTag(e);if(i)return i;var n=this.p_89.resolveTag(e);if(n)return n;var u=this.p_90.resolveTag(e);if(u)return u;var o=this.p_91.resolveTag(e);if(o)return o;var p=this.p_92.resolveTag(e);if(p)return p;var m=this.p_93.resolveTag(e);if(m)return m;var h=this.p_94.resolveTag(e);if(h)return h;var l=this.p_95.resolveTag(e);if(l)return l;var c=this.p_96.resolveTag(e);if(c)return c;var g=this.p_97.resolveTag(e);if(g)return g;var d=this.p_98.resolveTag(e);if(d)return d;var f=this.p_99.resolveTag(e);if(f)return f;var P=this.p_100.resolveTag(e);if(P)return P;var V=this.p_101.resolveTag(e);return V||\"\"}getNumMessages(){return 81}getMessageInfo(e){switch(e){case 0:return{tag:\"pattern\",type:Outport};case 1:return{tag:\"c_event\",type:Outport};case 2:return{tag:\"b_event\",type:Outport};case 3:return{tag:\"a_event\",type:Outport};case 4:return{tag:\"b_index\",type:Outport};case 5:return{tag:\"c_index\",type:Outport};case 6:return{tag:\"fm1_listener\",type:Inport};case 7:return{tag:\"fm1_unision\",type:Inport};case 8:return{tag:\"fm2_listener\",type:Inport};case 9:return{tag:\"fm2_unision\",type:Inport};case 10:return{tag:\"perc_listener\",type:Inport};case 11:return{tag:\"speed\",type:Inport};case 12:return{tag:\"b_mode\",type:Inport};case 13:return{tag:\"state\",type:Inport};case 14:return{tag:\"b_steps\",type:Inport};case 15:return{tag:\"c_listener\",type:Inport};case 16:return{tag:\"c_mode\",type:Inport};case 17:return{tag:\"c_steps\",type:Inport};case 18:return{tag:\"a_mode\",type:Inport};case 19:return{tag:\"a_steps\",type:Inport};case 20:return{tag:\"filter\",type:Outport};case 21:return{tag:\"fm1_r_freq\",type:Inport};case 22:return{tag:\"fm1_r_c1ratio\",type:Inport};case 23:return{tag:\"fm1_r_c2ratio\",type:Inport};case 24:return{tag:\"fm1_r_c3ratio\",type:Inport};case 25:return{tag:\"fm1_r_3to1\",type:Inport};case 26:return{tag:\"fm1_r_2to1\",type:Inport};case 27:return{tag:\"fm1_r_3to2\",type:Inport};case 28:return{tag:\"fm1_r_c1release\",type:Inport};case 29:return{tag:\"fm1_r_c2release\",type:Inport};case 30:return{tag:\"fm1_r_c3release\",type:Inport};case 31:return{tag:\"fm1_r_op1gain\",type:Inport};case 32:return{tag:\"fm1_r_op2gain\",type:Inport};case 33:return{tag:\"fm1_r_op3gain\",type:Inport};case 34:return{tag:\"fm1_r_gain\",type:Inport};case 35:return{tag:\"fm1_freq\",type:Inport};case 36:return{tag:\"fm1_c1ratio\",type:Inport};case 37:return{tag:\"fm1_c2ratio\",type:Inport};case 38:return{tag:\"fm1_c3ratio\",type:Inport};case 39:return{tag:\"fm1_3to1\",type:Inport};case 40:return{tag:\"fm1_2to1\",type:Inport};case 41:return{tag:\"fm1_3to2\",type:Inport};case 42:return{tag:\"fm1_c1release\",type:Inport};case 43:return{tag:\"fm1_c2release\",type:Inport};case 44:return{tag:\"fm1_c3release\",type:Inport};case 45:return{tag:\"fm1_op1gain\",type:Inport};case 46:return{tag:\"fm1_op2gain\",type:Inport};case 47:return{tag:\"fm1_op3gain\",type:Inport};case 48:return{tag:\"fm1_gain\",type:Inport};case 49:return{tag:\"fm2_freq\",type:Inport};case 50:return{tag:\"fm2_c1ratio\",type:Inport};case 51:return{tag:\"fm2_c2ratio\",type:Inport};case 52:return{tag:\"fm2_c3ratio\",type:Inport};case 53:return{tag:\"fm2_3to1\",type:Inport};case 54:return{tag:\"fm2_2to1\",type:Inport};case 55:return{tag:\"fm2_3to2\",type:Inport};case 56:return{tag:\"fm2_c1release\",type:Inport};case 57:return{tag:\"fm2_c2release\",type:Inport};case 58:return{tag:\"fm2_c3release\",type:Inport};case 59:return{tag:\"fm2_op1gain\",type:Inport};case 60:return{tag:\"fm2_op2gain\",type:Inport};case 61:return{tag:\"fm2_op3gain\",type:Inport};case 62:return{tag:\"fm2_gain\",type:Inport};case 63:return{tag:\"fm2_r_freq\",type:Inport};case 64:return{tag:\"fm2_r_c1ratio\",type:Inport};case 65:return{tag:\"fm2_r_c2ratio\",type:Inport};case 66:return{tag:\"fm2_r_c3ratio\",type:Inport};case 67:return{tag:\"fm2_r_3to1\",type:Inport};case 68:return{tag:\"fm2_r_2to1\",type:Inport};case 69:return{tag:\"fm2_r_3to2\",type:Inport};case 70:return{tag:\"fm2_r_c1release\",type:Inport};case 71:return{tag:\"fm2_r_c2release\",type:Inport};case 72:return{tag:\"fm2_r_c3release\",type:Inport};case 73:return{tag:\"fm2_r_op1gain\",type:Inport};case 74:return{tag:\"fm2_r_op2gain\",type:Inport};case 75:return{tag:\"fm2_r_op3gain\",type:Inport};case 76:return{tag:\"fm2_r_gain\",type:Inport};case 77:return{tag:\"perc_sound\",type:Inport};case 78:return{tag:\"perc_transpose\",type:Inport};case 79:return{tag:\"perc_velocity\",type:Inport};case 80:return{tag:\"perc_duration\",type:Inport}}return NullMessageInfo}assign_defaults(){}setEngineAndPatcher(e,t){this._engineInterface=e,this._parentPatcher=t}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this}}rnboObj=new RNBOPatcher;",
  "wasm": "",
  "wasmEncoding": "base64",
  "presets": [
    {
      "name": "main",
      "preset": {}
    }
  ]
}